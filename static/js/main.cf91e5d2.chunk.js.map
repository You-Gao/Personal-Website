{"version":3,"sources":["reportWebVitals.js","home/loading/Loading.js","home/navbar/Navbar.js","home/background/Background.js","home/Home.js","about/navbar/Navbar.js","about/background/Background.js","about/About.js","work/navbar/Navbar.js","work/background/Background.js","work/Work.js","projects/navbar/Navbar.js","projects/background/recent_commits.js","projects/background/Background.js","projects/Projects.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","LoadingAnimation","nameRef","useRef","GsvgRef","tl","gsap","timeline","repeat","ease","YsvgRef","t2","useEffect","fromTo","current","opacity","duration","rotation","y","React","createElement","className","ref","width","height","xmlns","x1","y1","x2","y2","stroke","stroke-width","cx","cy","r","fill","Navbar","navbar","document","querySelector","interval","isFadedOut","fadeOut","to","fadeIn","clearInterval","setInterval","addEventListener","links","querySelectorAll","addBrackets","event","div","target","textNode","firstChild","nodeType","Node","TEXT_NODE","textContent","concat","console","log","style","color","removeBrackets","replace","forEach","link","removeEventListener","Link","href","Background","canvasRef","lastTime","headingRef","mottoRef","likesRef","bottomRef","sphereRef","image1Ref","image2Ref","image3Ref","scene","camera","renderer","isAnimatingHome","delay","x","yoyo","onComplete","THREE","background","window","innerWidth","innerHeight","position","set","canvas","setSize","ambientLight","add","controls","OrbitControls","domElement","enableDamping","dampingFactor","middle_sphere","middle_material","size","middle_points","particles_x","particles_y","particles_z","particlesGeometry","particlesMaterial","i","particle","Math","sin","PI","cos","z","particles_x_copy","clone","particles_y_copy","aspect","updateProjectionMatrix","animate","time","requestAnimationFrame","delta","update","render","init","dispose","traverse","object","geometry","material","Array","isArray","map","textAlign","marginTop","margin","display","justifyContent","rel","src","alt","Home","showContent","setShowContent","useState","timer","setTimeout","clearTimeout","Fragment","class","Loading","includes","Scene","slider","initializeAnimations","ScrollTrigger","getAll","trigger","kill","length","panels","panel","create","start","end","pin","pinSpacing","scrub","refresh","scrollTrigger","toggleActions","markers","utils","toArray","h2","liElements","li","middleTopImg","middleLeftRotatedImg","middleRightRotatedImg","middleBottomImg","handleResize","onbeforeunload","scrollTo","remove","id","marginRight","border","marginLeft","top","left","transform","registerPlugin","About","model","isAnimatingWork","enableRotate","enablePan","enableZoom","fontLoader","FontLoader","textureLoader","loader","GLTFLoader","woodTexture","load","wrapS","wrapT","planeGeometry","planeMaterial","side","plane","wallTexture","leftWallGeometry","leftWallMaterial","leftWall","rightWallGeometry","rightWallMaterial","rightWall","backWallGeometry","backWallMaterial","backWall","ceilingGeometry","ceilingMaterial","ceiling","numWalls","leftDoorWallGeometry","leftDoorWallMaterial","leftDoorWall","rightDoorWallGeometry","rightDoorWallMaterial","rightDoorWall","middleWallGeometry","middleWallMaterial","middleWall","createWalls","numDoors","modelPath_e","gltf","scale","createDoors","posters","testPoser","testMaterial","test","push","mesh","font","textGeometry","TextGeometry","curveSegments","bevelEnabled","textMaterial","text","textGeometry2","textMaterial2","text2","texture","boxGeometry","boxMaterial","box","deskGeometry","deskMaterial","desk","deskGeometry1","deskMaterial1","desk1","deskGeometry2","deskMaterial2","desk2","circles","targetX","targetY","targetZ","data","circleGeometry","circleMaterial","circle","raycaster","mouse","clientX","clientY","setFromCamera","intersectCircles","intersectObjects","c","intersectPosters","p","intersectedCircle","find","intersectedPoster","square","backgroundColor","onclick","body","removeChild","appendChild","isAnimating","currentCameraPosition","currentTargetPosition","key","async","getRecentCommits","username","commitList","getElementById","innerHTML","reposResponse","fetch","events","json","allCommits","type","repoName","repo","name","commits","payload","commit","message","date","Date","created_at","sort","a","b","slice","error","alert","component","context","xPercent","snap","snapTo","min","max","img","onEnter","h1","limitCommits","formattedDate","toLocaleString","month","day","year","hour","minute","hour12","join","fetchCommits","App","Routes","Route","path","element","Work","Projects","ReactDOM","createRoot","StrictMode","HashRouter"],"mappings":"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","file":"static/js/main.cf91e5d2.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport { gsap } from 'gsap';\r\nimport './Loading.css';\r\n\r\nconst LoadingAnimation = () => {\r\n    const nameRef = useRef(null);\r\n    const GsvgRef = useRef(null);\r\n    const tl = gsap.timeline({ repeat: -1, ease: \"linear\" });\r\n    const YsvgRef = useRef(null);\r\n    const t2 = gsap.timeline({ repeat: -1, ease: \"linear\" });\r\n\r\n    useEffect(() => {\r\n        gsap.fromTo(nameRef.current, { opacity: 0 }, { opacity: 1, duration: 2 });\r\n\r\n        tl.fromTo(GsvgRef.current, \r\n            { rotation: 0 }, \r\n            { rotation: 360, duration: 2 }\r\n        )\r\n        .fromTo(GsvgRef.current, \r\n                { y: 0 }, \r\n                { y: -1000, duration: 2 }\r\n        );\r\n\r\n        t2.fromTo(YsvgRef.current,\r\n            { rotation: 0 },\r\n            { rotation: 360, duration: 2 }\r\n        )\r\n        .fromTo(YsvgRef.current,\r\n            { y: 0 },\r\n            { y: 1000, duration: 2 }\r\n        );\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"loader-container gradient\">\r\n            <div className=\"loader\">\r\n                <div className=\"svg-wrapper\">\r\n                    <div className=\"svg-container\" ref={YsvgRef}>\r\n                        <svg width=\"100\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <line x1=\"10\" y1=\"10\" x2=\"50\" y2=\"50\" stroke=\"black\" stroke-width=\"5\"/>\r\n                            <line x1=\"90\" y1=\"10\" x2=\"50\" y2=\"50\" stroke=\"black\" stroke-width=\"5\"/>\r\n                            <line x1=\"50\" y1=\"50\" x2=\"50\" y2=\"90\" stroke=\"black\" stroke-width=\"5\"/>\r\n                        </svg>\r\n                    </div>\r\n                    <div className=\"svg-container\" ref={GsvgRef}>\r\n                        <svg width=\"100\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <circle cx=\"50\" cy=\"50\" r=\"40\" stroke=\"black\" stroke-width=\"5\" fill=\"none\"/>\r\n                            <line x1=\"50\" y1=\"50\" x2=\"80\" y2=\"50\" stroke=\"black\" stroke-width=\"5\"/>\r\n                            <line x1=\"80\" y1=\"50\" x2=\"80\" y2=\"80\" stroke=\"black\" stroke-width=\"5\"/>\r\n                        </svg>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoadingAnimation;","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport gsap from 'gsap';\r\n\r\nconst Navbar = () => {\r\n  useEffect(() => {\r\n    const navbar = document.querySelector('.navbar');\r\n    const navbar_container = document.querySelector('.navbar-container');\r\n    let isFadedOut = false;\r\n    let interval;\r\n\r\n    const fadeOut = () => {\r\n      if (navbar) {\r\n        gsap.to(navbar, { opacity: 0, duration: .5 });\r\n        isFadedOut = true;\r\n      }\r\n    };\r\n\r\n    const fadeIn = () => {\r\n      if (navbar) {\r\n        gsap.fromTo(navbar, { opacity: 0 }, { opacity: 1, duration: .5 });\r\n        isFadedOut = false;\r\n        clearInterval(interval);\r\n        interval = setInterval(fadeOut, 4000);\r\n      }\r\n    };\r\n\r\n    // Call fadeIn on component mount\r\n    fadeIn();\r\n\r\n    interval = setInterval(fadeOut, 4000);\r\n\r\n    if (navbar) {\r\n      navbar.addEventListener('mouseover', fadeIn);\r\n    }\r\n\r\n    const links = document.querySelectorAll('.navbar-links div');\r\n\r\n    const addBrackets = (event) => {\r\n      const div = event.target;\r\n      const textNode = div.firstChild;\r\n      if (textNode && textNode.nodeType === Node.TEXT_NODE) {\r\n        textNode.textContent = `[${textNode.textContent}]`;\r\n        console.log(textNode.textContent);\r\n        div.style.color = 'grey';\r\n      }\r\n    };\r\n    \r\n    const removeBrackets = (event) => {\r\n      const div = event.target;\r\n      const textNode = div.firstChild;\r\n      if (textNode && textNode.nodeType === Node.TEXT_NODE) {\r\n        textNode.textContent = textNode.textContent.replace(/^\\[|\\]$/g, '');\r\n        console.log(textNode.textContent);\r\n        div.style.color = 'black';\r\n      }\r\n    };\r\n\r\n    if (navbar) {\r\n      links.forEach(link => {\r\n        link.addEventListener('mouseover', addBrackets);\r\n        link.addEventListener('mouseout', removeBrackets);\r\n      });\r\n    }\r\n    \r\n    return () => {\r\n      clearInterval(interval); // Cleanup the interval on component unmount\r\n      if (navbar) {\r\n        navbar.removeEventListener('mouseover', fadeIn);\r\n        links.forEach(link => {\r\n          link.removeEventListener('mouseover', addBrackets);\r\n          link.removeEventListener('mouseout', removeBrackets);\r\n        });\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"navbar-container\">\r\n        <nav className=\"navbar\" style={{opacity:'0'}}>\r\n            <div className=\"navbar-links\">\r\n                <div><Link to=\"/work\">Work</Link></div>\r\n                <div><Link to=\"/projects\">Projects</Link></div>\r\n            </div>\r\n            <div className=\"navbar-logo\">\r\n                <Link to=\"/\">You Gao</Link>\r\n            </div>\r\n            <div className=\"navbar-links\">\r\n                <div><Link to=\"/about\">About Me</Link></div>\r\n                <div><a href=\"https://blog.yougao.dev/\">To Blog</a></div>\r\n            </div>\r\n        </nav>\r\n    </div>\r\n);\r\n};\r\n\r\nexport default Navbar;","import React, { useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport './Background.css';\r\nimport gsap from 'gsap';   \r\n\r\nconst Background = () => {\r\n    const canvasRef = useRef(null);\r\n    const fps = 30; // Set a valid frame rate\r\n    const interval = 1000 / fps;\r\n    let lastTime = 0;\r\n    const headingRef = useRef(null);\r\n    const mottoRef = useRef(null);\r\n    const likesRef = useRef(null);\r\n    const bottomRef = useRef(null);\r\n    const sphereRef = useRef(null);\r\n    const image1Ref = useRef(null);\r\n    const image2Ref = useRef(null);\r\n    const image3Ref = useRef(null);\r\n\r\n    useEffect(() => {\r\n        let scene, camera, renderer, model;\r\n        let isAnimatingHome = true;\r\n\r\n        gsap.fromTo(canvasRef.current, { opacity: 0}, { opacity: 1, duration: 2, delay: .7, ease: 'power2.inOut' });\r\n        gsap.fromTo(headingRef.current, { opacity: 0, y: -100}, { y:0, opacity: 1, duration: 2, delay: 1, ease: 'power2.inOut' });\r\n        gsap.fromTo(mottoRef.current, { opacity: 0, x: -100}, { x:0, opacity: 1, duration: 2, delay: 1.5, ease: 'power2.inOut' });\r\n        gsap.fromTo(likesRef.current, { opacity: 0, x: -100}, { x:0, opacity: 1, duration: 2, delay: 2, ease: 'power2.inOut' });\r\n        gsap.fromTo(bottomRef.current, { opacity: 0, y: 100}, { y:0, opacity: 1, duration: 2, delay: 2.5, ease: 'power2.inOut' });\r\n        gsap.fromTo(image1Ref.current, { opacity: 0, y: 100}, { y:0, opacity: 1, duration: 2, delay: 3, ease: 'power2.inOut' });\r\n        gsap.fromTo(image2Ref.current, { opacity: 0, y: 75}, { y:0, opacity: 1, duration: 2, delay: 3.25, ease: 'power2.inOut' });\r\n        gsap.fromTo(image3Ref.current, { opacity: 0, y: 50}, { y:0, opacity: 1, duration: 2, delay: 3.5, ease: 'power2.inOut' });\r\n        gsap.fromTo(sphereRef.current, { opacity: 0}, { opacity: 1, duration: 2, delay: 4, ease: 'power2.inOut' });\r\n        \r\n        gsap.to([sphereRef.current], {\r\n            color: '#ffffff', // Target color\r\n            duration: 1,\r\n            repeat: 6,\r\n            yoyo: true,\r\n            ease: 'power2.inOut',\r\n            onComplete: () => {\r\n                gsap.to([sphereRef.current], {\r\n                    color: '#000000', // Set back to black\r\n                    duration: 1,\r\n                    ease: 'power2.inOut'\r\n                });\r\n            }\r\n        });\r\n\r\n        function init() {\r\n            // Create scene\r\n            scene = new THREE.Scene();\r\n            scene.background = new THREE.Color(0xffffff);\r\n\r\n            camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n            camera.position.set(.5, 0, 2.75); \r\n            \r\n            renderer = new THREE.WebGLRenderer({ canvas: canvasRef.current });\r\n            renderer.setSize(window.innerWidth / 2, window.innerHeight / 1.65);\r\n\r\n            // Darken Scene\r\n            const ambientLight = new THREE.AmbientLight(0x404040);\r\n            scene.add(ambientLight);\r\n\r\n\r\n            // Add orbit controls\r\n            const controls = new OrbitControls(camera, renderer.domElement);\r\n            controls.enableDamping = true; // an animation loop is required when either damping or auto-rotation are enabled\r\n            controls.dampingFactor = 0.25;\r\n\r\n            // 50 Particles at each angle rotating in a sphere\r\n            const middle_sphere = new THREE.SphereGeometry(.8, 32, 32);\r\n            const middle_material = new THREE.PointsMaterial({ color: 0xffffff, size: .2 });\r\n            const middle_points = new THREE.Points(middle_sphere, middle_material);\r\n            scene.add(middle_points);\r\n\r\n            const particles_x = new THREE.Group();\r\n            const particles_y = new THREE.Group();\r\n            const particles_z = new THREE.Group();\r\n\r\n            const particlesGeometry = new THREE.SphereGeometry(0.1, 32, 32);\r\n            const particlesMaterial = new THREE.PointsMaterial({ color: 0x000000, size: 0.02 });\r\n            for (let i = 0; i < 20; i++) {\r\n                const particle = new THREE.Points(particlesGeometry, particlesMaterial);\r\n                particle.position.x = Math.sin(i / 20 * Math.PI * 2) * 1.5;\r\n                particle.position.y = Math.cos(i / 20 * Math.PI * 2) * 1.5;\r\n                particle.position.z = 0;\r\n                particles_x.add(particle);\r\n            }\r\n            scene.add(particles_x);\r\n            for (let i = 0; i < 20; i++) {\r\n                const particle = new THREE.Points(particlesGeometry, particlesMaterial);\r\n                particle.position.x = Math.sin(i / 20 * Math.PI * 2) * 2;\r\n                particle.position.y = 0;\r\n                particle.position.z = Math.cos(i / 20 * Math.PI * 2) * 2;\r\n                particles_y.add(particle);\r\n            }\r\n            scene.add(particles_y);\r\n            for (let i = 0; i < 20; i++) {\r\n                const particle = new THREE.Points(particlesGeometry, particlesMaterial);\r\n                particle.position.x = 0;\r\n                particle.position.y = Math.sin(i / 20 * Math.PI * 2) * 1.5;\r\n                particle.position.z = Math.cos(i / 20 * Math.PI * 2) * 1.5;\r\n                particles_z.add(particle);\r\n            }\r\n            scene.add(particles_z);\r\n\r\n            // Deep Copies\r\n            const particles_x_copy = particles_x.clone();\r\n            const particles_y_copy = particles_y.clone();\r\n            const particles_z_copy = particles_z.clone();\r\n\r\n        // Function to handle window resize\r\n        function onWindowResize() {\r\n            // Update camera aspect ratio and projection matrix\r\n            camera.aspect = window.innerWidth / window.innerHeight;\r\n            camera.updateProjectionMatrix();\r\n\r\n            // Update renderer size \r\n            renderer.setSize(window.innerWidth / 2 , window.innerHeight / 1.5);\r\n        }\r\n\r\n        // Add event listener for window resize\r\n        window.addEventListener('resize', onWindowResize, false);\r\n\r\n        // Animation loop\r\n        // Render loop\r\n        const animate = (time) => {\r\n            if (isAnimatingHome) {\r\n                requestAnimationFrame(animate);\r\n                \r\n                // Calculate the time difference\r\n                const delta = time - lastTime;\r\n                // If enough time has passed, render the frame\r\n                if (delta > interval) {\r\n                    // Spin the Middle Sphere\r\n                    middle_points.rotation.x += 0.01;\r\n\r\n                    // Update Rotations\r\n                    particles_x.rotation.x += 0.03;\r\n                    particles_x.rotation.z += 0.03;\r\n\r\n                    particles_x_copy.rotation.x += 0.03;\r\n                    particles_x_copy.rotation.y += 0.03;\r\n\r\n                    particles_y.rotation.y += 0.03;\r\n\r\n                    particles_y_copy.rotation.y += 0.03;\r\n                    particles_y_copy.rotation.z += 0.03;\r\n\r\n                    particles_z.rotation.z += 0.03;\r\n                    particles_z.rotation.x += 0.05;\r\n\r\n                    lastTime = time - (delta % interval);        \r\n                    controls.update();\r\n                    renderer.render(scene, camera);\r\n                }\r\n            }\r\n        };\r\n            animate();\r\n        }\r\n\r\n        init();\r\n\r\n        // Cleanup on component unmount\r\n        return () => {\r\n            isAnimatingHome = false;\r\n            if (renderer) {\r\n                console.log('Disposing renderer');\r\n                renderer.dispose();\r\n            }\r\n            if (scene) {\r\n                console.log('Disposing scene');\r\n                scene.traverse((object) => {\r\n                    if (object.geometry) {\r\n                        object.geometry.dispose();\r\n                    }\r\n                    if (object.material) {\r\n                        if (Array.isArray(object.material)) {\r\n                            object.material.forEach((material) => {\r\n                                material.dispose();\r\n                                if (material.map) {\r\n                                    material.map.dispose();\r\n                                }\r\n                            });\r\n                        } else {\r\n                            object.material.dispose();\r\n                            if (object.material.map) {\r\n                                object.material.map.dispose();\r\n                            }\r\n                        }\r\n                    }\r\n                    if (object instanceof THREE.WebGLRenderTarget) {\r\n                        object.dispose();\r\n                    }\r\n                });\r\n            }\r\n        };\r\n    }, []);\r\n\r\nreturn (\r\n    \r\n<div>\r\n    <div className=\"overlay-text\">to-do: re-do logos, draw bottom imgs, loading about me from text, reorganize public files</div>\r\n    <div>   \r\n    <table className=\"table-container\">\r\n        <tr > \r\n            <td className=\"table-cell\" style={{ textAlign: 'right' }}>\r\n                 <div ><h1 ref={headingRef} style={{textAlign: 'right'}}>hi i'm you.</h1></div>\r\n                 <div ref={mottoRef} >\r\n                 <h2 className=\"dynamic-margin-head\" style={{color: \"grey\"}}>my work philosophy:</h2>\r\n                 <h1 style={{textAlign: 'right', marginTop: '-20px'}}>minimal, sustainable,</h1>\r\n                 <h1 style={{textAlign: 'right', marginTop:  '-20px'}}>pragmatic & effective</h1>\r\n                 </div>\r\n\r\n\r\n                <div ref={likesRef}>\r\n                <h2 style={{color: \"grey\"}}>i'm dedicated to:</h2>\r\n                <ul style={{marginTop:  '-25px'}}>\r\n                    <li><h1 style={{margin: '0', marginTop: '-5px'}}>making cool things</h1></li>\r\n                    <li><h1 style={{margin: '0', marginTop: '-5px'}}>learning new stuff</h1></li>\r\n                    <li><h1 style={{margin: '0', marginTop: '-5px'}}>helping people</h1></li>\r\n                </ul>\r\n                </div>\r\n\r\n                <div ref={bottomRef}>\r\n                <h2 className=\"dynamic-margin\" style={{textAlign: 'right', color: \"grey\"}}>stay connected!</h2>\r\n                <div style={{display: 'flex', justifyContent: 'right'}}>\r\n                    <a href=\"https://www.linkedin.com/in/gao-you/\" target=\"_blank\" rel=\"noreferrer\">\r\n                    <img ref={image1Ref} style={{height: '75px', width: '75px', margin: '0 10px'}} src=\"linked_logo.png\" alt=\"Image 1\"/>\r\n                    </a>\r\n                    <a href=\"https://www.github.com/you-gao/\" target=\"_blank\" rel=\"noreferrer\">\r\n                    <img ref={image2Ref} style={{height: '75px', width: '75px', margin: '0 10px'}} src=\"github_logo.png\" alt=\"Image \"/>\r\n                    </a>\r\n                    <a href=\"https://stackoverflow.com/users/26650867/you-gao\" target=\"_blank\" rel=\"noreferrer\">\r\n                    <img ref={image3Ref} style={{height: '75px', width: '75px'}} src=\"stack_logo.png\" alt=\"Image 3\"/>\r\n                    </a>\r\n                </div>\r\n                </div>\r\n            </td>\r\n            <td className=\"table-cell\">\r\n                <canvas ref={canvasRef} />\r\n                <h1 style={{textAlign: 'center'}} ref={sphereRef}>gaze into the sphere.</h1>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    </div>\r\n</div>\r\n);\r\n};\r\n\r\nexport default Background;","import React, { useState, useEffect } from 'react';\r\nimport Loading from './loading/Loading';\r\nimport Navbar from './navbar/Navbar';\r\nimport Background from './background/Background';\r\nimport './Home.css'; \r\n\r\nfunction Home() {\r\n    const [showContent, setShowContent] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            setShowContent(true);\r\n        }, 0);\r\n\r\n        return () => clearTimeout(timer);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"Home\">\r\n            {showContent ? (\r\n                <>\r\n                    <div class=\"outer\">\r\n                        <Navbar />\r\n                        <div class=\"bottom\">\r\n                        <Background />\r\n                        </div>\r\n                        <div class=\"bottom noclick\">\r\n                        </div>\r\n                    </div>\r\n\r\n                </>\r\n            ) : (\r\n                <Loading />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport gsap from 'gsap';\r\n\r\nconst Navbar = () => {\r\n  useEffect(() => {\r\n    const navbar = document.querySelector('.navbar');\r\n    const navbar_container = document.querySelector('.navbar-container');\r\n    let isFadedOut = false;\r\n    let interval;\r\n\r\n    const fadeOut = () => {\r\n      if (navbar) {\r\n        gsap.to(navbar, { opacity: 0, duration: .5 });\r\n        isFadedOut = true;\r\n      }\r\n    };\r\n\r\n    const fadeIn = () => {\r\n      if (navbar) {\r\n        gsap.fromTo(navbar, { opacity: 0 }, { opacity: 1, duration: .5 });\r\n        isFadedOut = false;\r\n        clearInterval(interval);\r\n        interval = setInterval(fadeOut, 2000);\r\n      }\r\n    };\r\n\r\n    // Call fadeIn on component mount\r\n    fadeIn();\r\n\r\n    interval = setInterval(fadeOut, 2000);\r\n\r\n    if (navbar) {\r\n      navbar.addEventListener('mouseover', fadeIn);\r\n    }\r\n\r\n    \r\n    const links = document.querySelectorAll('.navbar-links div');\r\n\r\n    const addBrackets = (event) => {\r\n      const div = event.target;\r\n      const textNode = div.firstChild;\r\n      if (textNode && textNode.nodeType === Node.TEXT_NODE) {\r\n        if (textNode.textContent.includes(\"About\")) return;\r\n        textNode.textContent = `[${textNode.textContent}]`;\r\n        console.log(textNode.textContent);\r\n        div.style.color = 'grey';\r\n      }\r\n    };\r\n    \r\n    const removeBrackets = (event) => {\r\n      const div = event.target;\r\n      const textNode = div.firstChild;\r\n      if (textNode && textNode.nodeType === Node.TEXT_NODE) {\r\n        if (textNode.textContent.includes(\"About\")) return;\r\n        textNode.textContent = textNode.textContent.replace(/^\\[|\\]$/g, '');\r\n        console.log(textNode.textContent);\r\n        div.style.color = 'black';\r\n      }\r\n    };\r\n\r\n    if (navbar) {\r\n      links.forEach(link => {\r\n        link.addEventListener('mouseover', addBrackets);\r\n        link.addEventListener('mouseout', removeBrackets);\r\n      });\r\n    }\r\n    \r\n    return () => {\r\n      clearInterval(interval); // Cleanup the interval on component unmount\r\n      if (navbar) {\r\n        navbar.removeEventListener('mouseover', fadeIn);\r\n        links.forEach(link => {\r\n          link.removeEventListener('mouseover', addBrackets);\r\n          link.removeEventListener('mouseout', removeBrackets);\r\n        });\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"navbar-container\">\r\n        <nav className=\"navbar\" style={{opacity:'0'}}>\r\n            <div className=\"navbar-links\">\r\n                <div><Link to=\"/work\">Work</Link></div>\r\n                <div><Link to=\"/projects\">Projects</Link></div>\r\n            </div>\r\n            <div className=\"navbar-logo\">\r\n                <Link to=\"/\">You Gao</Link>\r\n            </div>\r\n            <div className=\"navbar-links\">\r\n                <div><Link to=\"/about\">[About Me]</Link></div>\r\n                <div><a href=\"https://blog.yougao.dev/\">To Blog</a></div>\r\n            </div>\r\n        </nav>\r\n    </div>\r\n);\r\n};\r\n\r\nexport default Navbar;","import gsap from \"gsap\";\r\nimport ScrollTrigger from \"gsap/ScrollTrigger\";\r\nimport { useLayoutEffect, useRef, useEffect } from \"react\";\r\nimport \"./Background.css\";\r\nimport React from \"react\";\r\ngsap.registerPlugin(ScrollTrigger);\r\n\r\nexport default function Scene() {\r\n  const component = useRef();\r\n  const slider = useRef();\r\n\r\n  const initializeAnimations = () => {\r\n    ScrollTrigger.getAll().forEach(trigger => trigger.kill());\r\n    const panel_length = document.querySelectorAll('.apanel').length;\r\n    const panels = document.querySelectorAll('.apanel');\r\n    panels.forEach((panel, i) => {\r\n      ScrollTrigger.create({\r\n        trigger: panel,\r\n        start: \"top top\", \r\n        end: \"+=100%\",\r\n        pin: true, \r\n        pinSpacing: true,  \r\n        scrub: 1,\r\n      });\r\n      ScrollTrigger.refresh();\r\n\r\n      if (i === 0) {\r\n        gsap.fromTo(\r\n          panel.querySelector(\"#name\"),\r\n          {\r\n            opacity: 0,\r\n          },\r\n          {\r\n            opacity: 1,\r\n            duration: 1,\r\n            delay: 0.5,\r\n            ease: \"power2\",\r\n            scrollTrigger: {\r\n              trigger: panel.querySelector(\"#name\"),\r\n              start: \"top bottom\",\r\n              end: \"bottom top\",\r\n              toggleActions: \"play reverse play reverse\",\r\n            },\r\n          }\r\n          \r\n        );\r\n      } else {\r\n        gsap.fromTo(\r\n          panel.querySelector(\"#name\"),\r\n          {\r\n            opacity: 0,\r\n          },\r\n          {\r\n            opacity: 1,\r\n            duration: 1,\r\n            delay: 0.5,\r\n            ease: \"power2\",\r\n            scrollTrigger: {\r\n              trigger: panel,\r\n              start: \"top center\",\r\n              end: \"bottom\",\r\n              scrub: true,\r\n              markers: true,\r\n            },\r\n          }\r\n        );\r\n      }\r\n      });\r\n\r\n      // -- heading 2 animations --\r\n      gsap.utils.toArray(\".apanel\").forEach((panel, i) => {\r\n        const ulElements = panel.querySelectorAll(\".under-center h2\");\r\n        ulElements.forEach((h2) => {\r\n          if (i === 0) {\r\n            gsap.fromTo(\r\n              h2,\r\n              {\r\n                opacity: 0,\r\n              },\r\n              {\r\n                opacity: 1,\r\n                duration: 1,\r\n                delay: 0.5,\r\n                ease: \"power2\",\r\n                scrollTrigger: {\r\n                  trigger: h2,\r\n                  start: \"top bottom\",\r\n                  end: \"bottom top\",\r\n                  toggleActions: \"play reverse play reverse\",\r\n                },\r\n              }\r\n            );\r\n          }\r\n        else {\r\n          gsap.fromTo(\r\n            h2,\r\n            {\r\n              opacity: 0,\r\n            },\r\n            {\r\n              opacity: 1,\r\n              duration: 1,\r\n              delay: 0.5,\r\n              ease: \"power2\",\r\n              scrollTrigger: {\r\n                trigger: panel,\r\n                start: \"top center\",\r\n                end: \"bottom\",\r\n                scrub: true,\r\n              },\r\n            }\r\n          );\r\n        }\r\n\r\n        // -- list animations --\r\n        const liElements = panel.querySelectorAll(\".under-center li\");\r\n        if (i === 0) {\r\n          liElements.forEach((li, i) => {\r\n            gsap.fromTo(\r\n              li,\r\n              {\r\n                opacity: 0,\r\n                x: 100 + i * 100,\r\n              },\r\n              {\r\n                opacity: 1,\r\n                x: 0,\r\n                duration: 2,\r\n                delay: 0.2,\r\n                ease: \"power2\",\r\n                scrollTrigger: {\r\n                  trigger: li,\r\n                  start: \"top 70%\",\r\n                  toggleActions: \"play reverse play reverse\",\r\n                },\r\n              }\r\n            );\r\n          });\r\n        }\r\n        else{\r\n        liElements.forEach((li, i) => {\r\n          gsap.fromTo(\r\n            li,\r\n            {\r\n              opacity: 0,\r\n              x: 100 + i * 100,\r\n            },\r\n            {\r\n              opacity: 1,\r\n              x: 0,\r\n              duration: 2,\r\n              delay: 0.2,\r\n              ease: \"power2\",\r\n              scrollTrigger: {\r\n                trigger: panel,\r\n                start: \"top\",\r\n                end: \"bottom\",\r\n                scrub: true,\r\n                toggleActions: \"play reverse play reverse\",\r\n              },\r\n            }\r\n\r\n          );\r\n        });\r\n      }\r\n        });\r\n\r\n        // for each panel get the class middle-top-img and add a fade from top\r\n        const middleTopImg = panel.querySelector(\".middle-top-img\");\r\n        gsap.fromTo(\r\n          middleTopImg,\r\n          {\r\n            opacity: 0,\r\n            y: -100,\r\n          },\r\n          {\r\n            opacity: 1,\r\n            y: 0,\r\n            duration: 1,\r\n            ease: \"power2\",\r\n            scrollTrigger: {\r\n              trigger: panel,\r\n              start: \"top center\",\r\n              end: \"bottom\",\r\n              toggleActions: i === panels.length - 1 ? \"play none play reverse\" : \"play reverse play reverse\", // Conditional toggleActions\r\n            },\r\n          }\r\n        );\r\n\r\n        // for each panel get the class middle-left-rotated-img and add a fade from left\r\n        const middleLeftRotatedImg = panel.querySelector(\".middle-left-rotated-img\");\r\n        gsap.fromTo(\r\n          middleLeftRotatedImg,\r\n          {\r\n            opacity: 0,\r\n            x: -100,\r\n          },\r\n          {\r\n            opacity: 1,\r\n            x: 0,\r\n            duration: 1,\r\n            ease: \"power2\",\r\n            scrollTrigger: {\r\n              trigger: panel,\r\n              start: \"top center\",\r\n              end: \"bottom\",\r\n              toggleActions: i === panels.length - 1 ? \"play none play reverse\" : \"play reverse play reverse\", // Conditional toggleActions\r\n\r\n            },\r\n          }\r\n        );\r\n\r\n        // for each panel get the class middle-right-rotated-img and add a fade from right\r\n        const middleRightRotatedImg = panel.querySelector(\".middle-right-rotated-img\");\r\n        gsap.fromTo(\r\n          middleRightRotatedImg,\r\n          {\r\n            opacity: 0,\r\n            x: 100,\r\n          },\r\n          {\r\n            opacity: 1,\r\n            x: 0,\r\n            duration: 1,\r\n            ease: \"power2\",\r\n            scrollTrigger: {\r\n              trigger: panel,\r\n              start: \"top center\",\r\n              end: \"bottom\",\r\n              toggleActions: i === panels.length - 1 ? \"play none play reverse\" : \"play reverse play reverse\", // Conditional toggleActions\r\n            },\r\n          }\r\n        );\r\n\r\n        // for each panel get the class middle-bottom-img and add a fade from bottom\r\n        const middleBottomImg = panel.querySelector(\".middle-bottom-img\");\r\n        gsap.fromTo(\r\n          middleBottomImg,\r\n          {\r\n            opacity: 0,\r\n            y: 100,\r\n          },\r\n          {\r\n            opacity: 1,\r\n            y: 0,\r\n            duration: 1,\r\n            ease: \"power2\",\r\n            scrollTrigger: {\r\n              trigger: panel,\r\n              start: \"top center\",\r\n              end: \"bottom\",\r\n              toggleActions: i === panels.length - 1 ? \"play none play reverse\" : \"play reverse play reverse\", // Conditional toggleActions\r\n\r\n            },\r\n          }\r\n        );\r\n    }, slider);\r\n  };\r\n\r\n  // first panel refs\r\n  useEffect(() => {\r\n   // for all panels, select the classes with id=\"name\" and add a fade in\r\n\r\n    initializeAnimations();\r\n\r\n    const handleResize = () => {\r\n      initializeAnimations();\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    window.onbeforeunload = function () {\r\n      window.scrollTo(0, 0);\r\n    }\r\n    window.addEventListener('load', function() {\r\n      ScrollTrigger.refresh();\r\n    });\r\n\r\n  return () => {\r\n    document.querySelectorAll('.apanel').forEach(panel => panel.remove());\r\n    window.removeEventListener('resize', handleResize);\r\n    ScrollTrigger.getAll().forEach(trigger => trigger.kill());\r\n    window.scrollTo(0, 0);\r\n  };\r\n}, []);\r\n\r\n  return (\r\n    <div>\r\n      \r\n      \r\n      <section id=\"x\" class=\"apanel\">\r\n        <img className=\"middle-top-img\" src=\"uva_logo.png\" />\r\n        <img className=\"middle-left-rotated-img\" src=\"uva_cav.png\" />\r\n        <img className=\"middle-right-rotated-img\" src=\"uva_cs.jpg\" />\r\n        <img className=\"middle-bottom-img\" src=\"desk.png\" />\r\n        <div className=\"overlay-text-down\">Scroll v</div>\r\n        <table className=\"center\">\r\n          <td>\r\n          <div style={{marginRight:\"10px\", color:\"grey\"}}>i am a: </div>\r\n          </td>\r\n          <td style={{border: \"3px solid black\"}}>\r\n          <div id=\"name\" style={{marginLeft:\"10px\",marginRight:\"10px\"}}>Student</div>\r\n          </td>\r\n        </table>\r\n        <div className=\"under-center\">\r\n          <h2 style={{textAlign:\"center\"}}>Relevant Information:</h2>\r\n          <ul style={{marginTop: \"-25px\"}}>\r\n            <li>CS & GDS Majors</li>\r\n            <li>Data Science Minor</li>\r\n            <li>2 More Years.....</li>\r\n          </ul>\r\n        </div>\r\n      </section>\r\n\r\n      <section id=\"x\" class=\"apanel\">\r\n      <img className=\"middle-top-img\" style={{height: \"20%\", width: \"25%\", top: \"5%\", left:\"39%\"}} src=\"yelp_t.png\" />\r\n        <img className=\"middle-left-rotated-img\" style={{transform: \"rotate(0deg)\", left:\"17%\"}} src=\"burger.png\" />\r\n        <img className=\"middle-right-rotated-img\" style={{transform: \"rotate(30deg)\", left:\"66%\"}} src=\"boba.png\" />\r\n        <img className=\"middle-bottom-img\" src=\"desk.png\" />\r\n        <table className=\"center\">\r\n          <td>\r\n          <div style={{marginRight:\"10px\", color:\"grey\"}}>i am a: </div>\r\n          </td>\r\n          <td style={{border: \"3px solid black\"}}>\r\n          <div id=\"name\" style={{marginLeft:\"10px\",marginRight:\"10px\"}}>Foodie</div>\r\n          </td>\r\n        </table>\r\n        <div className=\"under-center\">\r\n          <h2 style={{textAlign:\"center\"}}>Recent Places Went:</h2>\r\n          <ul style={{marginTop: \"-25px\"}}>\r\n            <li>Elephant Thai</li>\r\n            <li>Cantina Bakery</li>\r\n            <li>Brecotea</li>\r\n          </ul>\r\n        </div>\r\n      </section>\r\n\r\n      <section id=\"x\" class=\"apanel\">\r\n      <img className=\"middle-top-img\" style={{height: \"20%\", width: \"50%\", top: \"5%\", left:\"25%\"}} src=\"pokeballs.png\" />\r\n      <img className=\"middle-left-rotated-img\" style={{transform: \"rotate(0deg)\", left:\"17%\"}} src=\"kirby.png\" />\r\n      <img className=\"middle-right-rotated-img\" style={{transform: \"scaleX(-1)\", left:\"67.5%\"}} src=\"sonic.png\" />\r\n      <img className=\"middle-bottom-img\" src=\"developer.png\" />\r\n\r\n        <table className=\"center\">\r\n          <td>\r\n          <div style={{marginRight:\"10px\", color:\"grey\"}}>i am a: </div>\r\n          </td>\r\n          <td style={{border: \"3px solid black\"}}>\r\n          <div id=\"name\"  style={{marginLeft:\"10px\",marginRight:\"10px\"}}>Gamer</div>\r\n          </td>\r\n        </table>\r\n        <div className=\"under-center\">\r\n          <h2 style={{textAlign:\"center\"}}>Favorite Games ATM:</h2>\r\n          <ul style={{marginTop: \"-25px\"}}>\r\n            <li>Guilty Gear -Strive-</li>\r\n            <li>Golf with Your Friends</li>\r\n            <li>Pokemon Emerald</li>\r\n          </ul>\r\n        </div>\r\n      </section>\r\n\r\n      <section class=\"apanel\">\r\n      <img className=\"middle-top-img\" style={{height: \"25%\", width: \"50%\", top: \"5%\", left:\"30%\"}} src=\"bookmark.png\" />\r\n      <img className=\"middle-left-rotated-img\" style={{transform: \"rotate(0deg)\", left:\"17%\"}} src=\"bookstack.png\" />\r\n      <img className=\"middle-right-rotated-img\" style={{left:\"68%\"}} src=\"librarycard.png\" />\r\n      <img className=\"middle-bottom-img\" src=\"developer.png\" />\r\n\r\n        <table className=\"center\">\r\n          <td>\r\n          <div style={{marginRight:\"10px\", color:\"grey\"}}>i am a: </div>\r\n          </td>\r\n          <td style={{border: \"3px solid black\"}}>\r\n          <div id=\"name\" style={{marginLeft:\"10px\",marginRight:\"10px\"}}>Reader</div>\r\n          </td>\r\n        </table>\r\n        <div className=\"under-center\">\r\n          <h2 style={{textAlign:\"center\"}}>Planned Reads:</h2>\r\n          <ul style={{marginTop: \"-25px\"}}>\r\n            <li>The Pragmatic Programmer</li>\r\n            <li>The Idea of Phenomenology</li>\r\n            <li>Homo Sacer</li>\r\n          </ul>\r\n        </div>\r\n      </section>\r\n\r\n      <section class=\"apanel\">\r\n      <img className=\"middle-top-img\" style={{height: \"10%\", width: \"40%\", top: \"12.5%\", left:\"32.5%\"}} src=\"pen.png\" />\r\n      <img className=\"middle-left-rotated-img\" style={{transform: \"rotate(0deg)\", left:\"17%\"}} src=\"notepad.png\" />\r\n      <img className=\"middle-right-rotated-img\" style={{left:\"68%\"}} src=\"speech.png\" />\r\n\r\n      <img className=\"middle-bottom-img\" src=\"developer.png\" />\r\n        <table className=\"center\">\r\n          <td>\r\n          <div style={{marginRight:\"10px\", color:\"grey\"}}>i am a: </div>\r\n          </td>\r\n          <td style={{border: \"3px solid black\"}}>\r\n          <div id=\"name\" style={{marginLeft:\"10px\",marginRight:\"10px\"}}>Blogger</div>\r\n          </td>\r\n        </table>\r\n        <div className=\"under-center\">\r\n          <h2 style={{textAlign:\"center\"}}>Latest Ponderings:</h2>\r\n          <ul style={{marginTop: \"-25px\"}}>\r\n            <li>Environmental Dissonance</li>\r\n            <li>Layer 8 DDoS and ChatGPT</li>\r\n            <li>Learning Forwards and Backwards</li>\r\n          </ul>\r\n        </div>\r\n      </section>\r\n\r\n      <section id=\"x\" class=\"apanel\">\r\n      <img className=\"middle-top-img\" style={{height: \"10%\", top: \"10%\"}} src=\"forkbomb.png\" />\r\n      <img className=\"middle-left-rotated-img\" style={{transform: \"rotate(0deg)\", left:\"17.5%\"}} src=\"arch.png\" />\r\n      <img className=\"middle-right-rotated-img\" style={{transform: \"scaleX(-1)\", left:\"67.5%\"}} src=\"gnu.png\" />\r\n      <img className=\"middle-bottom-img\" src=\"developer.png\" />\r\n\r\n        <table className=\"center\">\r\n          <td>\r\n          <div style={{marginRight:\"10px\", color:\"grey\"}}>i am a: </div>\r\n          </td>\r\n          <td style={{border: \"3px solid black\"}}>\r\n          <div id=\"name\" style={{marginLeft:\"10px\",marginRight:\"10px\"}}>Developer</div>\r\n          </td>\r\n        </table>\r\n        <div className=\"under-center\">\r\n          <h2 style={{textAlign:\"center\"}}>Current Interests:</h2>\r\n          <ul style={{marginTop: \"-25px\"}}>\r\n            <li>DevOps Theory</li>\r\n            <li>Front-end Design</li>\r\n            <li>Operating Systems</li>\r\n          </ul>\r\n        </div>\r\n        \r\n      </section>\r\n\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Navbar from './navbar/Navbar';\r\nimport Background from './background/Background';\r\nimport './About.css';\r\nfunction About() {\r\n    return (\r\n        <div className=\"About\">\r\n                <Navbar />\r\n                <Background />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport gsap from 'gsap';\r\n\r\nconst Navbar = () => {\r\n  useEffect(() => {\r\n    const navbar = document.querySelector('.navbar');\r\n    const navbar_container = document.querySelector('.navbar-container');\r\n    let isFadedOut = false;\r\n    let interval;\r\n\r\n    const fadeOut = () => {\r\n      if (navbar) {\r\n        gsap.to(navbar, { opacity: 0, duration: .5 });\r\n        isFadedOut = true;\r\n      }\r\n    };\r\n\r\n    const fadeIn = () => {\r\n      if (navbar) {\r\n        gsap.fromTo(navbar, { opacity: 0 }, { opacity: 1, duration: .5 });\r\n        isFadedOut = false;\r\n        clearInterval(interval);\r\n        interval = setInterval(fadeOut, 4000);\r\n      }\r\n    };\r\n\r\n    // Call fadeIn on component mount\r\n    fadeIn();\r\n\r\n    interval = setInterval(fadeOut, 4000);\r\n\r\n    if (navbar) {\r\n      navbar.addEventListener('mouseover', fadeIn);\r\n    }\r\n\r\n    \r\n    const links = document.querySelectorAll('.navbar-links div');\r\n\r\n    const addBrackets = (event) => {\r\n      const div = event.target;\r\n      const textNode = div.firstChild;\r\n      if (textNode && textNode.nodeType === Node.TEXT_NODE) {\r\n        if (textNode.textContent.includes(\"Work\")) return;\r\n        textNode.textContent = `[${textNode.textContent}]`;\r\n        console.log(textNode.textContent);\r\n        div.style.color = 'grey';\r\n      }\r\n    };\r\n    \r\n    const removeBrackets = (event) => {\r\n      const div = event.target;\r\n      const textNode = div.firstChild;\r\n      if (textNode && textNode.nodeType === Node.TEXT_NODE) {\r\n        if (textNode.textContent.includes(\"Work\")) return;\r\n        textNode.textContent = textNode.textContent.replace(/^\\[|\\]$/g, '');\r\n        console.log(textNode.textContent);\r\n        div.style.color = 'black';\r\n      }\r\n    };\r\n\r\n    if (navbar) {\r\n      links.forEach(link => {\r\n        link.addEventListener('mouseover', addBrackets);\r\n        link.addEventListener('mouseout', removeBrackets);\r\n      });\r\n    }\r\n    \r\n    return () => {\r\n      clearInterval(interval); // Cleanup the interval on component unmount\r\n      if (navbar) {\r\n        navbar.removeEventListener('mouseover', fadeIn);\r\n        links.forEach(link => {\r\n          link.removeEventListener('mouseover', addBrackets);\r\n          link.removeEventListener('mouseout', removeBrackets);\r\n        });\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"navbar-container\">\r\n        <nav className=\"navbar\" style={{opacity:'0'}}>\r\n            <div className=\"navbar-links\">\r\n                <div><Link to=\"/work\">[Work]</Link></div>\r\n                <div><Link to=\"/projects\">Projects</Link></div>\r\n            </div>\r\n            <div className=\"navbar-logo\">\r\n                <Link to=\"/\">You Gao</Link>\r\n            </div>\r\n            <div className=\"navbar-links\">\r\n                <div><Link to=\"/about\">About Me</Link></div>\r\n                <div><a href=\"https://blog.yougao.dev/\">To Blog</a></div>\r\n            </div>\r\n        </nav>\r\n    </div>\r\n);\r\n};\r\n\r\nexport default Navbar;","import React, { useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\nimport { FontLoader } from 'three/examples/jsm/loaders/FontLoader';\r\nimport { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport gsap from 'gsap';\r\n\r\nconst Background = () => {\r\n    const canvasRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        let scene, camera, renderer, model, controls;\r\n        let isAnimatingWork = true;\r\n        function init() {\r\n            // ------------------------------------------------ Setup ------------------------------------------------\r\n            // Scene, Camera + Controls, Renderer\r\n            scene = new THREE.Scene();\r\n            scene.background = new THREE.Color(0xffffff);\r\n\r\n            camera = new THREE.PerspectiveCamera(1000, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n            camera.position.set(0, 25, 130); // Zoom in on the board\r\n\r\n            renderer = new THREE.WebGLRenderer({ canvas: canvasRef.current });\r\n            renderer.setSize(window.innerWidth, window.innerHeight);\r\n\r\n            controls = new OrbitControls(camera, renderer.domElement);\r\n            controls.target.set(0, 25, 80);\r\n            controls.enableRotate = true;\r\n            controls.enablePan = false;\r\n            controls.enableZoom = false;\r\n\r\n            const fontLoader = new FontLoader();\r\n            const textureLoader = new THREE.TextureLoader();\r\n            const loader = new GLTFLoader();\r\n\r\n            // Light\r\n            const ambientLight = new THREE.AmbientLight(0xffffff, 0.1);\r\n            scene.add(ambientLight);\r\n\r\n            // ------------------------------------------------ House ------------------------------------------------\r\n\r\n\r\n            // Floor\r\n            const woodTexture = textureLoader.load('wood.jpg');\r\n            woodTexture.wrapS = THREE.RepeatWrapping;\r\n            woodTexture.wrapT = THREE.RepeatWrapping;\r\n            woodTexture.repeat.set(1, 15); // Adjust the repeat values as needed\r\n            const planeGeometry = new THREE.PlaneGeometry(200, 1000);\r\n            const planeMaterial = new THREE.MeshBasicMaterial({ map: woodTexture, side: THREE.DoubleSide});\r\n            const plane = new THREE.Mesh(planeGeometry, planeMaterial);\r\n            plane.position.set(0, 65, -300);\r\n            plane.rotation.x = -Math.PI / 2;\r\n            scene.add(plane);\r\n\r\n            // Right Wall\r\n            const wallTexture = textureLoader.load('office.jpg');\r\n            wallTexture.wrapS = THREE.RepeatWrapping;\r\n            wallTexture.wrapT = THREE.RepeatWrapping;\r\n            wallTexture.repeat.set(1, 10); // Adjust the repeat values as needed\r\n            const leftWallGeometry = new THREE.PlaneGeometry(1000, 120);\r\n            const leftWallMaterial = new THREE.MeshBasicMaterial({ map: wallTexture, side: THREE.DoubleSide });\r\n            const leftWall = new THREE.Mesh(leftWallGeometry, leftWallMaterial);\r\n            leftWall.position.set(-100, 10, -300);\r\n            leftWall.rotation.y = Math.PI / 2;\r\n            scene.add(leftWall);\r\n\r\n            // Left Wall\r\n            const rightWallGeometry = new THREE.PlaneGeometry(1000, 120);\r\n            const rightWallMaterial = new THREE.MeshBasicMaterial({ map: wallTexture, side: THREE.DoubleSide });\r\n            const rightWall = new THREE.Mesh(rightWallGeometry, rightWallMaterial);\r\n            rightWall.position.set(100, 10, -300);\r\n            rightWall.rotation.y = Math.PI / 2;\r\n            scene.add(rightWall);\r\n\r\n            // Back Wall\r\n            const backWallGeometry = new THREE.PlaneGeometry(200, 120);\r\n            const backWallMaterial = new THREE.MeshBasicMaterial({ map: wallTexture, side: THREE.DoubleSide });\r\n            const backWall = new THREE.Mesh(backWallGeometry, backWallMaterial);\r\n            backWall.position.set(0, 10, 200);\r\n            backWall.rotation.y = Math.PI;\r\n            scene.add(backWall);\r\n\r\n\r\n            // Ceiling\r\n            const ceilingGeometry = new THREE.PlaneGeometry(200, 1200);\r\n            const ceilingMaterial = new THREE.MeshBasicMaterial({ color: 0xFA9C21, side: THREE.DoubleSide });\r\n            const ceiling = new THREE.Mesh(ceilingGeometry, ceilingMaterial);\r\n            ceiling.position.set(0, -50, -300);\r\n            ceiling.rotation.x = Math.PI / 2;\r\n            scene.add(ceiling);\r\n\r\n            // ------------------------------------------------ Rooms ------------------------------------------------\r\n\r\n            function createWalls(numWalls) {\r\n                for (let i = 0; i < numWalls; i++) {\r\n                    // const doorwallTexture = textureLoader.load('wall.jpg');\r\n                    // doorwallTexture.wrapS = THREE.RepeatWrapping;\r\n                    // doorwallTexture.wrapT = THREE.RepeatWrapping;\r\n                    // doorwallTexture.repeat.set(1, 10); // Adjust the repeat values as needed\r\n\r\n                    // Left Door Wall\r\n                    const leftDoorWallGeometry = new THREE.PlaneGeometry(70, 85);\r\n                    const leftDoorWallMaterial = new THREE.MeshBasicMaterial({ color: 0xADD8E6, side: THREE.DoubleSide });\r\n                    const leftDoorWall = new THREE.Mesh(leftDoorWallGeometry, leftDoorWallMaterial);\r\n                    leftDoorWall.position.set(55, 30, 0 + i * -200);\r\n                    leftDoorWall.rotation.z = Math.PI / 2;\r\n                    scene.add(leftDoorWall);\r\n            \r\n                    // Right Door Wall\r\n                    const rightDoorWallGeometry = new THREE.PlaneGeometry(70, 85);\r\n                    const rightDoorWallMaterial = new THREE.MeshBasicMaterial({ color: 0xADD8E6, side: THREE.DoubleSide });\r\n                    const rightDoorWall = new THREE.Mesh(rightDoorWallGeometry, rightDoorWallMaterial);\r\n                    rightDoorWall.position.set(-55, 30, 0 + i * -200);\r\n                    rightDoorWall.rotation.z = Math.PI / 2;\r\n                    scene.add(rightDoorWall);\r\n                    \r\n                    // Middle Wall\r\n                    const middleWallGeometry = new THREE.PlaneGeometry(47, 195);\r\n                    const middleWallMaterial = new THREE.MeshBasicMaterial({ color: 0xADD8E6, side: THREE.DoubleSide });\r\n                    const middleWall = new THREE.Mesh(middleWallGeometry, middleWallMaterial);\r\n                    middleWall.position.set(0, -25, 0 + i * -200);\r\n                    middleWall.rotation.z = Math.PI / 2;\r\n                    scene.add(middleWall);\r\n\r\n\r\n                }\r\n            }\r\n            \r\n            function createDoors(numDoors) {\r\n                for (let i = 0; i < numDoors; i++) {\r\n                    // Load Model\r\n                    const modelPath_e = 'door.glb'; // Adjust this path if necessary\r\n                    console.log(`Loading model from path: ${modelPath_e}`);\r\n                    loader.load(modelPath_e, (gltf) => {\r\n                        model = gltf.scene;\r\n                        model.scale.set(30, 30, 30); // Scale the model by a factor of 30\r\n                        model.position.set(0, 0, 0 + i * -200); // Set the position of the model\r\n                        scene.add(model);\r\n                    });\r\n                }\r\n            }\r\n\r\n            createWalls(4);\r\n            createDoors(4);\r\n\r\n            // --- Test --- \r\n            const posters = [];\r\n            const testPoser = new THREE.BoxGeometry(50, 50, 50);\r\n            const testMaterial = new THREE.MeshBasicMaterial({ color: 0x000000 });\r\n            const test = new THREE.Mesh(testPoser, testMaterial);\r\n            test.position.set(0, 0, 0);\r\n            scene.add(test);\r\n            const camera_position = { x: 0, y: 0, z: 70 }\r\n            const controls_target = { x: 0, y: 10, z: 0 }\r\n            posters.push({ mesh: test, target: camera_position, controls: controls_target });\r\n\r\n            // --- Room 1 ---\r\n\r\n            // Text\r\n            fontLoader.load('https://threejs.org/examples/fonts/helvetiker_regular.typeface.json', (font) => {\r\n            const textGeometry = new TextGeometry('Tessera Therapeutics', {\r\n                font: font,\r\n                size: 10,\r\n                height: 1,\r\n                curveSegments: 12,\r\n                bevelEnabled: false\r\n            });\r\n            const textMaterial = new THREE.MeshBasicMaterial({ color: 0x000000 });\r\n            const text = new THREE.Mesh(textGeometry, textMaterial);\r\n            text.position.set(-100, -30, -155);\r\n            text.rotation.x = Math.PI;\r\n            text.rotation.y = Math.PI / 2;\r\n            scene.add(text);\r\n\r\n            const textGeometry2 = new TextGeometry('Biomanufacturing Intern', {\r\n                font: font,\r\n                size: 10,\r\n                height: 1,\r\n                curveSegments: 12,\r\n                bevelEnabled: false\r\n            });\r\n            const textMaterial2 = new THREE.MeshBasicMaterial({ color: 0x000000 });\r\n            const text2 = new THREE.Mesh(textGeometry2, textMaterial2);\r\n            text2.position.set(-100, -15, -155);\r\n            text2.rotation.x = Math.PI;\r\n            text2.rotation.y = Math.PI / 2;\r\n            scene.add(text2);\r\n            });\r\n\r\n            // Logo\r\n            const texturePath = 'tessera.png'; // Adjust this path if necessary\r\n            textureLoader.load(texturePath, (texture) => {\r\n                const boxGeometry = new THREE.BoxGeometry(5, 25, 25);\r\n                const boxMaterial = new THREE.MeshBasicMaterial({ map: texture });\r\n                const box = new THREE.Mesh(boxGeometry, boxMaterial);\r\n                box.position.set(-100, -27, -175); // Adjust the position as needed\r\n                scene.add(box);\r\n            });\r\n\r\n            // // Deliverables\r\n            // const delivarablePath = \"biomanufacturing.png\"; // Adjust this path if necessary\r\n            // textureLoader.load(delivarablePath, (texture) => {\r\n            //     const boxGeometry = new THREE.BoxGeometry(175, 60, 5);\r\n            //     const boxMaterial = new THREE.MeshBasicMaterial({ map: texture });\r\n            //     const box = new THREE.Mesh(boxGeometry, boxMaterial);\r\n            //     box.rotation.y = -Math.PI / 2;\r\n            //     box.rotation.z = Math.PI;\r\n            //     box.position.set(-100, 25, -100); // Adjust the position as needed\r\n            //     scene.add(box);\r\n            // });\r\n\r\n            // Desk Placeholder\r\n            const deskGeometry = new THREE.BoxGeometry(150, 25, 25);\r\n            const deskMaterial = new THREE.MeshBasicMaterial({ color: 0x8B4513 });\r\n            const desk = new THREE.Mesh(deskGeometry, deskMaterial);\r\n            desk.position.set(-80, 50, -100); // Adjust the position as needed\r\n            desk.rotation.y = Math.PI / 2;\r\n            scene.add(desk);\r\n\r\n\r\n            // --- Room 2 ---\r\n\r\n            // Text\r\n            fontLoader.load('https://threejs.org/examples/fonts/helvetiker_regular.typeface.json', (font) => {\r\n                const textGeometry = new TextGeometry('Fallahi-Sichani Lab', {\r\n                    font: font,\r\n                    size: 10,\r\n                    height: 1,\r\n                    curveSegments: 12,\r\n                    bevelEnabled: false\r\n                });\r\n                const textMaterial = new THREE.MeshBasicMaterial({ color: 0x000000 });\r\n                const text = new THREE.Mesh(textGeometry, textMaterial);\r\n                text.position.set(-100, -30, -355);\r\n                text.rotation.x = Math.PI;\r\n                text.rotation.y = Math.PI / 2;\r\n                scene.add(text);\r\n\r\n                const textGeometry2 = new TextGeometry('BME Research Assistant', {\r\n                    font: font,\r\n                    size: 10,\r\n                    height: 1,\r\n                    curveSegments: 12,\r\n                    bevelEnabled: false\r\n                });\r\n                const textMaterial2 = new THREE.MeshBasicMaterial({ color: 0x000000 });\r\n                const text2 = new THREE.Mesh(textGeometry2, textMaterial2);\r\n                text2.position.set(-100, -15, -355);\r\n                text2.rotation.x = Math.PI;\r\n                text2.rotation.y = Math.PI / 2;\r\n                scene.add(text2);\r\n            });\r\n\r\n            // Logo\r\n            const texturePath1 = 'uva_bme.jpg'; // Adjust this path if necessary\r\n            textureLoader.load(texturePath1, (texture) => {\r\n                const boxGeometry = new THREE.BoxGeometry(25, 25, 25);\r\n                const boxMaterial = new THREE.MeshBasicMaterial({ map: texture });\r\n                const box = new THREE.Mesh(boxGeometry, boxMaterial);\r\n                // flip the logo\r\n                box.rotation.z = Math.PI;\r\n                box.position.set(-110, -27, -375); // Adjust the position as needed\r\n                scene.add(box);\r\n            });\r\n\r\n            // Desk Placeholder\r\n            const deskGeometry1 = new THREE.BoxGeometry(150, 25, 25);\r\n            const deskMaterial1 = new THREE.MeshBasicMaterial({ color: 0x8B4513 });\r\n            const desk1 = new THREE.Mesh(deskGeometry1, deskMaterial1);\r\n            desk1.position.set(-80, 50, -300); // Adjust the position as needed\r\n            desk1.rotation.y = Math.PI / 2;\r\n            scene.add(desk1);\r\n\r\n            // --- Room 3 ---\r\n\r\n            // Text\r\n            fontLoader.load('https://threejs.org/examples/fonts/helvetiker_regular.typeface.json', (font) => {\r\n                const textGeometry = new TextGeometry('Kinsale Insurance', {\r\n                    font: font,\r\n                    size: 10,\r\n                    height: 1,\r\n                    curveSegments: 12,\r\n                    bevelEnabled: false\r\n                });\r\n                const textMaterial = new THREE.MeshBasicMaterial({ color: 0x000000 });\r\n                const text = new THREE.Mesh(textGeometry, textMaterial);\r\n                text.position.set(-100, -30, -555);\r\n                text.rotation.x = Math.PI;\r\n                text.rotation.y = Math.PI / 2;\r\n                scene.add(text);\r\n\r\n                const textGeometry2 = new TextGeometry('Summer DevOps Intern', {\r\n                    font: font,\r\n                    size: 10,\r\n                    height: 1,\r\n                    curveSegments: 12,\r\n                    bevelEnabled: false\r\n                });\r\n                const textMaterial2 = new THREE.MeshBasicMaterial({ color: 0x000000 });\r\n                const text2 = new THREE.Mesh(textGeometry2, textMaterial2);\r\n                text2.position.set(-100, -15, -555);\r\n                text2.rotation.x = Math.PI;\r\n                text2.rotation.y = Math.PI / 2;\r\n                scene.add(text2);\r\n            });\r\n\r\n            // Logo\r\n            const texturePath3 = 'kinsale.png'; // Adjust this path if necessary\r\n            textureLoader.load(texturePath3, (texture) => {\r\n                const boxGeometry = new THREE.BoxGeometry(25, 25, 25);\r\n                const boxMaterial = new THREE.MeshBasicMaterial({ map: texture });\r\n                const box = new THREE.Mesh(boxGeometry, boxMaterial);\r\n                box.position.set(-110, -27, -575); // Adjust the position as needed\r\n                scene.add(box);\r\n            });\r\n\r\n            // Desk Placeholder\r\n            const deskGeometry2 = new THREE.BoxGeometry(150, 25, 25);\r\n            const deskMaterial2 = new THREE.MeshBasicMaterial({ color: 0x8B4513 });\r\n            const desk2 = new THREE.Mesh(deskGeometry2, deskMaterial2);\r\n            desk2.position.set(-80, 50, -500); // Adjust the position as needed\r\n            desk2.rotation.y = Math.PI / 2;\r\n            scene.add(desk2);\r\n\r\n            // ----- Room 4 -----\r\n\r\n\r\n            // --------------------------------------------------- Movement ---------------------------------------------------\r\n            // Array of circle data\r\n            const circlesData = [\r\n                { color: 0xffff00, position: { x: 0, y: 50, z: -10 }, target: { x: 20, y: 25, z: -100, targetX: -10, targetY: 25, targetZ: -100 } },\r\n                { color: 0xff0000, position: { x: 0, y: 50, z: -200 }, target: { x: 20, y: 25, z: -300, targetX: -10, targetY: 25, targetZ: -300 } },\r\n                { color: 0x00ff00, position: { x: 0, y: 50, z: -400 }, target: { x: 20, y: 25, z: -500, targetX: -10, targetY: 25, targetZ: -500 } }\r\n            ];\r\n\r\n            // Create circles and add to the scene\r\n            const circles = [];\r\n            circlesData.forEach(data => {\r\n                const circleGeometry = new THREE.CircleGeometry(5, 32);\r\n                const circleMaterial = new THREE.MeshBasicMaterial({ color: data.color, side: THREE.DoubleSide });\r\n                const circle = new THREE.Mesh(circleGeometry, circleMaterial);\r\n                circle.position.set(data.position.x, data.position.y, data.position.z);\r\n                scene.add(circle);\r\n                circles.push({ mesh: circle, target: data.target });\r\n            });\r\n\r\n            // Raycaster for detecting clicks\r\n            const raycaster = new THREE.Raycaster();\r\n            const mouse = new THREE.Vector2();\r\n\r\n            // Add event listener for click\r\n            renderer.domElement.addEventListener('click', (event) => {\r\n                // Calculate mouse position in normalized device coordinates\r\n                mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n                mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\r\n\r\n                // Update the raycaster with the camera and mouse position\r\n                raycaster.setFromCamera(mouse, camera);\r\n\r\n                // Calculate objects intersecting the ray\r\n                const intersectCircles = raycaster.intersectObjects(circles.map(c => c.mesh));\r\n                const intersectPosters = raycaster.intersectObjects(posters.map(p => p.mesh));\r\n\r\n                if (intersectCircles.length > 0) {\r\n                    const intersectedCircle = circles.find(c => c.mesh === intersectCircles[0].object);\r\n                    if (intersectedCircle) {\r\n                        console.log('Circle clicked!');\r\n                        // Change camera position\r\n                        gsap.to(camera.position, { duration: 1, x: intersectedCircle.target.x, y: intersectedCircle.target.y, z: intersectedCircle.target.z });\r\n                        // Change orbital target\r\n                        controls.target.set(intersectedCircle.target.targetX, intersectedCircle.target.targetY, intersectedCircle.target.targetZ);\r\n                        controls.update();\r\n                    }\r\n                }\r\n                if (intersectPosters.length > 0) {\r\n                    const intersectedPoster = posters.find(p => p.mesh === intersectPosters[0].object);    \r\n                    if (intersectedPoster) {\r\n                        console.log('Poster clicked!');\r\n                        // Change camera position\r\n                        gsap.to(camera.position, { duration: 1, x: intersectedPoster.target.x, y: intersectedPoster.target.y, z: intersectedPoster.target.z });\r\n                        // Change orbital target\r\n                        controls.target.set(intersectedPoster.controls.x, intersectedPoster.controls.y, intersectedPoster.controls.z);\r\n                        controls.enableRotate = false;\r\n                        const square = document.createElement('div');\r\n                        square.style.position = 'absolute';\r\n                        square.style.top = '100px';\r\n                        square.style.left = '100px';\r\n                        square.style.width = '50px';\r\n                        square.style.height = '50px';\r\n                        square.style.backgroundColor = 'red';\r\n                        square.onclick = () => {\r\n                            console.log('Square clicked!');\r\n                            controls.enableRotate = true;\r\n                            document.body.removeChild(square);\r\n                            camera.position.set(0, 25, 130);\r\n                            controls.target.set(0, 25, 80);\r\n                            controls.update();\r\n                        };\r\n                        document.body.appendChild(square);\r\n                        controls.update();\r\n                    }          \r\n                }\r\n            });\r\n\r\n            // Function to move camera on arrow keys\r\n            let isAnimating = false;\r\n\r\n            function moveCamera(event) {\r\n                if (isAnimating) return;\r\n            \r\n                isAnimating = true;\r\n                const currentCameraPosition = camera.position;\r\n                const currentTargetPosition = controls.target;\r\n                const speed = 50;\r\n            \r\n                const onComplete = () => {\r\n                    isAnimating = false;\r\n                };\r\n            \r\n                switch (event.key) {\r\n                    case 'ArrowUp':\r\n                        gsap.to(currentCameraPosition, { duration: .5, x: 0, y: 25, z: currentCameraPosition.z - speed, onComplete });\r\n                        controls.target.set(0, 25, currentTargetPosition.z - speed);\r\n                        controls.update();\r\n                        break;\r\n                    case 'ArrowDown':\r\n                        gsap.to(currentCameraPosition, { duration: .5, x: 0, y: 25, z: currentCameraPosition.z + speed, onComplete });\r\n                        controls.target.set(0, 25, currentTargetPosition.z + speed);\r\n                        controls.update();\r\n                        break;\r\n                    // Add cases for ArrowLeft and ArrowRight if needed\r\n                }\r\n            }\r\n\r\n            // Add event listener for arrow keys\r\n            window.addEventListener('keydown', moveCamera);\r\n\r\n            // Function to handle window resize\r\n            function onWindowResize() {\r\n                // Update camera aspect ratio and projection matrix\r\n                camera.aspect = window.innerWidth / window.innerHeight;\r\n                camera.updateProjectionMatrix();\r\n\r\n                // Update renderer size\r\n                renderer.setSize(window.innerWidth, window.innerHeight);\r\n            }\r\n\r\n            // Add event listener for window resize\r\n            window.addEventListener('resize', onWindowResize, false);\r\n\r\n            const animate = () => {\r\n            if (isAnimatingWork) {\r\n                requestAnimationFrame(animate);\r\n                controls.update();\r\n                renderer.render(scene, camera);\r\n                }\r\n            };\r\n            animate();\r\n            }\r\n\r\n\r\n\r\n        init();\r\n\r\n        // Cleanup on component unmount\r\n        return () => {\r\n            isAnimatingWork = false;\r\n            if (renderer) {\r\n                console.log('Disposing renderer');\r\n                renderer.dispose();\r\n            }\r\n            if (scene) {\r\n                console.log('Disposing scene');\r\n                scene.traverse((object) => {\r\n                    if (object.geometry) {\r\n                        object.geometry.dispose();\r\n                    }\r\n                    if (object.material) {\r\n                        if (Array.isArray(object.material)) {\r\n                            object.material.forEach((material) => material.dispose());\r\n                        } else {\r\n                            object.material.dispose();\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    return <canvas ref={canvasRef} />;\r\n};\r\n\r\nexport default Background;","import React, { useState, useEffect } from 'react';\r\nimport Navbar from './navbar/Navbar';\r\nimport Background from './background/Background';\r\nimport './Work.css';\r\nfunction About() {\r\n    return (\r\n        <div className=\"About\">\r\n            <div class=\"outer\">\r\n                <Navbar />\r\n                <div class=\"bottom\">\r\n                <Background />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport gsap from 'gsap';\r\n\r\nconst Navbar = () => {\r\n  useEffect(() => {\r\n    const navbar = document.querySelector('.navbar');\r\n    const navbar_container = document.querySelector('.navbar-container');\r\n    let isFadedOut = false;\r\n    let interval;\r\n\r\n    const fadeOut = () => {\r\n      if (navbar) {\r\n        gsap.to(navbar, { opacity: 0, duration: .5 });\r\n        isFadedOut = true;\r\n      }\r\n    };\r\n\r\n    const fadeIn = () => {\r\n      if (navbar) {\r\n        gsap.fromTo(navbar, { opacity: 0 }, { opacity: 1, duration: .5 });\r\n        isFadedOut = false;\r\n        clearInterval(interval);\r\n        interval = setInterval(fadeOut, 4000);\r\n      }\r\n    };\r\n\r\n    // Call fadeIn on component mount\r\n    fadeIn();\r\n\r\n    interval = setInterval(fadeOut, 4000);\r\n\r\n    if (navbar) {\r\n      navbar.addEventListener('mouseover', fadeIn);\r\n    }\r\n\r\n    \r\n    const links = document.querySelectorAll('.navbar-links div');\r\n\r\n    const addBrackets = (event) => {\r\n      const div = event.target;\r\n      const textNode = div.firstChild;\r\n      if (textNode && textNode.nodeType === Node.TEXT_NODE) {\r\n        if (textNode.textContent.includes(\"Projects\")) return;\r\n        textNode.textContent = `[${textNode.textContent}]`;\r\n        console.log(textNode.textContent);\r\n        div.style.color = 'grey';\r\n      }\r\n    };\r\n    \r\n    const removeBrackets = (event) => {\r\n      const div = event.target;\r\n      const textNode = div.firstChild;\r\n      if (textNode && textNode.nodeType === Node.TEXT_NODE) {\r\n        if (textNode.textContent.includes(\"Projects\")) return;\r\n        textNode.textContent = textNode.textContent.replace(/^\\[|\\]$/g, '');\r\n        console.log(textNode.textContent);\r\n        div.style.color = 'black';\r\n      }\r\n    };\r\n\r\n    if (navbar) {\r\n      links.forEach(link => {\r\n        link.addEventListener('mouseover', addBrackets);\r\n        link.addEventListener('mouseout', removeBrackets);\r\n      });\r\n    }\r\n    \r\n    return () => {\r\n      clearInterval(interval); // Cleanup the interval on component unmount\r\n      if (navbar) {\r\n        navbar.removeEventListener('mouseover', fadeIn);\r\n        links.forEach(link => {\r\n          link.removeEventListener('mouseover', addBrackets);\r\n          link.removeEventListener('mouseout', removeBrackets);\r\n        });\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"navbar-container\">\r\n        <nav className=\"navbar\" style={{opacity:'0'}}>\r\n            <div className=\"navbar-links\">\r\n                <div><Link to=\"/work\">Work</Link></div>\r\n                <div><Link to=\"/projects\">[Projects]</Link></div>\r\n            </div>\r\n            <div className=\"navbar-logo\">\r\n                <Link to=\"/\">You Gao</Link>\r\n            </div>\r\n            <div className=\"navbar-links\">\r\n                <div><Link to=\"/about\">About Me</Link></div>\r\n                <div><a href=\"https://blog.yougao.dev/\">To Blog</a></div>\r\n            </div>\r\n        </nav>\r\n    </div>\r\n);\r\n};\r\n\r\nexport default Navbar;","export async function getRecentCommits(username) {\r\n    const commitList = document.getElementById('commit-list');\r\n    commitList.innerHTML = ''; // Clear any existing commits\r\n    console.log('Fetching commits for', username);\r\n    if (!username) {\r\n        alert('Please enter a GitHub username.');\r\n        return;\r\n    }\r\n\r\n    try {\r\n        // Get the user's repositories\r\n        const reposResponse = await fetch(`https://api.github.com/users/${username}/events`);\r\n        const events = await reposResponse.json();\r\n    \r\n        if (events.length === 0) {\r\n            commitList.innerHTML = '<li>No repositories found for this user.</li>';\r\n            return;\r\n        }\r\n    \r\n        // Variable to store all commits\r\n        let allCommits = [];\r\n    \r\n        // Iterate over events to get recent commits\r\n        for (const event of events) {\r\n            if (event.type !== 'PushEvent') {\r\n                continue;\r\n            }\r\n\r\n            // Get the repo\r\n            const repo = event.repo;\r\n            const repoName = repo.name;\r\n\r\n            // Get the Paylod\r\n            const payload = event.payload;\r\n            \r\n            // payload.commits is an array of commits \r\n            const commits = payload.commits;\r\n\r\n            // Add the commits to the allCommits array\r\n            allCommits = allCommits.concat(commits.map(commit => ({\r\n                repoName: repoName,\r\n                message: commit.message,\r\n                date: new Date(event.created_at)\r\n            })));\r\n        }\r\n    \r\n        // Sort the commits by date in descending order\r\n        allCommits.sort((a, b) => b.date - a.date);\r\n    \r\n        // Append the most recent 10 commits to the commitList\r\n        return allCommits.slice(0, 10);\r\n    } catch (error) {\r\n        console.error('Error fetching commits:', error);\r\n        commitList.innerHTML = '<li>Error fetching commits. Please try again later.</li>';\r\n    }\r\n}\r\n\r\nexport async function setCommits() {\r\n    const username = 'You-Gao';\r\n    const commitList = await getRecentCommits(username);\r\n    console.log('Commits:', commitList);\r\n    if (commitList) {\r\n        const commitListElement = document.getElementById('commit-list');\r\n        commitListElement.innerHTML = commitList.map(commit => {\r\n            const options = { \r\n                month: '2-digit', \r\n                day: '2-digit', \r\n                year: 'numeric', \r\n                hour: '2-digit', \r\n                minute: '2-digit', \r\n                hour12: true \r\n            };\r\n            const formattedDate = new Date(commit.date).toLocaleString('en-US', options);\r\n            return `<li>${commit.repoName}: ${commit.message}</li>`;\r\n        }).join('');\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport ScrollTrigger from \"gsap/ScrollTrigger\";\r\nimport { useLayoutEffect, useRef, useEffect } from \"react\";\r\nimport \"./Background.css\";\r\nimport React from \"react\";\r\nimport { getRecentCommits } from \"./recent_commits\";\r\ngsap.registerPlugin(ScrollTrigger);\r\n\r\nexport default function Scene() {\r\n  const component = useRef();\r\n  const slider = useRef();\r\n\r\nconst initializeAnimations = () => {\r\n  ScrollTrigger.getAll().forEach(trigger => trigger.kill());\r\n  let ctx = gsap.context(() => {\r\n      const pixelsPause = 300;\r\n\r\n      let panels = gsap.utils.toArray(\".panel\");\r\n      gsap.to(panels, {\r\n          xPercent: -100 * (panels.length - 1),\r\n          ease: \"none\",\r\n          scrollTrigger: {\r\n              trigger: slider.current,\r\n              scrub: 1,\r\n              pin: true,\r\n              snap: {\r\n                  snapTo: 1 / (panels.length - 1),\r\n                  duration: { min: 0.1, max: 0.5 }, // Adjust duration for less snappy effect\r\n                  ease: \"power3.inOut\" // Adjust easing for smoother snapping\r\n              },\r\n              start: `top+=0 top`,\r\n              end: () => \"+=\" + (window.innerWidth * panels.length),\r\n          },\r\n      });\r\n\r\n      // for panel add a scroll trigger on its img\r\n      panels.forEach((panel, i) => {\r\n        if (i === 0) return; // Skip the first panel\r\n        const img = panel.querySelector(\"img\");\r\n\r\n        gsap.fromTo(img, \r\n            { opacity: 0 }, // Start opacity at 0\r\n            { \r\n                opacity: 1, // End opacity at 1\r\n                ease: \"none\",\r\n                scrollTrigger: {\r\n                    trigger: panel, // Use the panel as the trigger\r\n                    scrub: 1,\r\n                    start: `${(window.innerWidth * i + i * 150)}px`,\r\n                    end: `${(window.innerWidth * i + i * 150)}px`,\r\n                    markers: true, // Optional: for debugging\r\n                    onEnter: () => console.log(\"ScrollTrigger entered\"), // Log when the trigger is entered\r\n                },\r\n            }\r\n        );\r\n\r\n        const h1 = panel.querySelector(\"h1\");\r\n        const h2 = panel.querySelector(\"h2\");\r\n        const p = panel.querySelector(\"p\");\r\n\r\n        gsap.fromTo(h1,\r\n            { x: -200, opacity: 0 },\r\n            {\r\n                x: 0,\r\n                opacity: 1,\r\n                ease: \"none\",\r\n                scrollTrigger: {\r\n                    trigger: panel,\r\n                    scrub: 1,\r\n                    start: `${(window.innerWidth * i + i * 150)}px`,\r\n                    end: `${(window.innerWidth * i + i * 150)}px`,\r\n                    markers: true,\r\n                },\r\n            }\r\n        );\r\n\r\n        gsap.fromTo(h2,\r\n            { x: -200, opacity: 0 },\r\n            {\r\n                x: 0,\r\n                opacity: 1,\r\n                ease: \"none\",\r\n                scrollTrigger: {\r\n                    trigger: panel,\r\n                    scrub: 1,\r\n                    start: `${(window.innerWidth * i + i * 150)}px`,\r\n                    end: `${(window.innerWidth * i + i * 150)}px`,\r\n                    markers: true,\r\n                },\r\n            }\r\n        );\r\n\r\n        gsap.fromTo(p,\r\n            { x: -200, opacity: 0 },\r\n            {\r\n                x: 0,\r\n                opacity: 1,\r\n                ease: \"none\",\r\n                scrollTrigger: {\r\n                    trigger: panel,\r\n                    scrub: 1,\r\n                    start: `${(window.innerWidth * i + i * 150)}px`,\r\n                    end: `${(window.innerWidth * i + i * 150)}px`,\r\n                    markers: true,\r\n                },\r\n            }\r\n        );\r\n      });\r\n      \r\n      // ------ First Panel -------\r\n      // panel with class 'a'\r\n      gsap.fromTo(document.querySelector(\".a img\"), \r\n          { opacity: 0 }, // Start opacity at 0\r\n          { \r\n              opacity: 1, // End opacity at 1\r\n              ease: \"none\",\r\n              delay: 0.5,              \r\n              scrollTrigger: {\r\n                trigger: document.querySelector(\".a img\"),\r\n                start: \"top bottom\",\r\n                end: \"bottom top\",\r\n                toggleActions: \"play reverse play reverse\",\r\n              },\r\n          }\r\n      );\r\n\r\n      // fade from right for h1, h2, p\r\n      gsap.fromTo(document.querySelector(\".a h1\"), \r\n          { x:-100, opacity: 0 }, \r\n          { \r\n              x: 0, \r\n              opacity: 1, \r\n              ease: \"none\",\r\n              delay: 0.5,              \r\n              scrollTrigger: {\r\n                trigger: document.querySelector(\".a h1\"),\r\n                start: \"top bottom\",\r\n                end: \"bottom top\",\r\n                toggleActions: \"play reverse play reverse\",\r\n              },\r\n\r\n          }\r\n      );\r\n      gsap.fromTo(document.querySelector(\".a h2\"), \r\n          { x: -100, opacity: 0 }, \r\n          { \r\n              x: 0, \r\n              opacity: 1, \r\n              ease: \"none\",\r\n              delay: 0.5,\r\n              scrollTrigger: {\r\n                trigger: document.querySelector(\".a h2\"),\r\n                start: \"top bottom\",\r\n                end: \"bottom top\",\r\n                toggleActions: \"play reverse play reverse\",\r\n              },\r\n\r\n          }\r\n      );\r\n      gsap.fromTo(document.querySelector(\".a p\"), \r\n          { x:-100, opacity: 0 }, \r\n          { \r\n              x: 0, \r\n              opacity: 1, \r\n              ease: \"none\",\r\n              delay: 0.5,\r\n              scrollTrigger: {\r\n                trigger: document.querySelector(\".a p\"),\r\n                start: \"top bottom\",\r\n                end: \"bottom top\",\r\n                toggleActions: \"play reverse play reverse\",\r\n              },\r\n\r\n          }\r\n      );\r\n\r\n  }, slider);\r\n};\r\n\r\n  useEffect(() => {\r\n    initializeAnimations();\r\n\r\n    const handleResize = () => {\r\n      initializeAnimations();\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    window.addEventListener('load', function() {\r\n        window.scrollTo(0, 0);\r\n        ScrollTrigger.refresh();\r\n      });\r\n\r\n    const username = 'You-Gao';\r\n    const fetchCommits = async () => {\r\n        try {\r\n            const commitList = await getRecentCommits(username);\r\n            const limitCommits = commitList.slice(0, 10);\r\n            console.log('Commits:', commitList);\r\n            if (limitCommits) {\r\n                const commitListElement = document.getElementById('commit-list');\r\n                commitListElement.innerHTML = limitCommits.map(commit => {\r\n                  const options = { \r\n                    month: '2-digit', \r\n                    day: '2-digit', \r\n                    year: 'numeric', \r\n                    hour: '2-digit', \r\n                    minute: '2-digit', \r\n                    hour12: true \r\n                };\r\n                const formattedDate = new Date(commit.date).toLocaleString('en-US', options);\r\n                    return `<li>${commit.repoName}: ${commit.message} (${formattedDate})</li>`;\r\n                }).join('');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching commits:', error);\r\n        }\r\n    };\r\n\r\n    fetchCommits();\r\n\r\n  return () => {\r\n    window.removeEventListener('resize', handleResize);\r\n    ScrollTrigger.getAll().forEach(trigger => trigger.kill());\r\n    window.scrollTo(0, 0);\r\n  };\r\n}, []);\r\n\r\n  return (\r\n    <div className=\"Projects\" ref={component}>\r\n      <div className=\"overlay-text\">Scroll ></div>\r\n      <div ref={slider} className=\"container\">\r\n        <div className=\"description panel a\">\r\n              <div className=\"project-container\">\r\n                <a href=\"https://www.yougao.dev/Personal-Website/\"> \r\n                <h1>Personal Website v1</h1>\r\n                </a>\r\n                <h2>React, HTML/CSS/JS, Three.js, GSAP</h2>\r\n                <p className=\"\">My current website. First attempt with React, Three.js, and GSAP.</p>\r\n                <img src=\"/site.png\"/>\r\n              </div>\r\n          </div>\r\n        <div className=\"description panel\">\r\n            <div className=\"project-container\">\r\n              <a href=\"https://blog.yougao.dev/\">\r\n              <h1>Personal Blog</h1>\r\n              </a>\r\n              <h2>Jekyll, HTML/CSS/JS</h2>\r\n              <p className=\"\">My personal blog where I share my thoughts on various topics.</p>\r\n              <img src=\"/blog.png\"/>\r\n            </div>\r\n        </div>\r\n        <div className=\"panel\">\r\n            <div className=\"project-container\">\r\n                <a href=\"https://www.yougao.dev/UVA-Event-Oracle/\">\r\n                <h1>UVA Event Oracle</h1>\r\n                </a>\r\n                <h2>Web-Scraping, Python, Vertex AI</h2>\r\n                <p className=\"\">A static page that displays events happening at UVA after ETL.</p>\r\n                <img src=\"/uva-event-oracle.png\"/>\r\n            </div>\r\n        </div>\r\n        <div className=\"panel\">\r\n            <div className=\"project-container\">\r\n                <a href=\"https://www.yougao.dev/UVA-Electives-Oracle/\">\r\n                <h1>UVA Elective Oracle</h1>\r\n                </a>\r\n                <h2>APIs, Python, HTML/CSS/JS</h2>\r\n                <p className=\"\">A web application for interacting w/ interesting electives at UVA</p>\r\n                <img src=\"/uva-elective-oracle.png\"/>\r\n            </div>\r\n        </div>\r\n        <div className=\"panel\">\r\n            <div className=\"project-container\">\r\n                <a href=\"https://github.com/You-Gao/Kaggle-Archive\">\r\n                <h1>Kaggle Archive</h1>\r\n                </a>\r\n                <h2>Jupyter, Pandas, Scikit-learn, Matplotlib</h2>\r\n                <p className=\"\">An archive of my data-science projects from classes and Kaggle</p>\r\n                <img src=\"/kaggle.png\"/>\r\n            </div>\r\n        </div>\r\n        <div className=\"panel\">\r\n            <div className=\"project-container\">\r\n            <a href=\"https://github.com/You-Gao/\" target=\"_blank\"><h1>Check My GitHub to Stay Updated!</h1></a>\r\n            <br/>\r\n            <br/>\r\n            <h2 className=\"margin-top\" >What I'm Up To (My Recent Commits):</h2>\r\n            <ul id=\"commit-list\"></ul>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Navbar from './navbar/Navbar';\r\nimport Background from './background/Background';\r\nimport './Projects.css';\r\nfunction About() {\r\n    return (\r\n        <div className=\"About\">\r\n            <Navbar />\r\n            <Background />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React, { useState, useEffect } from 'react';\r\nimport { HashRouter, Route, Routes } from 'react-router-dom';\r\nimport Home from './home/Home';\r\nimport About from './about/About';\r\nimport Work from './work/Work';\r\nimport Projects from './projects/Projects';\r\nimport './App.css'; \r\n\r\nfunction App() {\r\n    return (\r\n        <Routes>\r\n            <Route path=\"/\" element={<Home />} />\r\n            <Route path=\"/about\" element={<About />} />\r\n            <Route path=\"/work\" element={<Work />} />\r\n            <Route path=\"/projects\" element={<Projects />} />\r\n        </Routes>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport App from './App';\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}