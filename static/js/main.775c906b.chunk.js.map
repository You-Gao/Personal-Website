{"version":3,"sources":["reportWebVitals.js","loading/Loading.js","navbar/Navbar.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","LoadingAnimation","nameRef","useRef","GsvgRef","tl","gsap","timeline","repeat","ease","YsvgRef","t2","useEffect","fromTo","current","opacity","duration","rotation","y","React","createElement","className","ref","width","height","xmlns","x1","y1","x2","y2","stroke","stroke-width","cx","cy","r","fill","Navbar","navbar","document","querySelector","interval","isFadedOut","fadeOut","classList","add","fadeIn","remove","clearInterval","setInterval","addEventListener","removeEventListener","href","App","isLoading","setIsLoading","useState","timer","setTimeout","clearTimeout","Loading","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.775c906b.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useRef, useEffect } from 'react';\r\nimport { gsap } from 'gsap';\r\nimport './Loading.css';\r\n\r\nconst LoadingAnimation = () => {\r\n    const nameRef = useRef(null);\r\n    \r\n    const GsvgRef = useRef(null);\r\n    const tl = gsap.timeline({ repeat: -1, ease: \"linear\" });\r\n\r\n    const YsvgRef = useRef(null);\r\n    const t2 = gsap.timeline({ repeat: -1, ease: \"linear\" });\r\n\r\n\r\n    useEffect(() => {\r\n        gsap.fromTo(nameRef.current, { opacity: 0 }, { opacity: 1, duration: 2 });\r\n\r\n        tl.fromTo(GsvgRef.current, \r\n            { rotation: 0 }, \r\n            { rotation: 360, duration: 2 }\r\n        )\r\n        .fromTo(GsvgRef.current, \r\n                { y: 0 }, \r\n                { y: -1000, duration: 2 }\r\n        );\r\n\r\n        t2.fromTo(YsvgRef.current,\r\n            { rotation: 0 },\r\n            { rotation: 360, duration: 2 }\r\n        )\r\n        .fromTo(YsvgRef.current,\r\n            { y: 0 },\r\n            { y: 1000, duration: 2 }\r\n        );\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"loader-container gradient\">\r\n            <div className=\"loader\">\r\n                <div className=\"svg-wrapper\">\r\n                    <div className=\"svg-container\" ref={YsvgRef}>\r\n                        <svg width=\"100\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <line x1=\"10\" y1=\"10\" x2=\"50\" y2=\"50\" stroke=\"black\" stroke-width=\"5\"/>\r\n                            <line x1=\"90\" y1=\"10\" x2=\"50\" y2=\"50\" stroke=\"black\" stroke-width=\"5\"/>\r\n                            <line x1=\"50\" y1=\"50\" x2=\"50\" y2=\"90\" stroke=\"black\" stroke-width=\"5\"/>\r\n                        </svg>\r\n                    </div>\r\n                    <div className=\"svg-container\" ref={GsvgRef}>\r\n                        <svg width=\"100\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <circle cx=\"50\" cy=\"50\" r=\"40\" stroke=\"black\" stroke-width=\"5\" fill=\"none\"/>\r\n                            <line x1=\"50\" y1=\"50\" x2=\"80\" y2=\"50\" stroke=\"black\" stroke-width=\"5\"/>\r\n                            <line x1=\"80\" y1=\"50\" x2=\"80\" y2=\"80\" stroke=\"black\" stroke-width=\"5\"/>\r\n                        </svg>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoadingAnimation;","import React, { useEffect } from 'react';\r\nimport './Navbar.css';\r\n\r\nconst Navbar = () => {\r\n  useEffect(() => {\r\n    const navbar = document.querySelector('.navbar');\r\n    let isFadedOut = false;\r\n    let interval;\r\n\r\n    const fadeOut = () => {\r\n      if (navbar) {\r\n        navbar.classList.add('fade-out');\r\n        isFadedOut = true;\r\n      }\r\n    };\r\n\r\n    const fadeIn = () => {\r\n      if (navbar) {\r\n        navbar.classList.remove('fade-out');\r\n        isFadedOut = false;\r\n        clearInterval(interval); // Clear the interval when hovered\r\n        interval = setInterval(fadeOut, 2000); // Restart the interval\r\n      }\r\n    };\r\n\r\n    interval = setInterval(fadeOut, 2000); // Initial fade-out after 3 seconds\r\n\r\n    if (navbar) {\r\n      navbar.addEventListener('mouseover', fadeIn);\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(interval); // Cleanup the interval on component unmount\r\n      if (navbar) {\r\n        navbar.removeEventListener('mouseover', fadeIn);\r\n      }\r\n    };\r\n  }, []);\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar\">\r\n                <div className=\"navbar-links\">\r\n                    <div><a href=\"/home\">Work</a></div>\r\n                    <div><a href=\"/about\">Projects</a></div>\r\n                </div>\r\n                <div className=\"navbar-logo\">\r\n                    <a href=\"/\">You Gao</a>\r\n                </div>\r\n                <div className=\"navbar-links\">\r\n                    <div><a href=\"/services\">About Me</a></div>\r\n                    <div><a href=\"https://blog.yougao.dev/\">To Blog</a></div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React, { useState, useEffect } from 'react';\nimport Loading from './loading/Loading';\nimport Navbar from './navbar/Navbar';\n\nfunction App() {\n    const [isLoading, setIsLoading] = useState(true);\n\n    // Simulate loading completion after 3 seconds\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            setIsLoading(false);\n        }, 10000);\n        return () => clearTimeout(timer);\n    }, []);\n\n    return (\n        <div className=\"App\">\n            {isLoading ? <Loading /> : <Navbar />}\n\n            {/* Other components and content */}\n            \n        </div>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}