{"version":3,"sources":["reportWebVitals.js","home/loading/Loading.js","home/navbar/Navbar.js","home/background/Background.js","home/particles/Particles.js","home/Home.js","about/navbar/Navbar.js","about/background/Background.js","about/About.js","work/navbar/Navbar.js","work/background/Background.js","work/Work.js","projects/navbar/Navbar.js","projects/background/Background.js","projects/Projects.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","LoadingAnimation","nameRef","useRef","GsvgRef","tl","gsap","timeline","repeat","ease","YsvgRef","t2","useEffect","fromTo","current","opacity","duration","rotation","y","React","createElement","className","ref","width","height","xmlns","x1","y1","x2","y2","stroke","stroke-width","cx","cy","r","fill","Navbar","navbar","document","querySelector","navbar_container","interval","isFadedOut","yesClick","classList","remove","fadeOut","add","setTimeout","fadeIn","clearInterval","setInterval","addEventListener","removeEventListener","Link","to","href","Background","canvasRef","scene","camera","renderer","model","THREE","background","window","innerWidth","innerHeight","position","set","light","ambientLight","canvas","setSize","controls","OrbitControls","domElement","enableDamping","dampingFactor","loader","GLTFLoader","console","log","concat","load","gltf","scale","animate","requestAnimationFrame","update","render","init","dispose","Particles","particleSystem","x","aspect","updateProjectionMatrix","z","alpha","setClearColor","particlesGeometry","particlesMaterial","color","size","positions","Float32Array","particleCount","i","Math","random","setAttribute","Home","showContent","setShowContent","useState","timer","clearTimeout","Fragment","class","Loading","FontLoader","font","textGeometry","TextGeometry","textMaterial","textMesh","textGeometry2","textMaterial2","textMesh2","textGeometry3","textMaterial3","textMesh3","About","target","enableRotate","enablePan","Scene","component","slider","useLayoutEffect","ctx","context","panels","utils","toArray","xPercent","length","scrollTrigger","trigger","scrub","snap","start","end","ScrollTrigger","create","pin","revert","registerPlugin","App","Routes","Route","path","element","Work","Projects","ReactDOM","createRoot","getElementById","StrictMode","HashRouter"],"mappings":"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","file":"static/js/main.0331089d.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport { gsap } from 'gsap';\r\nimport './Loading.css';\r\n\r\nconst LoadingAnimation = () => {\r\n    const nameRef = useRef(null);\r\n    const GsvgRef = useRef(null);\r\n    const tl = gsap.timeline({ repeat: -1, ease: \"linear\" });\r\n    const YsvgRef = useRef(null);\r\n    const t2 = gsap.timeline({ repeat: -1, ease: \"linear\" });\r\n\r\n    useEffect(() => {\r\n        gsap.fromTo(nameRef.current, { opacity: 0 }, { opacity: 1, duration: 2 });\r\n\r\n        tl.fromTo(GsvgRef.current, \r\n            { rotation: 0 }, \r\n            { rotation: 360, duration: 2 }\r\n        )\r\n        .fromTo(GsvgRef.current, \r\n                { y: 0 }, \r\n                { y: -1000, duration: 2 }\r\n        );\r\n\r\n        t2.fromTo(YsvgRef.current,\r\n            { rotation: 0 },\r\n            { rotation: 360, duration: 2 }\r\n        )\r\n        .fromTo(YsvgRef.current,\r\n            { y: 0 },\r\n            { y: 1000, duration: 2 }\r\n        );\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"loader-container gradient\">\r\n            <div className=\"loader\">\r\n                <div className=\"svg-wrapper\">\r\n                    <div className=\"svg-container\" ref={YsvgRef}>\r\n                        <svg width=\"100\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <line x1=\"10\" y1=\"10\" x2=\"50\" y2=\"50\" stroke=\"black\" stroke-width=\"5\"/>\r\n                            <line x1=\"90\" y1=\"10\" x2=\"50\" y2=\"50\" stroke=\"black\" stroke-width=\"5\"/>\r\n                            <line x1=\"50\" y1=\"50\" x2=\"50\" y2=\"90\" stroke=\"black\" stroke-width=\"5\"/>\r\n                        </svg>\r\n                    </div>\r\n                    <div className=\"svg-container\" ref={GsvgRef}>\r\n                        <svg width=\"100\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <circle cx=\"50\" cy=\"50\" r=\"40\" stroke=\"black\" stroke-width=\"5\" fill=\"none\"/>\r\n                            <line x1=\"50\" y1=\"50\" x2=\"80\" y2=\"50\" stroke=\"black\" stroke-width=\"5\"/>\r\n                            <line x1=\"80\" y1=\"50\" x2=\"80\" y2=\"80\" stroke=\"black\" stroke-width=\"5\"/>\r\n                        </svg>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoadingAnimation;","import React, { useEffect } from 'react';\r\nimport './Navbar.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n  useEffect(() => {\r\n    const navbar = document.querySelector('.navbar');\r\n    const navbar_container = document.querySelector('.navbar-container');\r\n    let isFadedOut = false;\r\n    let interval;\r\n    \r\n    const yesClick = () => {\r\n      if (navbar) {\r\n        navbar_container.classList.remove('no-click');\r\n      }\r\n    }\r\n\r\n    const noClick = () => {\r\n      if (navbar) {\r\n        navbar_container.classList.add('no-click');\r\n        setTimeout(yesClick, 2000);\r\n      }\r\n    }\r\n\r\n    const fadeOut = () => {\r\n      if (navbar) {\r\n        navbar.classList.add('fade-out');\r\n        navbar_container.classList.add('no-click');\r\n        noClick();\r\n        isFadedOut = true;\r\n      }\r\n    };\r\n\r\n    const fadeIn = () => {\r\n      if (navbar) {\r\n        navbar.classList.remove('fade-out');\r\n        isFadedOut = false;\r\n        clearInterval(interval); // Clear the fadeOut interval when hovered\r\n        interval = setInterval(fadeOut, 2000); // Restart the interval\r\n      }\r\n    };\r\n\r\n    interval = setInterval(fadeOut, 2000); // Initial fade-out after 3 seconds\r\n\r\n    if (navbar) {\r\n      navbar.addEventListener('mouseover', fadeIn);\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(interval); // Cleanup the interval on component unmount\r\n      if (navbar) {\r\n        navbar.removeEventListener('mouseover', fadeIn);\r\n      }\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className=\"navbar-container\">\r\n        <nav className=\"navbar\">\r\n            <div className=\"navbar-links\">\r\n                <div><Link to=\"/work\">Work</Link></div>\r\n                <div><Link to=\"/projects\">Projects</Link></div>\r\n            </div>\r\n            <div className=\"navbar-logo\">\r\n                <Link to=\"/\">You Gao</Link>\r\n            </div>\r\n            <div className=\"navbar-links\">\r\n                <div><Link to=\"/about\">About Me</Link></div>\r\n                <div><a href=\"https://blog.yougao.dev/\">To Blog</a></div>\r\n            </div>\r\n        </nav>\r\n    </div>\r\n);\r\n};\r\n\r\nexport default Navbar;","import React, { useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\n\r\nconst Background = () => {\r\n    const canvasRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        let scene, camera, renderer, model;\r\n\r\n        function init() {\r\n            // Create scene\r\n            scene = new THREE.Scene();\r\n            scene.background = new THREE.Color(0xffffff); // Set background color to white\r\n\r\n            // Create camera\r\n            camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n            camera.position.set(10, 0, 0); // Position the camera above the scene\r\n\r\n            // Add light\r\n            const light = new THREE.DirectionalLight(0xffffff, 10); // Increased intensity to 10\r\n            light.position.set(0, 0, 1);\r\n            scene.add(light);\r\n            const ambientLight = new THREE.AmbientLight(0xffffff, 0.5); // Added ambient light\r\n            scene.add(ambientLight);\r\n\r\n            // Create renderer\r\n            renderer = new THREE.WebGLRenderer({ canvas: canvasRef.current });\r\n            renderer.setSize(window.innerWidth, window.innerHeight);\r\n\r\n            // Add orbit controls\r\n            const controls = new OrbitControls(camera, renderer.domElement);\r\n            controls.enableDamping = true; // an animation loop is required when either damping or auto-rotation are enabled\r\n            controls.dampingFactor = 0.25;\r\n\r\n            // Load the model\r\n            const loader = new GLTFLoader();\r\n            const modelPath = 'yoshi.glb'; // Adjust this path if necessary\r\n            console.log(`Loading model from path: ${modelPath}`);\r\n            loader.load(modelPath, (gltf) => {\r\n                model = gltf.scene;\r\n                model.scale.set(30, 30, 30); // Scale the model by a factor of 30\r\n                scene.add(model);\r\n            });\r\n\r\n            // Animation loop\r\n            function animate() {\r\n                requestAnimationFrame(animate);\r\n                controls.update(); // Update orbit controls\r\n                if (model) {\r\n                    model.rotation.y += 0.01; // Rotate the model\r\n                }\r\n                renderer.render(scene, camera);\r\n            }\r\n            animate();\r\n        }\r\n\r\n        init();\r\n\r\n        // Cleanup on component unmount\r\n        return () => {\r\n            if (renderer) {\r\n                renderer.dispose();\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    return <canvas ref={canvasRef} />;\r\n};\r\n\r\nexport default Background;","import React, { useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\n\r\nconst Particles = () => {\r\n    const canvasRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        let scene, camera, renderer, particleSystem;\r\n\r\n        function init() {\r\n            // Scene\r\n            scene = new THREE.Scene();\r\n\r\n            // Camera\r\n            camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n            camera.position.z = 5;\r\n\r\n            // Renderer\r\n            renderer = new THREE.WebGLRenderer({ alpha: true, canvas: canvasRef.current });\r\n            renderer.setSize(window.innerWidth, window.innerHeight);\r\n            renderer.setClearColor(0x000000, 0);\r\n\r\n            // Particles\r\n            const particleCount = 500;\r\n            const particlesGeometry = new THREE.SphereGeometry();\r\n            const particlesMaterial = new THREE.PointsMaterial({ color: 0x000000, size: 0.2 });\r\n\r\n            const positions = new Float32Array(particleCount * 3);\r\n            for (let i = 0; i < particleCount; i++) {\r\n                positions[i * 3] = (Math.random() - 0.5) * 10;\r\n                positions[i * 3 + 1] = (Math.random() - 0.5) * 10;\r\n                positions[i * 3 + 2] = (Math.random() - 0.5) * 10;\r\n            }\r\n\r\n            particlesGeometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));\r\n            particleSystem = new THREE.Points(particlesGeometry, particlesMaterial);\r\n            scene.add(particleSystem);\r\n\r\n            animate();\r\n        }\r\n\r\n        function animate() {\r\n            requestAnimationFrame(animate);\r\n\r\n            particleSystem.rotation.x += 0.001;\r\n\r\n            renderer.render(scene, camera);\r\n        }\r\n\r\n        window.addEventListener('resize', () => {\r\n            camera.aspect = window.innerWidth / window.innerHeight;\r\n            camera.updateProjectionMatrix();\r\n            renderer.setSize(window.innerWidth, window.innerHeight);\r\n        });\r\n\r\n        init();\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', () => {\r\n                camera.aspect = window.innerWidth / window.innerHeight;\r\n                camera.updateProjectionMatrix();\r\n                renderer.setSize(window.innerWidth, window.innerHeight);\r\n            });\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n            <canvas ref={canvasRef} />\r\n    );\r\n};\r\n\r\nexport default Particles;","import React, { useState, useEffect } from 'react';\r\nimport Loading from './loading/Loading';\r\nimport Navbar from './navbar/Navbar';\r\nimport Background from './background/Background';\r\nimport Particles from './particles/Particles';\r\nimport './Home.css'; \r\n\r\nfunction Home() {\r\n    const [showContent, setShowContent] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            setShowContent(true);\r\n        }, 3000);\r\n\r\n        return () => clearTimeout(timer);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"Home\">\r\n            {showContent ? (\r\n                <>\r\n                    <div class=\"outer\">\r\n                        <Navbar />\r\n                        <div class=\"bottom\">\r\n                        <Background />\r\n                        </div>\r\n                        <div class=\"bottom noclick\">\r\n                        <Particles />\r\n                        </div>\r\n                    </div>\r\n\r\n                </>\r\n            ) : (\r\n                <Loading />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { useEffect } from 'react';\r\nimport './Navbar.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n  useEffect(() => {\r\n    const navbar = document.querySelector('.navbar');\r\n    const navbar_container = document.querySelector('.navbar-container');\r\n    let isFadedOut = false;\r\n    let interval;\r\n    \r\n    const yesClick = () => {\r\n      if (navbar) {\r\n        navbar_container.classList.remove('no-click');\r\n      }\r\n    }\r\n\r\n    const noClick = () => {\r\n      if (navbar) {\r\n        navbar_container.classList.add('no-click');\r\n        setTimeout(yesClick, 2000);\r\n      }\r\n    }\r\n\r\n    const fadeOut = () => {\r\n      if (navbar) {\r\n        navbar.classList.add('fade-out');\r\n        navbar_container.classList.add('no-click');\r\n        noClick();\r\n        isFadedOut = true;\r\n      }\r\n    };\r\n\r\n    const fadeIn = () => {\r\n      if (navbar) {\r\n        navbar.classList.remove('fade-out');\r\n        isFadedOut = false;\r\n        clearInterval(interval); // Clear the fadeOut interval when hovered\r\n        interval = setInterval(fadeOut, 2000); // Restart the interval\r\n      }\r\n    };\r\n\r\n    interval = setInterval(fadeOut, 2000); // Initial fade-out after 3 seconds\r\n\r\n    if (navbar) {\r\n      navbar.addEventListener('mouseover', fadeIn);\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(interval); // Cleanup the interval on component unmount\r\n      if (navbar) {\r\n        navbar.removeEventListener('mouseover', fadeIn);\r\n      }\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className=\"navbar-container\">\r\n        <nav className=\"navbar\">\r\n            <div className=\"navbar-links\">\r\n                <div><Link to=\"/work\">Work</Link></div>\r\n                <div><Link to=\"/projects\">Projects</Link></div>\r\n            </div>\r\n            <div className=\"navbar-logo\">\r\n                <Link to=\"/\">You Gao</Link>\r\n            </div>\r\n            <div className=\"navbar-links\">\r\n                <div><Link to=\"/about\">About Me</Link></div>\r\n                <div><a href=\"https://blog.yougao.dev/\">To Blog</a></div>\r\n            </div>\r\n        </nav>\r\n    </div>\r\n);\r\n};\r\n\r\nexport default Navbar;","import React, { useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\nimport { FontLoader } from 'three/examples/jsm/loaders/FontLoader';\r\nimport { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\n\r\nconst Background = () => {\r\n    const canvasRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        let scene, camera, renderer, board, controls;\r\n\r\n        function init() {\r\n            // Scene\r\n            scene = new THREE.Scene();\r\n            scene.background = new THREE.Color(0xffffff);\r\n\r\n            // Camera\r\n            camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n            camera.position.set(0, 0, 10); // Zoom in on the board\r\n\r\n            // Renderer\r\n            renderer = new THREE.WebGLRenderer({ canvas: canvasRef.current });\r\n            renderer.setSize(window.innerWidth, window.innerHeight);\r\n\r\n            // Board\r\n            // const geometry = new THREE.PlaneGeometry(15, 15);\r\n            // const material = new THREE.MeshStandardMaterial();\r\n            // board = new THREE.Mesh(geometry, material);\r\n            // board.rotation.x = -Math.PI / 2; // Rotate to lay flat\r\n            // scene.add(board);\r\n\r\n            // Ambient Light\r\n            const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\r\n            scene.add(ambientLight);\r\n\r\n            // Load Font and Create Text\r\n            const loader = new FontLoader();\r\n            loader.load('https://threejs.org/examples/fonts/helvetiker_regular.typeface.json', (font) => {\r\n                \r\n                // Line 1\r\n                const textGeometry = new TextGeometry('Hello This is My Personal Website', {\r\n                    font: font,\r\n                    size: 1,\r\n                    height: 0.2,\r\n                });\r\n                const textMaterial = new THREE.MeshStandardMaterial({ color: 0xffff00 });\r\n                const textMesh = new THREE.Mesh(textGeometry, textMaterial);\r\n                textMesh.position.set(-10, 0.1, 0); // Adjust position as needed\r\n                scene.add(textMesh);\r\n                \r\n                // Line 2\r\n                const textGeometry2 = new TextGeometry('Testing Testing 123', {\r\n                    font: font,\r\n                    size: 1,\r\n                    height: 0.2,\r\n                });\r\n                const textMaterial2 = new THREE.MeshStandardMaterial({ color: 0xffff00 });\r\n                const textMesh2 = new THREE.Mesh(textGeometry2, textMaterial2);\r\n                textMesh2.position.set(-10, -2, 0); // Adjust position as needed\r\n                scene.add(textMesh2);\r\n\r\n                // Line 3\r\n                const textGeometry3 = new TextGeometry('This is a test', {\r\n                    font: font,\r\n                    size: 1,\r\n                    height: 0.2,\r\n                });\r\n                const textMaterial3 = new THREE.MeshStandardMaterial({ color: 0xffff00 });\r\n                const textMesh3 = new THREE.Mesh(textGeometry3, textMaterial3);\r\n                textMesh3.position.set(-10, -4, 0); // Adjust position as needed\r\n                scene.add(textMesh3);\r\n\r\n            });\r\n\r\n            // Controls\r\n            controls = new OrbitControls(camera, renderer.domElement);\r\n\r\n            // Render loop\r\n            const animate = () => {\r\n                requestAnimationFrame(animate);\r\n                controls.update();\r\n                renderer.render(scene, camera);\r\n            };\r\n            animate();\r\n        };\r\n\r\n        init();\r\n\r\n        // Cleanup on component unmount\r\n        return () => {\r\n            if (renderer) {\r\n                renderer.dispose();\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    return <canvas ref={canvasRef} />;\r\n};\r\n\r\nexport default Background;","import React, { useState, useEffect } from 'react';\r\nimport Navbar from './navbar/Navbar';\r\nimport Background from './background/Background';\r\nimport './About.css';\r\nfunction About() {\r\n    return (\r\n        <div className=\"About\">\r\n            <div class=\"outer\">\r\n                <Navbar />\r\n                <div class=\"bottom\">\r\n                <Background />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React, { useEffect } from 'react';\r\nimport './Navbar.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n  useEffect(() => {\r\n    const navbar = document.querySelector('.navbar');\r\n    const navbar_container = document.querySelector('.navbar-container');\r\n    let isFadedOut = false;\r\n    let interval;\r\n    \r\n    const yesClick = () => {\r\n      if (navbar) {\r\n        navbar_container.classList.remove('no-click');\r\n      }\r\n    }\r\n\r\n    const noClick = () => {\r\n      if (navbar) {\r\n        navbar_container.classList.add('no-click');\r\n        setTimeout(yesClick, 2000);\r\n      }\r\n    }\r\n\r\n    const fadeOut = () => {\r\n      if (navbar) {\r\n        navbar.classList.add('fade-out');\r\n        navbar_container.classList.add('no-click');\r\n        noClick();\r\n        isFadedOut = true;\r\n      }\r\n    };\r\n\r\n    const fadeIn = () => {\r\n      if (navbar) {\r\n        navbar.classList.remove('fade-out');\r\n        isFadedOut = false;\r\n        clearInterval(interval); // Clear the fadeOut interval when hovered\r\n        interval = setInterval(fadeOut, 2000); // Restart the interval\r\n      }\r\n    };\r\n\r\n    interval = setInterval(fadeOut, 2000); // Initial fade-out after 3 seconds\r\n\r\n    if (navbar) {\r\n      navbar.addEventListener('mouseover', fadeIn);\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(interval); // Cleanup the interval on component unmount\r\n      if (navbar) {\r\n        navbar.removeEventListener('mouseover', fadeIn);\r\n      }\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className=\"navbar-container\">\r\n        <nav className=\"navbar\">\r\n            <div className=\"navbar-links\">\r\n                <div><Link to=\"/work\">Work</Link></div>\r\n                <div><Link to=\"/projects\">Projects</Link></div>\r\n            </div>\r\n            <div className=\"navbar-logo\">\r\n                <Link to=\"/\">You Gao</Link>\r\n            </div>\r\n            <div className=\"navbar-links\">\r\n                <div><Link to=\"/about\">About Me</Link></div>\r\n                <div><a href=\"https://blog.yougao.dev/\">To Blog</a></div>\r\n            </div>\r\n        </nav>\r\n    </div>\r\n);\r\n};\r\n\r\nexport default Navbar;","import React, { useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\nimport { FontLoader } from 'three/examples/jsm/loaders/FontLoader';\r\nimport { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\n\r\nconst Background = () => {\r\n    const canvasRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        let scene, camera, renderer, model, controls;\r\n\r\n        function init() {\r\n            // Scene\r\n            scene = new THREE.Scene();\r\n            scene.background = new THREE.Color(0xffffff);\r\n\r\n            // Camera\r\n            camera = new THREE.PerspectiveCamera(1000, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n            camera.position.set(0, 25, 100); // Zoom in on the board\r\n\r\n            // Renderer \r\n            renderer = new THREE.WebGLRenderer({ canvas: canvasRef.current });\r\n            renderer.setSize(window.innerWidth, window.innerHeight);\r\n\r\n            // Ambient Light\r\n            const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\r\n            scene.add(ambientLight);\r\n\r\n            // Controls\r\n            controls = new OrbitControls(camera, renderer.domElement);\r\n            controls.target.set(0, 20, -400);\r\n            \r\n            // Lock orbit to just scroll (zoom)\r\n            controls.enableRotate = false;\r\n            controls.enablePan = false;\r\n\r\n            // Close-up Model\r\n            // Load the model\r\n            const loader = new GLTFLoader();\r\n            const modelPath = 'door.glb'; // Adjust this path if necessary\r\n            console.log(`Loading model from path: ${modelPath}`);\r\n            loader.load(modelPath, (gltf) => {\r\n                model = gltf.scene;\r\n                model.scale.set(30, 30, 30); // Scale the model by a factor of 30\r\n                model.position.set(0, 0, 0); // Set the position of the model\r\n                scene.add(model);\r\n            });\r\n\r\n            // Middle Model\r\n            // Load the model\r\n            const modelPath1 = 'door.glb'; // Adjust this path if necessary\r\n            console.log(`Loading model from path: ${modelPath1}`);\r\n            loader.load(modelPath1, (gltf) => {\r\n                model = gltf.scene;\r\n                model.scale.set(30, 30, 30); // Scale the model by a factor of 30\r\n                model.position.set(0, 0, -200); // Set the position of the model\r\n                scene.add(model);\r\n            });\r\n\r\n            // Far-away Model\r\n            // Load the model\r\n            const modelPath2 = 'door.glb'; // Adjust this path if necessary\r\n            console.log(`Loading model from path: ${modelPath2}`);\r\n            loader.load(modelPath2, (gltf) => {\r\n                model = gltf.scene;\r\n                model.scale.set(30, 30, 30); // Scale the model by a factor of 30\r\n                model.position.set(0, 0, -400); // Set the position of the model\r\n                scene.add(model);\r\n            });\r\n\r\n            // Render loop\r\n            const animate = () => {\r\n                requestAnimationFrame(animate);\r\n                controls.update();\r\n                renderer.render(scene, camera);\r\n            };\r\n            animate();\r\n        }\r\n\r\n        init();\r\n\r\n        // Cleanup on component unmount\r\n        return () => {\r\n            if (renderer) {\r\n                renderer.dispose();\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    return <canvas ref={canvasRef} />;\r\n};\r\n\r\nexport default Background;","import React, { useState, useEffect } from 'react';\r\nimport Navbar from './navbar/Navbar';\r\nimport Background from './background/Background';\r\nimport './Work.css';\r\nfunction About() {\r\n    return (\r\n        <div className=\"About\">\r\n            <div class=\"outer\">\r\n                <Navbar />\r\n                <div class=\"bottom\">\r\n                <Background />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React, { useEffect } from 'react';\r\nimport './Navbar.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n  useEffect(() => {\r\n    const navbar = document.querySelector('.navbar');\r\n    const navbar_container = document.querySelector('.navbar-container');\r\n    let isFadedOut = false;\r\n    let interval;\r\n    \r\n    const yesClick = () => {\r\n      if (navbar) {\r\n        navbar_container.classList.remove('no-click');\r\n      }\r\n    }\r\n\r\n    const noClick = () => {\r\n      if (navbar) {\r\n        navbar_container.classList.add('no-click');\r\n        setTimeout(yesClick, 2000);\r\n      }\r\n    }\r\n\r\n    const fadeOut = () => {\r\n      if (navbar) {\r\n        navbar.classList.add('fade-out');\r\n        navbar_container.classList.add('no-click');\r\n        noClick();\r\n        isFadedOut = true;\r\n      }\r\n    };\r\n\r\n    const fadeIn = () => {\r\n      if (navbar) {\r\n        navbar.classList.remove('fade-out');\r\n        isFadedOut = false;\r\n        clearInterval(interval); // Clear the fadeOut interval when hovered\r\n        interval = setInterval(fadeOut, 2000); // Restart the interval\r\n      }\r\n    };\r\n\r\n    interval = setInterval(fadeOut, 2000); // Initial fade-out after 3 seconds\r\n\r\n    if (navbar) {\r\n      navbar.addEventListener('mouseover', fadeIn);\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(interval); // Cleanup the interval on component unmount\r\n      if (navbar) {\r\n        navbar.removeEventListener('mouseover', fadeIn);\r\n      }\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className=\"navbar-container\">\r\n        <nav className=\"navbar\">\r\n            <div className=\"navbar-links\">\r\n                <div><Link to=\"/work\">Work</Link></div>\r\n                <div><Link to=\"/projects\">Projects</Link></div>\r\n            </div>\r\n            <div className=\"navbar-logo\">\r\n                <Link to=\"/\">You Gao</Link>\r\n            </div>\r\n            <div className=\"navbar-links\">\r\n                <div><Link to=\"/about\">About Me</Link></div>\r\n                <div><a href=\"https://blog.yougao.dev/\">To Blog</a></div>\r\n            </div>\r\n        </nav>\r\n    </div>\r\n);\r\n};\r\n\r\nexport default Navbar;","import gsap from \"gsap\";\r\nimport ScrollTrigger from \"gsap/ScrollTrigger\";\r\nimport { useLayoutEffect, useRef } from \"react\";\r\nimport \"./Background.css\";\r\nimport React from \"react\";\r\n\r\ngsap.registerPlugin(ScrollTrigger);\r\n\r\nexport default function Scene() {\r\n  const component = useRef();\r\n  const slider = useRef();\r\n\r\n  useLayoutEffect(() => {\r\n    let ctx = gsap.context(() => {\r\n      const pixelsPause = 300;\r\n      let panels = gsap.utils.toArray(\".panel\");\r\n      gsap.to(panels, {\r\n        xPercent: -100 * (panels.length - 1),\r\n        ease: \"none\",\r\n        scrollTrigger: {\r\n          trigger: slider.current,\r\n          scrub: 1,\r\n          snap: 1 / (panels.length - 1),\r\n          start: `top+=${pixelsPause} top`,\r\n          end: () => \"+=\" + window.innerWidth * panels.length,\r\n        },\r\n      });\r\n      ScrollTrigger.create({\r\n        trigger: slider.current,\r\n        end: () => \"+=\" + (window.innerWidth * panels.length + pixelsPause),\r\n        pin: true,\r\n      });\r\n    }, component);\r\n    return () => ctx.revert();\r\n  });\r\n\r\n  return (\r\n    <div className=\"App\" ref={component}>\r\n      <div ref={slider} className=\"container\">\r\n        <div className=\"description panel blue\">SCROLL DOWN</div>\r\n        <div className=\"panel red\">ONE</div>\r\n        <div className=\"panel orange\">TWO</div>\r\n        <div className=\"panel purple\">THREE</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Navbar from './navbar/Navbar';\r\nimport Background from './background/Background';\r\nimport './Projects.css';\r\nfunction About() {\r\n    return (\r\n        <div className=\"About\">\r\n            <Navbar />\r\n            <Background />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React, { useState, useEffect } from 'react';\r\nimport { HashRouter, Route, Routes } from 'react-router-dom';\r\nimport Home from './home/Home';\r\nimport About from './about/About';\r\nimport Work from './work/Work';\r\nimport Projects from './projects/Projects';\r\nimport './App.css'; \r\n\r\nfunction App() {\r\n    return (\r\n        <Routes>\r\n            <Route path=\"/\" element={<Home />} />\r\n            <Route path=\"/about\" element={<About />} />\r\n            <Route path=\"/work\" element={<Work />} />\r\n            <Route path=\"/projects\" element={<Projects />} />\r\n        </Routes>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport App from './App';\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}