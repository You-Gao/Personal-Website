{"version":3,"sources":["reportWebVitals.js","home/loading/Loading.js","home/navbar/Navbar.js","home/background/Background.js","home/Home.js","about/navbar/Navbar.js","about/background/Background.js","about/About.js","work/navbar/Navbar.js","work/background/Background.js","work/Work.js","projects/navbar/Navbar.js","projects/background/recent_commits.js","projects/background/Background.js","projects/Projects.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","LoadingAnimation","Navbar","useEffect","navbar","document","querySelector","interval","isFadedOut","fadeOut","gsap","to","opacity","duration","fadeIn","fromTo","clearInterval","setInterval","addEventListener","links","querySelectorAll","addBrackets","event","div","target","textNode","firstChild","nodeType","Node","TEXT_NODE","textContent","concat","console","log","style","color","removeBrackets","replace","forEach","link","window","handleResize","set","removeEventListener","React","createElement","className","Link","href","Background","canvasRef","useRef","lastTime","headingRef","mottoRef","likesRef","bottomRef","sphereRef","image1Ref","image2Ref","image3Ref","scene","camera","renderer","isAnimatingHome","current","delay","ease","y","x","repeat","yoyo","onComplete","THREE","background","innerWidth","innerHeight","position","canvas","setSize","ambientLight","add","controls","OrbitControls","domElement","enableDamping","dampingFactor","middle_sphere","middle_material","size","middle_points","particles_x","particles_y","particles_z","particlesGeometry","particlesMaterial","i","particle","Math","sin","PI","cos","z","particles_x_copy","clone","particles_y_copy","aspect","updateProjectionMatrix","animate","time","requestAnimationFrame","delta","rotation","update","render","init","dispose","traverse","object","geometry","material","Array","isArray","map","textAlign","ref","marginTop","margin","display","justifyContent","rel","height","width","src","alt","Home","isLoaded","setIsLoaded","useState","loadingBarRef","continuousStart","setTimeout","complete","Fragment","class","LoadingBar","includes","debounce","func","wait","timeout","_len","arguments","length","args","_key","clearTimeout","apply","Scene","slider","initializeAnimations","ScrollTrigger","getAll","trigger","kill","panel_length","panels","panel","create","start","end","pin","pinSpacing","scrub","snap","snapTo","min","max","refresh","scrollTrigger","toggleActions","utils","toArray","h2","liElements","li","middleTopImg","middleLeftRotatedImg","middleRightRotatedImg","middleBottomImg","onbeforeunload","scrollTo","remove","id","marginRight","border","marginLeft","top","left","transform","alignItems","fontSize","fontWeight","whiteSpace","registerPlugin","About","model","isAnimatingWork","enableRotate","enablePan","enableZoom","fontLoader","FontLoader","textureLoader","loader","GLTFLoader","woodTexture","load","wrapS","wrapT","planeGeometry","planeMaterial","side","plane","wallTexture","leftWallGeometry","leftWallMaterial","leftWall","rightWallGeometry","rightWallMaterial","rightWall","backWallGeometry","backWallMaterial","backWall","ceilingGeometry","ceilingMaterial","ceiling","numWalls","leftDoorWallGeometry","leftDoorWallMaterial","leftDoorWall","rightDoorWallGeometry","rightDoorWallMaterial","rightDoorWall","middleWallGeometry","middleWallMaterial","middleWall","createWalls","numDoors","modelPath_e","gltf","scale","createDoors","posters","uvaPosterTexture","room1poster","room1Material","room1","passawayTexture","room2poster","room2Material","room2","font","textGeometry","TextGeometry","curveSegments","bevelEnabled","textMaterial","text","text2Geometry","text2Material","text2","disclaimerGeometry","disclaimerMaterial","disclaimer","text3Geometry","text3Material","text3","text4Geometry","text4Material","text4","text5Geometry","text5Material","text5","text6Geometry","text6Material","text6","text7Geometry","text7Material","text7","text8Geometry","text8Material","text8","OutOfBounds","oobGeometry","oob","uvaGeometry","uvaMaterial","uva","yearGeometry","yearMaterial","year","deskGeometry","deskMaterial","desk","textGeometry2","textMaterial2","yearText","texture","boxGeometry","boxMaterial","box","rawmathTexture","backGeometry","backMaterial","back","paidTexture","rightGeometry","rightMaterial","right","simpsonsTexture","simpsonsGeometry","simpsonsMaterial","simpsons","leftTexture","leftGeometry","leftMaterial","scadaTexture","scadaGeometry","scadaMaterial","scada","deskGeometry1","deskMaterial1","desk1","posterTexture","posterGeometry","posterMaterial","poster","labTexture","labGeometry","labMaterial","lab","lab2Texture","lab2Geometry","lab2Material","lab2","lab3Texture","lab3Geometry","lab3Material","lab3","lab4Texture","lab4Geometry","lab4Material","lab4","OutOfBounds2","oobGeometry2","oob2","OutOfBounds3","oobGeometry3","oob3","deskGeometry2","deskMaterial2","desk2","backendTexture","backendGeometry","backendMaterial","backend","comicTexture","comicGeometry","comicMaterial","comic","dockerTexture","dockerGeometry","dockerMaterial","docker","comic2Texture","comic2Geometry","comic2Material","comic2","docker2Texture","docker2Geometry","docker2Material","docker2","upArrowTexture","g_arrows","targetX","targetY","targetZ","data","squareGeometry","squareMaterial","transparent","square","push","mesh","downTexture","r_arrows","raycaster","mouse","isAnimating","clientX","clientY","setFromCamera","intersectGArrows","intersectObjects","c","intersectRArrows","p","intersectGArrow","find","intersectRArrow","currentCameraPosition","currentTargetPosition","key","async","getRecentCommits","username","commitList","getElementById","innerHTML","reposResponse","fetch","events","json","allCommits","type","repoName","repo","name","commits","payload","commit","message","date","Date","created_at","sort","a","b","slice","error","alert","component","context","xPercent","img","onEnter","h1","limitCommits","formattedDate","toLocaleString","month","day","hour","minute","hour12","join","fetchCommits","App","Routes","Route","path","element","Work","Projects","ReactDOM","createRoot","StrictMode","HashRouter"],"mappings":"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","file":"static/js/main.2fedb199.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport { gsap } from 'gsap';\r\nimport './Loading.css';\r\n\r\nconst LoadingAnimation = () => {\r\n    const nameRef = useRef(null);\r\n    const GsvgRef = useRef(null);\r\n    const tl = gsap.timeline({ repeat: -1, ease: \"linear\" });\r\n    const YsvgRef = useRef(null);\r\n    const t2 = gsap.timeline({ repeat: -1, ease: \"linear\" });\r\n\r\n    useEffect(() => {\r\n        gsap.fromTo(nameRef.current, { opacity: 0 }, { opacity: 1, duration: 2 });\r\n\r\n        tl.fromTo(GsvgRef.current, \r\n            { rotation: 0 }, \r\n            { rotation: 360, duration: 2 }\r\n        )\r\n        .fromTo(GsvgRef.current, \r\n                { y: 0 }, \r\n                { y: -1000, duration: 2 }\r\n        );\r\n\r\n        t2.fromTo(YsvgRef.current,\r\n            { rotation: 0 },\r\n            { rotation: 360, duration: 2 }\r\n        )\r\n        .fromTo(YsvgRef.current,\r\n            { y: 0 },\r\n            { y: 1000, duration: 2 }\r\n        );\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"loader-container gradient\">\r\n            <div className=\"loader\">\r\n                <div className=\"svg-wrapper\">\r\n                    <div className=\"svg-container\" ref={YsvgRef}>\r\n                        <svg width=\"100\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <line x1=\"10\" y1=\"10\" x2=\"50\" y2=\"50\" stroke=\"black\" stroke-width=\"5\"/>\r\n                            <line x1=\"90\" y1=\"10\" x2=\"50\" y2=\"50\" stroke=\"black\" stroke-width=\"5\"/>\r\n                            <line x1=\"50\" y1=\"50\" x2=\"50\" y2=\"90\" stroke=\"black\" stroke-width=\"5\"/>\r\n                        </svg>\r\n                    </div>\r\n                    <div className=\"svg-container\" ref={GsvgRef}>\r\n                        <svg width=\"100\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <circle cx=\"50\" cy=\"50\" r=\"40\" stroke=\"black\" stroke-width=\"5\" fill=\"none\"/>\r\n                            <line x1=\"50\" y1=\"50\" x2=\"80\" y2=\"50\" stroke=\"black\" stroke-width=\"5\"/>\r\n                            <line x1=\"80\" y1=\"50\" x2=\"80\" y2=\"80\" stroke=\"black\" stroke-width=\"5\"/>\r\n                        </svg>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoadingAnimation;","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport gsap from 'gsap';\r\n\r\nconst Navbar = () => {\r\n  useEffect(() => {\r\n    const navbar = document.querySelector('.navbar');\r\n    const navbar_container = document.querySelector('.navbar-container');\r\n    let isFadedOut = false;\r\n    let interval;\r\n\r\n    const fadeOut = () => {\r\n      if (navbar) {\r\n        gsap.to(navbar, { opacity: 0, duration: .5 });\r\n        isFadedOut = true;\r\n      }\r\n    };\r\n\r\n    const fadeIn = () => {\r\n      if (navbar) {\r\n        gsap.fromTo(navbar, { opacity: 0 }, { opacity: 1, duration: .5 });\r\n        isFadedOut = false;\r\n        clearInterval(interval);\r\n        interval = setInterval(fadeOut, 4000);\r\n      }\r\n    };\r\n\r\n    // Call fadeIn on component mount\r\n    fadeIn();\r\n\r\n    interval = setInterval(fadeOut, 4000);\r\n\r\n    if (navbar) {\r\n      navbar.addEventListener('mouseover', fadeIn);\r\n    }\r\n\r\n    const links = document.querySelectorAll('.navbar-links div');\r\n\r\n    const addBrackets = (event) => {\r\n      const div = event.target;\r\n      const textNode = div.firstChild;\r\n      if (textNode && textNode.nodeType === Node.TEXT_NODE) {\r\n        textNode.textContent = `[${textNode.textContent}]`;\r\n        console.log(textNode.textContent);\r\n        div.style.color = 'grey';\r\n      }\r\n    };\r\n    \r\n    const removeBrackets = (event) => {\r\n      const div = event.target;\r\n      const textNode = div.firstChild;\r\n      if (textNode && textNode.nodeType === Node.TEXT_NODE) {\r\n        textNode.textContent = textNode.textContent.replace(/^\\[|\\]$/g, '');\r\n        console.log(textNode.textContent);\r\n        div.style.color = 'black';\r\n      }\r\n    };\r\n\r\n    if (navbar) {\r\n      links.forEach(link => {\r\n        link.addEventListener('mouseover', addBrackets);\r\n        link.addEventListener('mouseout', removeBrackets);\r\n      });\r\n    }\r\n\r\n    const handleResize = () => {\r\n      // Clean up any previous settings\r\n      clearInterval(interval);\r\n    \r\n      if (navbar) {\r\n        gsap.set(navbar, { opacity: 1});\r\n        isFadedOut = false;\r\n        fadeIn();  // Reinitialize the fadeIn behavior\r\n      }\r\n    };\r\n    \r\n    window.addEventListener('resize', handleResize);\r\n    \r\n    return () => {\r\n      clearInterval(interval); // Cleanup the interval on component unmount\r\n      if (navbar) {\r\n        navbar.removeEventListener('mouseover', fadeIn);\r\n        links.forEach(link => {\r\n          link.removeEventListener('mouseover', addBrackets);\r\n          link.removeEventListener('mouseout', removeBrackets);\r\n        });\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"navbar-container\">\r\n        <nav className=\"navbar\" style={{opacity:'0'}}>\r\n            <div className=\"navbar-links\">\r\n                <div><Link to=\"/work\">Work</Link></div>\r\n                <div><Link to=\"/projects\">Projects</Link></div>\r\n            </div>\r\n            <div className=\"navbar-logo\">\r\n                <Link to=\"/\">You Gao</Link>\r\n            </div>\r\n            <div className=\"navbar-links\">\r\n                <div><Link to=\"/about\">About Me</Link></div>\r\n                <div><a href=\"https://blog.yougao.dev/\" target=\"_blank\">To Blog</a></div>\r\n            </div>\r\n        </nav>\r\n    </div>\r\n);\r\n};\r\n\r\nexport default Navbar;","import React, { useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport './Background.css';\r\nimport gsap from 'gsap';   \r\n\r\nconst Background = () => {\r\n    const canvasRef = useRef(null);\r\n    const fps = 30; // Set a valid frame rate\r\n    const interval = 1000 / fps;\r\n    let lastTime = 0;\r\n    const headingRef = useRef(null);\r\n    const mottoRef = useRef(null);\r\n    const likesRef = useRef(null);\r\n    const bottomRef = useRef(null);\r\n    const sphereRef = useRef(null);\r\n    const image1Ref = useRef(null);\r\n    const image2Ref = useRef(null);\r\n    const image3Ref = useRef(null);\r\n\r\n    useEffect(() => {\r\n        let scene, camera, renderer, model;\r\n        let isAnimatingHome = true;\r\n\r\n        gsap.fromTo(canvasRef.current, { opacity: 0}, { opacity: 1, duration: 2, delay: .7, ease: 'power2.inOut' });\r\n        gsap.fromTo(headingRef.current, { opacity: 0, y: -100}, { y:0, opacity: 1, duration: 2, delay: 1, ease: 'power2.inOut' });\r\n        gsap.fromTo(mottoRef.current, { opacity: 0, x: -100}, { x:0, opacity: 1, duration: 2, delay: 1.5, ease: 'power2.inOut' });\r\n        gsap.fromTo(likesRef.current, { opacity: 0, x: -100}, { x:0, opacity: 1, duration: 2, delay: 2, ease: 'power2.inOut' });\r\n        gsap.fromTo(bottomRef.current, { opacity: 0, y: 100}, { y:0, opacity: 1, duration: 2, delay: 2.5, ease: 'power2.inOut' });\r\n        gsap.fromTo(image1Ref.current, { opacity: 0, y: 100}, { y:0, opacity: 1, duration: 2, delay: 3, ease: 'power2.inOut' });\r\n        gsap.fromTo(image2Ref.current, { opacity: 0, y: 75}, { y:0, opacity: 1, duration: 2, delay: 3.25, ease: 'power2.inOut' });\r\n        gsap.fromTo(image3Ref.current, { opacity: 0, y: 50}, { y:0, opacity: 1, duration: 2, delay: 3.5, ease: 'power2.inOut' });\r\n        gsap.fromTo(sphereRef.current, { opacity: 0}, { opacity: 1, duration: 2, delay: 4, ease: 'power2.inOut' });\r\n        \r\n        gsap.to([sphereRef.current], {\r\n            color: '#ffffff', // Target color\r\n            duration: 1,\r\n            repeat: 6,\r\n            yoyo: true,\r\n            ease: 'power2.inOut',\r\n            onComplete: () => {\r\n                gsap.to([sphereRef.current], {\r\n                    color: '#000000', // Set back to black\r\n                    duration: 1,\r\n                    ease: 'power2.inOut'\r\n                });\r\n            }\r\n        });\r\n\r\n        function init() {\r\n            // Create scene\r\n            scene = new THREE.Scene();\r\n            scene.background = new THREE.Color(0xffffff);\r\n\r\n            camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n            camera.position.set(.5, 0, 2.75); \r\n            \r\n            renderer = new THREE.WebGLRenderer({ canvas: canvasRef.current });\r\n            renderer.setSize(window.innerWidth / 2, window.innerHeight / 1.65);\r\n\r\n            // Darken Scene\r\n            const ambientLight = new THREE.AmbientLight(0x404040);\r\n            scene.add(ambientLight);\r\n\r\n\r\n            // Add orbit controls\r\n            const controls = new OrbitControls(camera, renderer.domElement);\r\n            controls.enableDamping = true; // an animation loop is required when either damping or auto-rotation are enabled\r\n            controls.dampingFactor = 0.25;\r\n\r\n            // 50 Particles at each angle rotating in a sphere\r\n            const middle_sphere = new THREE.SphereGeometry(.8, 32, 32);\r\n            const middle_material = new THREE.PointsMaterial({ color: 0xffffff, size: .2 });\r\n            const middle_points = new THREE.Points(middle_sphere, middle_material);\r\n            scene.add(middle_points);\r\n\r\n            const particles_x = new THREE.Group();\r\n            const particles_y = new THREE.Group();\r\n            const particles_z = new THREE.Group();\r\n\r\n            const particlesGeometry = new THREE.SphereGeometry(0.1, 32, 32);\r\n            const particlesMaterial = new THREE.PointsMaterial({ color: 0x000000, size: 0.02 });\r\n            for (let i = 0; i < 20; i++) {\r\n                const particle = new THREE.Points(particlesGeometry, particlesMaterial);\r\n                particle.position.x = Math.sin(i / 20 * Math.PI * 2) * 1.5;\r\n                particle.position.y = Math.cos(i / 20 * Math.PI * 2) * 1.5;\r\n                particle.position.z = 0;\r\n                particles_x.add(particle);\r\n            }\r\n            scene.add(particles_x);\r\n            for (let i = 0; i < 20; i++) {\r\n                const particle = new THREE.Points(particlesGeometry, particlesMaterial);\r\n                particle.position.x = Math.sin(i / 20 * Math.PI * 2) * 2;\r\n                particle.position.y = 0;\r\n                particle.position.z = Math.cos(i / 20 * Math.PI * 2) * 2;\r\n                particles_y.add(particle);\r\n            }\r\n            scene.add(particles_y);\r\n            for (let i = 0; i < 20; i++) {\r\n                const particle = new THREE.Points(particlesGeometry, particlesMaterial);\r\n                particle.position.x = 0;\r\n                particle.position.y = Math.sin(i / 20 * Math.PI * 2) * 1.5;\r\n                particle.position.z = Math.cos(i / 20 * Math.PI * 2) * 1.5;\r\n                particles_z.add(particle);\r\n            }\r\n            scene.add(particles_z);\r\n\r\n            // Deep Copies\r\n            const particles_x_copy = particles_x.clone();\r\n            const particles_y_copy = particles_y.clone();\r\n            const particles_z_copy = particles_z.clone();\r\n\r\n        // Function to handle window resize\r\n        function onWindowResize() {\r\n            // Update camera aspect ratio and projection matrix\r\n            camera.aspect = window.innerWidth / window.innerHeight;\r\n            camera.updateProjectionMatrix();\r\n\r\n            // Update renderer size \r\n            renderer.setSize(window.innerWidth / 2 , window.innerHeight / 1.5);\r\n        }\r\n\r\n        // Add event listener for window resize\r\n        window.addEventListener('resize', onWindowResize, false);\r\n\r\n        // Animation loop\r\n        // Render loop\r\n        const animate = (time) => {\r\n            if (isAnimatingHome) {\r\n                requestAnimationFrame(animate);\r\n                \r\n                // Calculate the time difference\r\n                const delta = time - lastTime;\r\n                // If enough time has passed, render the frame\r\n                if (delta > interval) {\r\n                    // Spin the Middle Sphere\r\n                    middle_points.rotation.x += 0.01;\r\n\r\n                    // Update Rotations\r\n                    particles_x.rotation.x += 0.03;\r\n                    particles_x.rotation.z += 0.03;\r\n\r\n                    particles_x_copy.rotation.x += 0.03;\r\n                    particles_x_copy.rotation.y += 0.03;\r\n\r\n                    particles_y.rotation.y += 0.03;\r\n\r\n                    particles_y_copy.rotation.y += 0.03;\r\n                    particles_y_copy.rotation.z += 0.03;\r\n\r\n                    particles_z.rotation.z += 0.03;\r\n                    particles_z.rotation.x += 0.05;\r\n\r\n                    lastTime = time - (delta % interval);        \r\n                    controls.update();\r\n                    renderer.render(scene, camera);\r\n                }\r\n            }\r\n        };\r\n            animate();\r\n        }\r\n\r\n        init();\r\n\r\n        // Cleanup on component unmount\r\n        return () => {\r\n            isAnimatingHome = false;\r\n            if (renderer) {\r\n                console.log('Disposing renderer');\r\n                renderer.dispose();\r\n            }\r\n            if (scene) {\r\n                console.log('Disposing scene');\r\n                scene.traverse((object) => {\r\n                    if (object.geometry) {\r\n                        object.geometry.dispose();\r\n                    }\r\n                    if (object.material) {\r\n                        if (Array.isArray(object.material)) {\r\n                            object.material.forEach((material) => {\r\n                                material.dispose();\r\n                                if (material.map) {\r\n                                    material.map.dispose();\r\n                                }\r\n                            });\r\n                        } else {\r\n                            object.material.dispose();\r\n                            if (object.material.map) {\r\n                                object.material.map.dispose();\r\n                            }\r\n                        }\r\n                    }\r\n                    if (object instanceof THREE.WebGLRenderTarget) {\r\n                        object.dispose();\r\n                    }\r\n                });\r\n            }\r\n        };\r\n    }, []);\r\n\r\nreturn (\r\n    \r\n<div>\r\n    <div>   \r\n    <table className=\"table-container\">\r\n        <tr > \r\n            <td className=\"table-cell\" style={{ textAlign: 'right' }}>\r\n                 <div ><h1 ref={headingRef} style={{textAlign: 'right'}}>hi i'm you.</h1></div>\r\n                 <div ref={mottoRef} >\r\n                 <h2 className=\"dynamic-margin-head\" style={{color: \"grey\"}}>my work philosophy:</h2>\r\n                 <h1 style={{textAlign: 'right', marginTop: '-20px'}}>minimal, sustainable,</h1>\r\n                 <h1 style={{textAlign: 'right', marginTop:  '-20px'}}>pragmatic & effective</h1>\r\n                 </div>\r\n\r\n\r\n                <div ref={likesRef}>\r\n                <h2 style={{color: \"grey\"}}>i'm dedicated to:</h2>\r\n                <ul style={{marginTop:  '-25px'}}>\r\n                    <li><h1 style={{margin: '0', marginTop: '-5px'}}>making cool things</h1></li>\r\n                    <li><h1 style={{margin: '0', marginTop: '-5px'}}>learning new stuff</h1></li>\r\n                    <li><h1 style={{margin: '0', marginTop: '-5px'}}>helping people</h1></li>\r\n                </ul>\r\n                </div>\r\n\r\n                <div ref={bottomRef}>\r\n                <h2 className=\"dynamic-margin\" style={{textAlign: 'right', color: \"grey\"}}>stay connected!</h2>\r\n                <div style={{display: 'flex', justifyContent: 'right'}}>\r\n                    <a href=\"https://www.linkedin.com/in/gao-you/\" target=\"_blank\" rel=\"noreferrer\">\r\n                    <img ref={image1Ref} style={{height: '75px', width: '75px', margin: '0 10px'}} src=\"linked_logo.png\" alt=\"Image 1\"/>\r\n                    </a>\r\n                    <a href=\"https://www.github.com/you-gao/\" target=\"_blank\" rel=\"noreferrer\">\r\n                    <img ref={image2Ref} style={{height: '75px', width: '75px', margin: '0 10px'}} src=\"github_logo.png\" alt=\"Image \"/>\r\n                    </a>\r\n                    <a href=\"https://stackoverflow.com/users/26650867/you-gao\" target=\"_blank\" rel=\"noreferrer\">\r\n                    <img ref={image3Ref} style={{height: '75px', width: '75px'}} src=\"stack_logo.png\" alt=\"Image 3\"/>\r\n                    </a>\r\n                </div>\r\n                </div>\r\n            </td>\r\n            <td className=\"table-cell\">\r\n                <canvas ref={canvasRef} />\r\n                <h1 style={{textAlign: 'center'}} ref={sphereRef}>gaze into the sphere.</h1>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    </div>\r\n</div>\r\n);\r\n};\r\n\r\nexport default Background;","import React, { useState, useEffect } from 'react';\r\nimport Loading from './loading/Loading';\r\nimport Navbar from './navbar/Navbar';\r\nimport Background from './background/Background';\r\nimport './Home.css'; \r\nimport LoadingBar from 'react-top-loading-bar';\r\nimport { useRef } from 'react'; \r\nimport { hashHistory } from 'react-router-dom';\r\n\r\nfunction Home() {\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const loadingBarRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        loadingBarRef.current.continuousStart();\r\n\r\n        const handleLoad = () => {\r\n            console.log('Loading...');\r\n            loadingBarRef.current.complete();\r\n            setTimeout(() => {\r\n                setIsLoaded(true);\r\n            }, 250); \r\n        };\r\n\r\n\r\n\r\n        setTimeout(() => {\r\n            handleLoad();\r\n        }, 25);\r\n\r\n        return () => {\r\n        };\r\n    }, []);\r\n    return (\r\n        <div className=\"Home\">\r\n            {isLoaded ? (\r\n                <>\r\n                    <div class=\"outer\">\r\n                        <Navbar />\r\n                        <div class=\"bottom\">\r\n                        <Background />\r\n                        </div>\r\n                        <div class=\"bottom noclick\">\r\n                        </div>\r\n                    </div>\r\n\r\n                </>\r\n            ) : (\r\n                <LoadingBar color=\"#1f1f1f\" ref={loadingBarRef}/>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport gsap from 'gsap';\r\n\r\nconst Navbar = () => {\r\n  useEffect(() => {\r\n    const navbar = document.querySelector('.navbar');\r\n    const navbar_container = document.querySelector('.navbar-container');\r\n    let isFadedOut = false;\r\n    let interval;\r\n\r\n    const fadeOut = () => {\r\n      if (navbar) {\r\n        gsap.to(navbar, { opacity: 0, duration: .5 });\r\n        isFadedOut = true;\r\n      }\r\n    };\r\n\r\n    const fadeIn = () => {\r\n      if (navbar) {\r\n        gsap.fromTo(navbar, { opacity: 0 }, { opacity: 1, duration: .5 });\r\n        isFadedOut = false;\r\n        clearInterval(interval);\r\n        interval = setInterval(fadeOut, 1000);\r\n      }\r\n    };\r\n\r\n    interval = setInterval(fadeOut, 1000);\r\n\r\n    if (navbar) {\r\n      navbar.addEventListener('mouseover', fadeIn);\r\n    }\r\n\r\n    \r\n    const links = document.querySelectorAll('.navbar-links div');\r\n\r\n    const addBrackets = (event) => {\r\n      const div = event.target;\r\n      const textNode = div.firstChild;\r\n      if (textNode && textNode.nodeType === Node.TEXT_NODE) {\r\n        if (textNode.textContent.includes(\"About\")) return;\r\n        textNode.textContent = `[${textNode.textContent}]`;\r\n        console.log(textNode.textContent);\r\n        div.style.color = 'grey';\r\n      }\r\n    };\r\n    \r\n    const removeBrackets = (event) => {\r\n      const div = event.target;\r\n      const textNode = div.firstChild;\r\n      if (textNode && textNode.nodeType === Node.TEXT_NODE) {\r\n        if (textNode.textContent.includes(\"About\")) return;\r\n        textNode.textContent = textNode.textContent.replace(/^\\[|\\]$/g, '');\r\n        console.log(textNode.textContent);\r\n        div.style.color = 'black';\r\n      }\r\n    };\r\n\r\n    if (navbar) {\r\n      links.forEach(link => {\r\n        link.addEventListener('mouseover', addBrackets);\r\n        link.addEventListener('mouseout', removeBrackets);\r\n      });\r\n    }\r\n\r\n    const handleResize = debounce(() => {\r\n      if (navbar) {\r\n        gsap.set(navbar, { opacity: 1});\r\n        isFadedOut = false;\r\n        fadeIn();  // Reinitialize the fadeIn behavior\r\n      }\r\n    }, 100);\r\n    \r\n    \r\n    window.addEventListener('resize', handleResize);\r\n    \r\n    return () => {\r\n      clearInterval(interval); // Cleanup the interval on component unmount\r\n      if (navbar) {\r\n        navbar.removeEventListener('mouseover', fadeIn);\r\n        links.forEach(link => {\r\n          link.removeEventListener('mouseover', addBrackets);\r\n          link.removeEventListener('mouseout', removeBrackets);\r\n        });\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const debounce = (func, wait) => {\r\n    let timeout;\r\n    return (...args) => {\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(() => func.apply(this, args), wait);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar-container\">\r\n        <nav className=\"navbar\" style={{opacity:'0'}}>\r\n            <div className=\"navbar-links\">\r\n                <div><Link to=\"/work\">Work</Link></div>\r\n                <div><Link to=\"/projects\">Projects</Link></div>\r\n            </div>\r\n            <div className=\"navbar-logo\">\r\n                <Link to=\"/\">You Gao</Link>\r\n            </div>\r\n            <div className=\"navbar-links\">\r\n                <div><Link to=\"/about\">[About Me]</Link></div>\r\n                <div><a href=\"https://blog.yougao.dev/\" target=\"_blank\">To Blog</a></div>\r\n            </div>\r\n        </nav>\r\n    </div>\r\n);\r\n};\r\n\r\nexport default Navbar;","import gsap from \"gsap\";\r\nimport ScrollTrigger from \"gsap/ScrollTrigger\";\r\nimport { useLayoutEffect, useRef, useEffect } from \"react\";\r\nimport \"./Background.css\";\r\nimport React from \"react\";\r\ngsap.registerPlugin(ScrollTrigger);\r\n\r\nexport default function Scene() {\r\n  const component = useRef();\r\n  const slider = useRef();\r\n\r\n  const initializeAnimations = () => {\r\n    ScrollTrigger.getAll().forEach(trigger => trigger.kill());\r\n    const panel_length = document.querySelectorAll('.apanel').length;\r\n    const panels = document.querySelectorAll('.apanel');\r\n    panels.forEach((panel, i) => {\r\n      ScrollTrigger.create({\r\n        trigger: panel,\r\n        start: \"top top\", \r\n        end: \"+=100%\",\r\n        pin: true, \r\n        pinSpacing: true,  \r\n        scrub: 1,\r\n        snap: {\r\n          snapTo: 1 / (panel_length*2 - 1), // Snap to each panel\r\n          duration: { min: 0.2, max: 0.5 }, // Duration range for the snap animation\r\n          ease: \"power1.inOut\" // Easing function for the snap animation\r\n        }\r\n      });\r\n      ScrollTrigger.refresh();\r\n\r\n      if (i === 0) {\r\n        gsap.fromTo(\r\n          panel.querySelector(\"#name\"),\r\n          {\r\n            opacity: 0,\r\n          },\r\n          {\r\n            opacity: 1,\r\n            duration: 1,\r\n            delay: 0.5,\r\n            ease: \"power2\",\r\n            scrollTrigger: {\r\n              trigger: panel.querySelector(\"#name\"),\r\n              start: \"top 70%\",\r\n              toggleActions: \"play reverse play reverse\",\r\n            },\r\n          }\r\n          \r\n        );\r\n      } else {\r\n        gsap.fromTo(\r\n          panel.querySelector(\"#name\"),\r\n          {\r\n            opacity: 0,\r\n          },\r\n          {\r\n            opacity: 1,\r\n            duration: 1,\r\n            delay: 0.5,\r\n            ease: \"power2\",\r\n            scrollTrigger: {\r\n              trigger: panel,\r\n              start: \"top center\",\r\n              end: \"bottom\",\r\n              scrub: true,\r\n            },\r\n          }\r\n        );\r\n      }\r\n      });\r\n\r\n      // -- heading 2 animations --\r\n      gsap.utils.toArray(\".apanel\").forEach((panel, i) => {\r\n        const ulElements = panel.querySelectorAll(\".under-center h2\");\r\n        ulElements.forEach((h2) => {\r\n          if (i === 0) {\r\n            gsap.fromTo(\r\n              h2,\r\n              {\r\n                opacity: 0,\r\n              },\r\n              {\r\n                opacity: 1,\r\n                duration: 1,\r\n                delay: 0.5,\r\n                ease: \"power2\",\r\n                scrollTrigger: {\r\n                  trigger: h2,\r\n                  start: \"top bottom\",\r\n                  end: \"bottom top\",\r\n                  toggleActions: \"play reverse play reverse\",\r\n                },\r\n              }\r\n            );\r\n          }\r\n        else {\r\n          gsap.fromTo(\r\n            h2,\r\n            {\r\n              opacity: 0,\r\n            },\r\n            {\r\n              opacity: 1,\r\n              duration: 1,\r\n              delay: 0.5,\r\n              ease: \"power2\",\r\n              scrollTrigger: {\r\n                trigger: panel,\r\n                start: \"top center\",\r\n                end: \"bottom\",\r\n                scrub: true,\r\n              },\r\n            }\r\n          );\r\n        }\r\n\r\n        // -- list animations --\r\n        const liElements = panel.querySelectorAll(\".under-center li\");\r\n        if (i === 0) {\r\n          liElements.forEach((li, i) => {\r\n            gsap.fromTo(\r\n              li,\r\n              {\r\n                opacity: 0,\r\n                x: 100 + i * 100,\r\n              },\r\n              {\r\n                opacity: 1,\r\n                x: 0,\r\n                duration: 2,\r\n                delay: 0.2,\r\n                ease: \"power2\",\r\n                scrollTrigger: {\r\n                  trigger: li,\r\n                  start: \"top 70%\",\r\n                  toggleActions: \"play reverse play reverse\",\r\n                },\r\n              }\r\n            );\r\n          });\r\n        }\r\n        else{\r\n        liElements.forEach((li, i) => {\r\n          gsap.fromTo(\r\n            li,\r\n            {\r\n              opacity: 0,\r\n              x: 100 + i * 100,\r\n            },\r\n            {\r\n              opacity: 1,\r\n              x: 0,\r\n              duration: 2,\r\n              delay: 0.2,\r\n              ease: \"power2\",\r\n              scrollTrigger: {\r\n                trigger: panel,\r\n                start: \"top\",\r\n                end: \"center\",\r\n                scrub: true,\r\n                toggleActions: \"play reverse play reverse\",\r\n              },\r\n            }\r\n\r\n          );\r\n        });\r\n      }\r\n        });\r\n\r\n        // for each panel get the class middle-top-img and add a fade from top\r\n        const middleTopImg = panel.querySelector(\".middle-top-img\");\r\n        gsap.fromTo(\r\n          middleTopImg,\r\n          {\r\n            opacity: 0,\r\n            y: -100,\r\n          },\r\n          {\r\n            opacity: 1,\r\n            y: 0,\r\n            duration: 1,\r\n            ease: \"power2\",\r\n            scrollTrigger: {\r\n              trigger: panel,\r\n              start: \"top center\",\r\n              end: \"bottom\",\r\n              toggleActions: i === panels.length - 1 ? \"play none play reverse\" : \"play none play reverse\", // Conditional toggleActions\r\n            },\r\n          }\r\n        );\r\n\r\n        // for each panel get the class middle-left-rotated-img and add a fade from left\r\n        const middleLeftRotatedImg = panel.querySelector(\".middle-left-rotated-img\");\r\n        gsap.fromTo(\r\n          middleLeftRotatedImg,\r\n          {\r\n            opacity: 0,\r\n            x: -100,\r\n          },\r\n          {\r\n            opacity: 1,\r\n            x: 0,\r\n            duration: 1,\r\n            ease: \"power2\",\r\n            scrollTrigger: {\r\n              trigger: panel,\r\n              start: \"top center\",\r\n              end: \"bottom\",\r\n              toggleActions: i === panels.length - 1 ? \"play none play reverse\" : \"play none play reverse\", // Conditional toggleActions\r\n\r\n            },\r\n          }\r\n        );\r\n\r\n        // for each panel get the class middle-right-rotated-img and add a fade from right\r\n        const middleRightRotatedImg = panel.querySelector(\".middle-right-rotated-img\");\r\n        gsap.fromTo(\r\n          middleRightRotatedImg,\r\n          {\r\n            opacity: 0,\r\n            x: 100,\r\n          },\r\n          {\r\n            opacity: 1,\r\n            x: 0,\r\n            duration: 1,\r\n            ease: \"power2\",\r\n            scrollTrigger: {\r\n              trigger: panel,\r\n              start: \"top center\",\r\n              end: \"bottom\",\r\n              toggleActions: i === panels.length - 1 ? \"play none play reverse\" : \"play none play reverse\", // Conditional toggleActions\r\n            },\r\n          }\r\n        );\r\n\r\n        // for each panel get the class middle-bottom-img and add a fade from bottom\r\n        const middleBottomImg = panel.querySelector(\".middle-bottom-img\");\r\n        gsap.fromTo(\r\n          middleBottomImg,\r\n          {\r\n            opacity: 0,\r\n            y: 100,\r\n          },\r\n          {\r\n            opacity: 1,\r\n            y: 0,\r\n            duration: 1,\r\n            ease: \"power2\",\r\n            scrollTrigger: {\r\n              trigger: panel,\r\n              start: \"top center\",\r\n              end: \"bottom\",\r\n              toggleActions: i === panels.length - 1 ? \"play none play reverse\" : \"play none play reverse\", // Conditional toggleActions\r\n\r\n            },\r\n          }\r\n        );\r\n    }, slider);\r\n  };\r\n\r\n  // first panel refs\r\n  useEffect(() => {\r\n   // for all panels, select the classes with id=\"name\" and add a fade in\r\n\r\n    initializeAnimations();\r\n\r\n    const handleResize = () => {\r\n      initializeAnimations();\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    window.onbeforeunload = function () {\r\n      window.scrollTo(0, 0);\r\n    }\r\n    window.addEventListener('load', function() {\r\n      ScrollTrigger.refresh();\r\n    });\r\n\r\n  return () => {\r\n    document.querySelectorAll('.apanel').forEach(panel => panel.remove());\r\n    window.removeEventListener('resize', handleResize);\r\n    ScrollTrigger.getAll().forEach(trigger => trigger.kill());\r\n    window.scrollTo(0, 0);\r\n  };\r\n}, []);\r\n\r\n  return (\r\n    <div>\r\n      \r\n      \r\n      <section id=\"x\" class=\"apanel\">\r\n        <img className=\"middle-top-img\" src=\"uva_banner.png\" />\r\n        <img className=\"middle-left-rotated-img\" src=\"uva_cav.png\" />\r\n        <img className=\"middle-right-rotated-img\" src=\"uva_cs.jpg\" />\r\n        <img className=\"middle-bottom-img\" src=\"desk.png\" />\r\n        <div className=\"overlay-text-down\">Scroll v</div>\r\n        <table className=\"center\">\r\n          <td>\r\n          <div style={{marginRight:\"10px\", color:\"grey\"}}>i am a: </div>\r\n          </td>\r\n          <td style={{border: \"3px solid black\"}}>\r\n          <div id=\"name\" style={{marginLeft:\"10px\",marginRight:\"10px\"}}>Student</div>\r\n          </td>\r\n        </table>\r\n        <div className=\"under-center\">\r\n          <h2 style={{textAlign:\"center\"}}>Relevant Information:</h2>\r\n          <ul style={{marginTop: \"-25px\"}}>\r\n            <li>CS & GDS Majors</li>\r\n            <li>Data Science Minor</li>\r\n            <li>2 More Years.....</li>\r\n          </ul>\r\n        </div>\r\n      </section>\r\n\r\n      <section id=\"x\" class=\"apanel\">\r\n        <a href=\"https://www.yelp.com/collections/user?userid=xft100yz_n8JnvN8MUxSlw\" target=\"_blank\">\r\n            <img className=\"middle-top-img\" style={{height: \"20%\", width: \"25%\", top: \"5%\", left:\"39%\"}} src=\"yelp_t.png\" />\r\n        </a>\r\n        <img className=\"middle-left-rotated-img\" style={{transform: \"rotate(0deg)\", width: \"20%\", height: \"35%\", left:\"12.5%\"}} src=\"rice.png\" />\r\n        <img className=\"middle-right-rotated-img\" style={{transform: \"rotate(30deg)\", width: \"25%\", height: \"35%\", left:\"65%\"}} src=\"mango4.png\" />\r\n        <img className=\"middle-bottom-img\" src=\"eating.png\" />\r\n        <table className=\"center\">\r\n          <td>\r\n          <div style={{marginRight:\"10px\", color:\"grey\"}}>i am a: </div>\r\n          </td>\r\n          <td style={{border: \"3px solid black\"}}>\r\n          <div id=\"name\" style={{marginLeft:\"10px\",marginRight:\"10px\"}}>Foodie</div>\r\n          </td>\r\n        </table>\r\n        <div className=\"under-center\">\r\n          <h2 style={{textAlign:\"center\"}}>Recent Places Went:</h2>\r\n          <ul style={{marginTop: \"-25px\"}}>\r\n            <li>Elephant Thai</li>\r\n            <li>Cantina Bakery</li>\r\n            <li>Vietnam 1</li>\r\n          </ul>\r\n        </div>\r\n      </section>\r\n\r\n      <section id=\"x\" class=\"apanel\">\r\n      <img className=\"middle-top-img\" style={{height: \"20%\", width: \"50%\", top: \"5%\", left:\"25%\"}} src=\"pokeballs.png\" />\r\n      <img className=\"middle-left-rotated-img\" style={{transform: \"rotate(0deg)\", left:\"17%\"}} src=\"kirby.png\" />\r\n      <img className=\"middle-right-rotated-img\" style={{transform: \"scaleX(-1)\", left:\"67.5%\"}} src=\"sonic.png\" />\r\n      <img className=\"middle-bottom-img\" src=\"gaming.png\" />\r\n\r\n        <table className=\"center\">\r\n          <td>\r\n          <div style={{marginRight:\"10px\", color:\"grey\"}}>i am a: </div>\r\n          </td>\r\n          <td style={{border: \"3px solid black\"}}>\r\n          <div id=\"name\"  style={{marginLeft:\"10px\",marginRight:\"10px\"}}>Gamer</div>\r\n          </td>\r\n        </table>\r\n        <div className=\"under-center\">\r\n          <h2 style={{textAlign:\"center\"}}>Favorite Games ATM:</h2>\r\n          <ul style={{marginTop: \"-25px\"}}>\r\n            <li>Guilty Gear -Strive-</li>\r\n            <li>Golf with Your Friends</li>\r\n            <li>Pokemon Emerald</li>\r\n          </ul>\r\n        </div>\r\n      </section>\r\n\r\n      <section class=\"apanel\">\r\n      <div className=\"middle-top-img\" \r\n      style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", position: \"absolute\", top: \"11%\", left: \"35%\", textAlign: \"center\", fontSize: \"30px\", fontWeight: \"600\", whiteSpace: \"nowrap\"}}>\r\n  \"Books are a uniquely portable magic.\"\r\n      </div>      \r\n      <img className=\"middle-left-rotated-img\" style={{height: \"40%\", transform: \"rotate(0deg)\", left:\"17%\"}} src=\"bookie.jpg\" />\r\n      <img className=\"middle-right-rotated-img\" style={{height: \"40%\", left:\"68%\"}} src=\"luffy.png\" />\r\n      <img className=\"middle-bottom-img\" src=\"reading.png\" />\r\n\r\n        <table className=\"center\">\r\n          <td>\r\n          <div style={{marginRight:\"10px\", color:\"grey\"}}>i am a: </div>\r\n          </td>\r\n          <td style={{border: \"3px solid black\"}}>\r\n          <div id=\"name\" style={{marginLeft:\"10px\",marginRight:\"10px\"}}>Reader</div>\r\n          </td>\r\n        </table>\r\n        <div className=\"under-center\">\r\n          <h2 style={{textAlign:\"center\"}}>Planned Reads:</h2>\r\n          <ul style={{marginTop: \"-25px\"}}>\r\n            <li>The Pragmatic Programmer</li>\r\n            <li>The Idea of Phenomenology</li>\r\n            <li>Homo Sacer</li>\r\n          </ul>\r\n        </div>\r\n      </section>\r\n\r\n      <section class=\"apanel\">\r\n      <img className=\"middle-top-img\" style={{height: \"10%\", width: \"40%\", top: \"12.5%\", left:\"32.5%\"}} src=\"pen.png\" />\r\n      <img className=\"middle-left-rotated-img\" style={{transform: \"rotate(0deg)\", left:\"17%\"}} src=\"notepad.png\" />\r\n      <img className=\"middle-right-rotated-img\" style={{transform: \"rotate(15deg) scaleX(-1)\", left:\"70%\", top:\"25%\"}} src=\"thought.png\" />\r\n\r\n      <img className=\"middle-bottom-img\" src=\"blogging.png\" />\r\n        <table className=\"center\">\r\n          <td>\r\n          <div style={{marginRight:\"10px\", color:\"grey\"}}>i am a: </div>\r\n          </td>\r\n          <td style={{border: \"3px solid black\"}}>\r\n          <div id=\"name\" style={{marginLeft:\"10px\",marginRight:\"10px\"}}>Blogger</div>\r\n          </td>\r\n        </table>\r\n        <div className=\"under-center\">\r\n          <h2 style={{textAlign:\"center\"}}>Latest Ponderings:</h2>\r\n          <ul style={{marginTop: \"-25px\"}}>\r\n            <li>Environmental Dissonance</li>\r\n            <li>Layer 8 DDoS and ChatGPT</li>\r\n            <li>Learning Forwards and Backwards</li>\r\n          </ul>\r\n        </div>\r\n      </section>\r\n\r\n      <section id=\"x\" class=\"apanel\">\r\n      <img className=\"middle-top-img\" style={{height: \"10%\", top: \"10%\"}} src=\"forkbomb.png\" />\r\n      <img className=\"middle-left-rotated-img\" style={{transform: \"rotate(0deg)\", left:\"17.5%\"}} src=\"arch.png\" />\r\n      <img className=\"middle-right-rotated-img\" style={{transform: \"scaleX(-1)\", left:\"67.5%\"}} src=\"gnu.png\" />\r\n      <img className=\"middle-bottom-img\" src=\"developer.png\" />\r\n\r\n        <table className=\"center\">\r\n          <td>\r\n          <div style={{marginRight:\"10px\", color:\"grey\"}}>i am a: </div>\r\n          </td>\r\n          <td style={{border: \"3px solid black\"}}>\r\n          <div id=\"name\" style={{marginLeft:\"10px\",marginRight:\"10px\"}}>Developer</div>\r\n          </td>\r\n        </table>\r\n        <div className=\"under-center\">\r\n          <h2 style={{textAlign:\"center\"}}>Current Interests:</h2>\r\n          <ul style={{marginTop: \"-25px\"}}>\r\n            <li>DevOps Theory</li>\r\n            <li>Computer Graphics</li>\r\n            <li>Operating Systems</li>\r\n          </ul>\r\n        </div>\r\n        \r\n      </section>\r\n\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Navbar from './navbar/Navbar';\r\nimport Background from './background/Background';\r\nimport LoadingBar from 'react-top-loading-bar';\r\nimport { useRef } from 'react';\r\nimport './About.css';\r\n\r\nfunction About() {\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const loadingBarRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        loadingBarRef.current.continuousStart();\r\n\r\n        const handleLoad = () => {\r\n            console.log('Loading...');\r\n            loadingBarRef.current.complete();\r\n            setTimeout(() => {\r\n                setIsLoaded(true);\r\n            }, 250); \r\n        };\r\n\r\n        setTimeout(() => {\r\n            handleLoad();\r\n        }, 500);\r\n\r\n        return () => {\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"About\">\r\n            {isLoaded ? (\r\n                <>\r\n                    <Navbar />\r\n                    <Background />\r\n                </>\r\n            ) : (\r\n                <LoadingBar color=\"#1f1f1f\" ref={loadingBarRef}/>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport gsap from 'gsap';\r\n\r\nconst Navbar = () => {\r\n  useEffect(() => {\r\n    const navbar = document.querySelector('.navbar');\r\n    const navbar_container = document.querySelector('.navbar-container');\r\n    let isFadedOut = false;\r\n    let interval;\r\n\r\n    const fadeOut = () => {\r\n      if (navbar) {\r\n        gsap.to(navbar, { opacity: 0, duration: .5 });\r\n        isFadedOut = true;\r\n      }\r\n    };\r\n\r\n    const fadeIn = () => {\r\n      if (navbar) {\r\n        gsap.fromTo(navbar, { opacity: 0 }, { opacity: 1, duration: .5 });\r\n        isFadedOut = false;\r\n        clearInterval(interval);\r\n        interval = setInterval(fadeOut, 4000);\r\n      }\r\n    };\r\n\r\n    // Call fadeIn on component mount\r\n    fadeIn();\r\n\r\n    interval = setInterval(fadeOut, 4000);\r\n\r\n    if (navbar) {\r\n      navbar.addEventListener('mouseover', fadeIn);\r\n    }\r\n\r\n    \r\n    const links = document.querySelectorAll('.navbar-links div');\r\n\r\n    const addBrackets = (event) => {\r\n      const div = event.target;\r\n      const textNode = div.firstChild;\r\n      if (textNode && textNode.nodeType === Node.TEXT_NODE) {\r\n        if (textNode.textContent.includes(\"Work\")) return;\r\n        textNode.textContent = `[${textNode.textContent}]`;\r\n        console.log(textNode.textContent);\r\n        div.style.color = 'grey';\r\n      }\r\n    };\r\n    \r\n    const removeBrackets = (event) => {\r\n      const div = event.target;\r\n      const textNode = div.firstChild;\r\n      if (textNode && textNode.nodeType === Node.TEXT_NODE) {\r\n        if (textNode.textContent.includes(\"Work\")) return;\r\n        textNode.textContent = textNode.textContent.replace(/^\\[|\\]$/g, '');\r\n        console.log(textNode.textContent);\r\n        div.style.color = 'black';\r\n      }\r\n    };\r\n\r\n    if (navbar) {\r\n      links.forEach(link => {\r\n        link.addEventListener('mouseover', addBrackets);\r\n        link.addEventListener('mouseout', removeBrackets);\r\n      });\r\n    }\r\n\r\n    const handleResize = () => {\r\n      // Clean up any previous settings\r\n      clearInterval(interval);\r\n    \r\n      if (navbar) {\r\n        gsap.set(navbar, { opacity: 1});\r\n        isFadedOut = false;\r\n        fadeIn();  // Reinitialize the fadeIn behavior\r\n      }\r\n    };\r\n    \r\n    window.addEventListener('resize', handleResize);\r\n    \r\n    return () => {\r\n      clearInterval(interval); // Cleanup the interval on component unmount\r\n      if (navbar) {\r\n        navbar.removeEventListener('mouseover', fadeIn);\r\n        links.forEach(link => {\r\n          link.removeEventListener('mouseover', addBrackets);\r\n          link.removeEventListener('mouseout', removeBrackets);\r\n        });\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"navbar-container\">\r\n        <nav className=\"navbar\" style={{opacity:'0'}}>\r\n            <div className=\"navbar-links\">\r\n                <div><Link to=\"/work\">[Work]</Link></div>\r\n                <div><Link to=\"/projects\">Projects</Link></div>\r\n            </div>\r\n            <div className=\"navbar-logo\">\r\n                <Link to=\"/\">You Gao</Link>\r\n            </div>\r\n            <div className=\"navbar-links\">\r\n                <div><Link to=\"/about\">About Me</Link></div>\r\n                <div><a href=\"https://blog.yougao.dev/\" target=\"_blank\">To Blog</a></div>\r\n            </div>\r\n        </nav>\r\n    </div>\r\n);\r\n};\r\n\r\nexport default Navbar;","import React, { useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\nimport { FontLoader } from 'three/examples/jsm/loaders/FontLoader';\r\nimport { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport { CameraHelper } from 'three';\r\n\r\nimport gsap from 'gsap';\r\n\r\nconst Background = () => {\r\n    const canvasRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        let scene, camera, renderer, model, controls;\r\n        let isAnimatingWork = true;\r\n        function init() {\r\n            // ------------------------------------------------ Setup ------------------------------------------------\r\n            // Scene, Camera + Controls, Renderer\r\n            scene = new THREE.Scene();\r\n            scene.background = new THREE.Color(0xffffff);\r\n\r\n            camera = new THREE.PerspectiveCamera(1000, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n            camera.position.set(0, 25, 100); // Zoom in on the board\r\n\r\n            renderer = new THREE.WebGLRenderer({ canvas: canvasRef.current });\r\n            renderer.setSize(window.innerWidth, window.innerHeight);\r\n\r\n            controls = new OrbitControls(camera, renderer.domElement);\r\n            controls.target.set(1, 25, 100);\r\n            controls.enableRotate = true;\r\n            controls.enablePan = false;\r\n            controls.enableZoom = false;\r\n\r\n            const fontLoader = new FontLoader();\r\n            const textureLoader = new THREE.TextureLoader();\r\n            const loader = new GLTFLoader();\r\n\r\n            // Light\r\n            const ambientLight = new THREE.AmbientLight(0xffffff, 0.1);\r\n            scene.add(ambientLight);\r\n\r\n            // ------------------------------------------------ House ------------------------------------------------\r\n\r\n\r\n            // Floor\r\n            const woodTexture = textureLoader.load('wood.jpg');\r\n            woodTexture.wrapS = THREE.RepeatWrapping;\r\n            woodTexture.wrapT = THREE.RepeatWrapping;\r\n            woodTexture.repeat.set(1, 15); // Adjust the repeat values as needed\r\n            const planeGeometry = new THREE.PlaneGeometry(200, 1000);\r\n            const planeMaterial = new THREE.MeshBasicMaterial({ map: woodTexture, side: THREE.DoubleSide});\r\n            const plane = new THREE.Mesh(planeGeometry, planeMaterial);\r\n            plane.position.set(0, 65, -300);\r\n            plane.rotation.x = -Math.PI / 2;\r\n            scene.add(plane);\r\n\r\n            // Right Wall\r\n            const wallTexture = textureLoader.load('office.jpg');\r\n            wallTexture.wrapS = THREE.RepeatWrapping;\r\n            wallTexture.wrapT = THREE.RepeatWrapping;\r\n            wallTexture.repeat.set(1, 10); // Adjust the repeat values as needed\r\n            const leftWallGeometry = new THREE.PlaneGeometry(1000, 120);\r\n            const leftWallMaterial = new THREE.MeshBasicMaterial({ map: wallTexture, side: THREE.DoubleSide });\r\n            const leftWall = new THREE.Mesh(leftWallGeometry, leftWallMaterial);\r\n            leftWall.position.set(-100, 10, -300);\r\n            leftWall.rotation.y = Math.PI / 2;\r\n            scene.add(leftWall);\r\n\r\n            // Left Wall\r\n            const rightWallGeometry = new THREE.PlaneGeometry(1000, 120);\r\n            const rightWallMaterial = new THREE.MeshBasicMaterial({ map: wallTexture, side: THREE.DoubleSide });\r\n            const rightWall = new THREE.Mesh(rightWallGeometry, rightWallMaterial);\r\n            rightWall.position.set(100, 10, -300);\r\n            rightWall.rotation.y = Math.PI / 2;\r\n            scene.add(rightWall);\r\n\r\n            // Back Wall\r\n            const backWallGeometry = new THREE.PlaneGeometry(200, 120);\r\n            const backWallMaterial = new THREE.MeshBasicMaterial({ map: wallTexture, side: THREE.DoubleSide });\r\n            const backWall = new THREE.Mesh(backWallGeometry, backWallMaterial);\r\n            backWall.position.set(0, 10, 200);\r\n            backWall.rotation.y = Math.PI;\r\n            scene.add(backWall);\r\n\r\n\r\n            // Ceiling\r\n            const ceilingGeometry = new THREE.PlaneGeometry(200, 1200);\r\n            const ceilingMaterial = new THREE.MeshBasicMaterial({ color: 0xFA9C21, side: THREE.DoubleSide });\r\n            const ceiling = new THREE.Mesh(ceilingGeometry, ceilingMaterial);\r\n            ceiling.position.set(0, -50, -300);\r\n            ceiling.rotation.x = Math.PI / 2;\r\n            scene.add(ceiling);\r\n\r\n            // ------------------------------------------------ Rooms ------------------------------------------------\r\n\r\n            function createWalls(numWalls) {\r\n                for (let i = 0; i < numWalls; i++) {\r\n                    // const doorwallTexture = textureLoader.load('wall.jpg');\r\n                    // doorwallTexture.wrapS = THREE.RepeatWrapping;\r\n                    // doorwallTexture.wrapT = THREE.RepeatWrapping;\r\n                    // doorwallTexture.repeat.set(1, 10); // Adjust the repeat values as needed\r\n\r\n                    // Left Door Wall\r\n                    const leftDoorWallGeometry = new THREE.PlaneGeometry(70, 85);\r\n                    const leftDoorWallMaterial = new THREE.MeshBasicMaterial({ color: 0xADD8E6, side: THREE.DoubleSide });\r\n                    const leftDoorWall = new THREE.Mesh(leftDoorWallGeometry, leftDoorWallMaterial);\r\n                    leftDoorWall.position.set(55, 30, 0 + i * -200);\r\n                    leftDoorWall.rotation.z = Math.PI / 2;\r\n                    scene.add(leftDoorWall);\r\n            \r\n                    // Right Door Wall\r\n                    const rightDoorWallGeometry = new THREE.PlaneGeometry(70, 85);\r\n                    const rightDoorWallMaterial = new THREE.MeshBasicMaterial({ color: 0xADD8E6, side: THREE.DoubleSide });\r\n                    const rightDoorWall = new THREE.Mesh(rightDoorWallGeometry, rightDoorWallMaterial);\r\n                    rightDoorWall.position.set(-55, 30, 0 + i * -200);\r\n                    rightDoorWall.rotation.z = Math.PI / 2;\r\n                    scene.add(rightDoorWall);\r\n                    \r\n                    // Middle Wall\r\n                    const middleWallGeometry = new THREE.PlaneGeometry(47, 195);\r\n                    const middleWallMaterial = new THREE.MeshBasicMaterial({ color: 0xADD8E6, side: THREE.DoubleSide });\r\n                    const middleWall = new THREE.Mesh(middleWallGeometry, middleWallMaterial);\r\n                    middleWall.position.set(0, -25, 0 + i * -200);\r\n                    middleWall.rotation.z = Math.PI / 2;\r\n                    scene.add(middleWall);\r\n\r\n\r\n                }\r\n            }\r\n            \r\n            function createDoors(numDoors) {\r\n                for (let i = 0; i < numDoors; i++) {\r\n                    // Load Model\r\n                    const modelPath_e = 'door.glb'; // Adjust this path if necessary\r\n                    console.log(`Loading model from path: ${modelPath_e}`);\r\n                    loader.load(modelPath_e, (gltf) => {\r\n                        model = gltf.scene;\r\n                        model.scale.set(30, 30, 30); // Scale the model by a factor of 30\r\n                        model.position.set(0, 0, 0 + i * -200); // Set the position of the model\r\n                        scene.add(model);\r\n                    });\r\n                }\r\n            }\r\n\r\n            createWalls(4);\r\n            createDoors(4);\r\n\r\n            // --- Starting Room --- \r\n            const posters = [];\r\n\r\n            // const room1poster = new THREE.PlaneGeometry(50, 50);\r\n            // const room1Material = new THREE.MeshBasicMaterial({ color: 0x000000 });\r\n            // const room1 = new THREE.Mesh(room1poster, room1Material);\r\n            // room1.position.set(-55, 0, 5);\r\n            // const room1_camera_position = { x: -55, y: 0, z: 50 }\r\n            // const room1_controls_target = { x: -55, y: 0, z: 5 }\r\n            // scene.add(room1);\r\n            // posters.push({ mesh: room1, target: room1_camera_position, controls: room1_controls_target });\r\n\r\n\r\n            const uvaPosterTexture = textureLoader.load('uva_poster.png');\r\n            const room1poster = new THREE.PlaneGeometry(50, 50);\r\n            const room1Material = new THREE.MeshBasicMaterial({ map: uvaPosterTexture });\r\n            const room1 = new THREE.Mesh(room1poster, room1Material);\r\n            room1.position.set(-55, 0, 5);\r\n            room1.rotation.x = Math.PI;\r\n            room1.rotation.y = Math.PI;\r\n\r\n            const passawayTexture = textureLoader.load('passaway.jpg');\r\n            const room2poster = new THREE.PlaneGeometry(50, 50);\r\n            const room2Material = new THREE.MeshBasicMaterial({ map: passawayTexture });\r\n            const room2 = new THREE.Mesh(room2poster, room2Material);\r\n            room2.position.set(55, 0, 5);\r\n            room2.rotation.x = Math.PI;\r\n            room2.rotation.y = Math.PI;\r\n\r\n\r\n            scene.add(room1);\r\n            scene.add(room2);\r\n            // Add Text\r\n            fontLoader.load('https://threejs.org/examples/fonts/helvetiker_regular.typeface.json', (font) => {\r\n                // Right Wall\r\n                const textGeometry = new TextGeometry('Welcome to my Exhibit!', {\r\n                    font: font,\r\n                    size: 10,\r\n                    height: 1,\r\n                    curveSegments: 12,\r\n                    bevelEnabled: false\r\n                });\r\n                const textMaterial = new THREE.MeshBasicMaterial({ color: 0xFA9C21 });\r\n                const text = new THREE.Mesh(textGeometry, textMaterial);\r\n                text.position.set(100,-30,175);\r\n                text.rotation.x = Math.PI;\r\n                text.rotation.y = Math.PI / -2;\r\n                scene.add(text);\r\n\r\n                const text2Geometry = new TextGeometry('\"Career as Rooms\"', {\r\n                    font: font,\r\n                    size: 9,\r\n                    height: 1,\r\n                    curveSegments: 12,\r\n                    bevelEnabled: false\r\n                });\r\n                const text2Material = new THREE.MeshBasicMaterial({ color: 0xADD8E6 });\r\n                const text2 = new THREE.Mesh(text2Geometry, text2Material);\r\n                text2.position.set(100,-15,150);\r\n                text2.rotation.x = Math.PI;\r\n                text2.rotation.y = Math.PI / -2;\r\n                scene.add(text2);\r\n\r\n                const disclaimerGeometry = new TextGeometry('(drag to look around)', {\r\n                    font: font,\r\n                    size: 9,\r\n                    height: 1,\r\n                    curveSegments: 12,\r\n                    bevelEnabled: false\r\n                });\r\n                const disclaimerMaterial = new THREE.MeshBasicMaterial({ color: 0x000000 });\r\n                const disclaimer = new THREE.Mesh(disclaimerGeometry, disclaimerMaterial);\r\n                disclaimer.position.set(100,40,160);\r\n                disclaimer.rotation.x = Math.PI;\r\n                disclaimer.rotation.y = Math.PI / -2;\r\n                scene.add(disclaimer);\r\n\r\n                // const acknowledgementsGeometry = new TextGeometry('many thanks to the inventor of water', {\r\n                //     font: font,\r\n                //     size: 7,\r\n                //     height: 1,\r\n                //     curveSegments: 12,\r\n                //     bevelEnabled: false\r\n                //\r\n                // const acknowledgementsMaterial = new THREE.MeshBasicMaterial({ color: 0x000000 });\r\n                // const acknowledgements = new THREE.Mesh(acknowledgementsGeometry, acknowledgementsMaterial);\r\n                // acknowledgements.position.set(100,5,180);\r\n                // acknowledgements.rotation.x = Math.PI;\r\n                // acknowledgements.rotation.y = Math.PI / -2;\r\n                // scene.add(acknowledgements);\r\n\r\n                // Visitors Guide\r\n                const text3Geometry = new TextGeometry(\"Visitor's Guide:\", {\r\n                    font: font,\r\n                    size: 10,\r\n                    height: 1,\r\n                    curveSegments: 12,\r\n                    bevelEnabled: false\r\n                });\r\n                const text3Material = new THREE.MeshBasicMaterial({ color: 0xFA9C21 });\r\n                const text3 = new THREE.Mesh(text3Geometry, text3Material);\r\n                text3.position.set(-90, -30, 200);\r\n                text3.rotation.x = -Math.PI;\r\n                scene.add(text3);\r\n\r\n                const text4Geometry = new TextGeometry('tap arrow keys to move', {\r\n                    font: font,\r\n                    size: 8,\r\n                    height: 1,\r\n                    curveSegments: 12,\r\n                    bevelEnabled: false\r\n                });\r\n                const text4Material = new THREE.MeshBasicMaterial({ color: 0xADD8E6 });\r\n                const text4 = new THREE.Mesh(text4Geometry, text4Material);\r\n                text4.position.set(-80, -15, 200);\r\n                text4.rotation.x = -Math.PI;\r\n                scene.add(text4);\r\n\r\n                const text5Geometry = new TextGeometry('or click the signs above doors', {\r\n                    font: font,\r\n                    size: 8,\r\n                    height: 1,\r\n                    curveSegments: 12,\r\n                    bevelEnabled: false\r\n                });\r\n                const text5Material = new THREE.MeshBasicMaterial({ color: 0xADD8E6 });\r\n                const text5 = new THREE.Mesh(text5Geometry, text5Material);\r\n                text5.position.set(-80, -5, 200);\r\n                text5.rotation.x = -Math.PI;\r\n                scene.add(text5);\r\n\r\n                const text6Geometry = new TextGeometry('< > to move towards posters', {\r\n                    font: font,\r\n                    size: 8,\r\n                    height: 1,\r\n                    curveSegments: 12,\r\n                    bevelEnabled: false\r\n                });\r\n                const text6Material = new THREE.MeshBasicMaterial({ color: 0xADD8E6 });\r\n                const text6 = new THREE.Mesh(text6Geometry, text6Material);\r\n                text6.position.set(-80, 10, 200);\r\n                text6.rotation.x = -Math.PI;\r\n                scene.add(text6);\r\n\r\n                const text7Geometry = new TextGeometry('please stay within bounds', {\r\n                    font: font,\r\n                    size: 8,\r\n                    height: 1,\r\n                    curveSegments: 12,\r\n                    bevelEnabled: false\r\n                });\r\n                const text7Material = new THREE.MeshBasicMaterial({ color: 0xADD8E6 });\r\n                const text7 = new THREE.Mesh(text7Geometry, text7Material);\r\n                text7.position.set(-80, 30, 200);\r\n                text7.rotation.x = -Math.PI;\r\n                scene.add(text7);\r\n\r\n                const text8Geometry = new TextGeometry('enjoy your visit!', {\r\n                    font: font,\r\n                    size: 8,\r\n                    height: 1,\r\n                    curveSegments: 12,\r\n                    bevelEnabled: false\r\n                });\r\n                const text8Material = new THREE.MeshBasicMaterial({ color: 0xADD8E6 });\r\n                const text8 = new THREE.Mesh(text8Geometry, text8Material);\r\n                text8.position.set(-80, 50, 200);\r\n                text8.rotation.x = -Math.PI;\r\n                scene.add(text8);\r\n                \r\n                const OutOfBounds  = new THREE.MeshBasicMaterial({ color: 0x000000 });\r\n                const oobGeometry = new TextGeometry('There is nothing out here', {\r\n                    font: font,\r\n                    size: 13,\r\n                    height: 1,\r\n                    curveSegments: 12,\r\n                    bevelEnabled: false\r\n                });\r\n                const oob = new THREE.Mesh(oobGeometry, OutOfBounds);\r\n                oob.position.set(-120, 0, 350);\r\n                oob.rotation.x = -Math.PI;\r\n                scene.add(oob);\r\n\r\n                // Left Wall\r\n                const uvaGeometry = new TextGeometry('University of Virginia', {\r\n                    font: font,\r\n                    size: 10,\r\n                    height: 1,\r\n                    curveSegments: 12,\r\n                    bevelEnabled: false\r\n                });\r\n                const uvaMaterial = new THREE.MeshBasicMaterial({ color: 0x000000 });\r\n                const uva = new THREE.Mesh(uvaGeometry, uvaMaterial);\r\n                uva.position.set(-100, -30, 40);\r\n                uva.rotation.x = Math.PI;\r\n                uva.rotation.y = Math.PI / 2;\r\n                scene.add(uva);\r\n\r\n                const yearGeometry = new TextGeometry('2022-2026', {\r\n                    font: font,\r\n                    size: 10,\r\n                    height: 1,\r\n                    curveSegments: 12,\r\n                    bevelEnabled: false\r\n                });\r\n                const yearMaterial = new THREE.MeshBasicMaterial({ color: 0x000000 });\r\n                const year = new THREE.Mesh(yearGeometry, yearMaterial);\r\n                year.position.set(-100, -15, 70);\r\n                year.rotation.x = Math.PI;\r\n                year.rotation.y = Math.PI / 2;\r\n                scene.add(year);\r\n                \r\n                // Desk Placeholder\r\n                const deskGeometry = new THREE.BoxGeometry(150, 25, 25);\r\n                const deskMaterial = new THREE.MeshBasicMaterial({ color: 0x8B4513 });\r\n                const desk = new THREE.Mesh(deskGeometry, deskMaterial);\r\n                desk.position.set(-80, 50, 100); // Adjust the position as needed\r\n                desk.rotation.y = Math.PI / 2;\r\n                scene.add(desk);\r\n\r\n            });\r\n            // --- Room 1 ---\r\n\r\n            // Text\r\n            fontLoader.load('https://threejs.org/examples/fonts/helvetiker_regular.typeface.json', (font) => {\r\n            const textGeometry = new TextGeometry('Tessera Therapeutics', {\r\n                font: font,\r\n                size: 10,\r\n                height: 1,\r\n                curveSegments: 12,\r\n                bevelEnabled: false\r\n            });\r\n            const textMaterial = new THREE.MeshBasicMaterial({ color: 0x000000 });\r\n            const text = new THREE.Mesh(textGeometry, textMaterial);\r\n            text.position.set(-100, -30, -155);\r\n            text.rotation.x = Math.PI;\r\n            text.rotation.y = Math.PI / 2;\r\n            scene.add(text);\r\n\r\n            const textGeometry2 = new TextGeometry('Biomanufacturing Intern', {\r\n                font: font,\r\n                size: 10,\r\n                height: 1,\r\n                curveSegments: 12,\r\n                bevelEnabled: false\r\n            });\r\n            const textMaterial2 = new THREE.MeshBasicMaterial({ color: 0x000000 });\r\n            const text2 = new THREE.Mesh(textGeometry2, textMaterial2);\r\n            text2.position.set(-100, -15, -155);\r\n            text2.rotation.x = Math.PI;\r\n            text2.rotation.y = Math.PI / 2;\r\n            scene.add(text2);\r\n\r\n            \r\n            // Year\r\n            const year = new TextGeometry('2023', {\r\n                font: font,\r\n                size: 13,\r\n                height: 1,\r\n                curveSegments: 12,\r\n                bevelEnabled: false\r\n            });\r\n            const yearMaterial = new THREE.MeshBasicMaterial({ color: 0x000000 });\r\n            const yearText = new THREE.Mesh(year, yearMaterial);\r\n            yearText.position.set(-25, 60, -120);\r\n            yearText.rotation.x = Math.PI / 2;\r\n            yearText.rotation.z = Math.PI / 2;\r\n            scene.add(yearText);\r\n            });\r\n\r\n            // Logo\r\n            const texturePath = 'tessera.png'; // Adjust this path if necessary\r\n            textureLoader.load(texturePath, (texture) => {\r\n                const boxGeometry = new THREE.BoxGeometry(5, 25, 25);\r\n                const boxMaterial = new THREE.MeshBasicMaterial({ map: texture });\r\n                const box = new THREE.Mesh(boxGeometry, boxMaterial);\r\n                box.position.set(-100, -27, -175); // Adjust the position as needed\r\n                scene.add(box);\r\n            });\r\n\r\n            // Desk Placeholder\r\n            const deskGeometry = new THREE.BoxGeometry(150, 25, 25);\r\n            const deskMaterial = new THREE.MeshBasicMaterial({ color: 0x8B4513 });\r\n            const desk = new THREE.Mesh(deskGeometry, deskMaterial);\r\n            desk.position.set(-80, 50, -100); // Adjust the position as needed\r\n            desk.rotation.y = Math.PI / 2;\r\n            scene.add(desk);\r\n\r\n            // Back Image\r\n            const rawmathTexture = textureLoader.load('rawmath.png');\r\n            const backGeometry = new THREE.PlaneGeometry(200, 120);\r\n            const backMaterial = new THREE.MeshBasicMaterial({ map: rawmathTexture, side: THREE.DoubleSide });\r\n            const back = new THREE.Mesh(backGeometry, backMaterial);\r\n            back.position.set(98, 5, -100);\r\n            back.rotation.x = Math.PI;\r\n            back.rotation.y = -Math.PI / 2;\r\n            scene.add(back);\r\n\r\n            // Right Wall Image\r\n            const paidTexture = textureLoader.load('paid.png');\r\n            const rightGeometry = new THREE.PlaneGeometry(50, 50);\r\n            const rightMaterial = new THREE.MeshBasicMaterial({ map: paidTexture, side: THREE.DoubleSide });\r\n            const right = new THREE.Mesh(rightGeometry, rightMaterial);\r\n            right.position.set(-55, 5, -5);\r\n            right.rotation.x = Math.PI;\r\n            scene.add(right);\r\n\r\n            const simpsonsTexture = textureLoader.load('simpson.jpg');\r\n            const simpsonsGeometry = new THREE.PlaneGeometry(50, 50);\r\n            const simpsonsMaterial = new THREE.MeshBasicMaterial({ map: simpsonsTexture, side: THREE.DoubleSide });\r\n            const simpsons = new THREE.Mesh(simpsonsGeometry, simpsonsMaterial);\r\n            simpsons.position.set(55, 5, -5);\r\n            simpsons.rotation.x = Math.PI;\r\n            scene.add(simpsons);\r\n\r\n\r\n            // Left Wall Image\r\n            const leftTexture = textureLoader.load('pfd.jpg');\r\n            const leftGeometry = new THREE.PlaneGeometry(50, 50);\r\n            const leftMaterial = new THREE.MeshBasicMaterial({ map: leftTexture, side: THREE.DoubleSide });\r\n            const left = new THREE.Mesh(leftGeometry, leftMaterial);\r\n            left.position.set(-55, 5, -195);\r\n            left.rotation.x = Math.PI;\r\n            left.rotation.y = Math.PI;\r\n            scene.add(left);\r\n\r\n            const scadaTexture = textureLoader.load('scada.png');\r\n            const scadaGeometry = new THREE.PlaneGeometry(50, 50);\r\n            const scadaMaterial = new THREE.MeshBasicMaterial({ map: scadaTexture, side: THREE.DoubleSide });\r\n            const scada = new THREE.Mesh(scadaGeometry, scadaMaterial);\r\n            scada.position.set(55, 5, -195);\r\n            scada.rotation.x = Math.PI;\r\n            scada.rotation.y = Math.PI;\r\n            scene.add(scada);\r\n\r\n\r\n\r\n            // --- Room 2 ---\r\n\r\n            // Text\r\n            fontLoader.load('https://threejs.org/examples/fonts/helvetiker_regular.typeface.json', (font) => {\r\n                const textGeometry = new TextGeometry('Fallahi-Sichani Lab', {\r\n                    font: font,\r\n                    size: 10,\r\n                    height: 1,\r\n                    curveSegments: 12,\r\n                    bevelEnabled: false\r\n                });\r\n                const textMaterial = new THREE.MeshBasicMaterial({ color: 0x000000 });\r\n                const text = new THREE.Mesh(textGeometry, textMaterial);\r\n                text.position.set(-100, -30, -355);\r\n                text.rotation.x = Math.PI;\r\n                text.rotation.y = Math.PI / 2;\r\n                scene.add(text);\r\n\r\n                const textGeometry2 = new TextGeometry('BME Research Assistant', {\r\n                    font: font,\r\n                    size: 10,\r\n                    height: 1,\r\n                    curveSegments: 12,\r\n                    bevelEnabled: false\r\n                });\r\n                const textMaterial2 = new THREE.MeshBasicMaterial({ color: 0x000000 });\r\n                const text2 = new THREE.Mesh(textGeometry2, textMaterial2);\r\n                text2.position.set(-100, -15, -355);\r\n                text2.rotation.x = Math.PI;\r\n                text2.rotation.y = Math.PI / 2;\r\n                scene.add(text2);\r\n\r\n                // Year\r\n                const year = new TextGeometry('2023', {\r\n                    font: font,\r\n                    size: 13,\r\n                    height: 1,\r\n                    curveSegments: 12,\r\n                    bevelEnabled: false\r\n                });\r\n                const yearMaterial = new THREE.MeshBasicMaterial({ color: 0x000000 });\r\n                const yearText = new THREE.Mesh(year, yearMaterial);\r\n                yearText.position.set(-25, 60, -320);\r\n                yearText.rotation.x = Math.PI / 2;\r\n                yearText.rotation.z = Math.PI / 2;\r\n                scene.add(yearText);\r\n\r\n            });\r\n\r\n            // Logo\r\n            const texturePath1 = 'uva_bme.jpg'; // Adjust this path if necessary\r\n            textureLoader.load(texturePath1, (texture) => {\r\n                const boxGeometry = new THREE.BoxGeometry(25, 25, 25);\r\n                const boxMaterial = new THREE.MeshBasicMaterial({ map: texture });\r\n                const box = new THREE.Mesh(boxGeometry, boxMaterial);\r\n                // flip the logo\r\n                box.rotation.z = Math.PI;\r\n                box.position.set(-110, -27, -375); // Adjust the position as needed\r\n                scene.add(box);\r\n            });\r\n\r\n            // Desk Placeholder\r\n            const deskGeometry1 = new THREE.BoxGeometry(150, 25, 25);\r\n            const deskMaterial1 = new THREE.MeshBasicMaterial({ color: 0x8B4513 });\r\n            const desk1 = new THREE.Mesh(deskGeometry1, deskMaterial1);\r\n            desk1.position.set(-80, 50, -300); // Adjust the position as needed\r\n            desk1.rotation.y = Math.PI / 2;\r\n            scene.add(desk1);\r\n\r\n            // Back Image\r\n            const posterTexture = textureLoader.load('poster.png');\r\n            const posterGeometry = new THREE.PlaneGeometry(200, 120);\r\n            const posterMaterial = new THREE.MeshBasicMaterial({ map: posterTexture, side: THREE.DoubleSide });\r\n            const poster = new THREE.Mesh(posterGeometry, posterMaterial);\r\n            poster.position.set(98, 5, -300);\r\n            poster.rotation.x = Math.PI;\r\n            poster.rotation.y = -Math.PI / 2;\r\n            scene.add(poster);\r\n\r\n            // Right Wall Image\r\n            const labTexture = textureLoader.load('lab.jpg');\r\n            const labGeometry = new THREE.PlaneGeometry(50, 50);\r\n            const labMaterial = new THREE.MeshBasicMaterial({ map: labTexture, side: THREE.DoubleSide });\r\n            const lab = new THREE.Mesh(labGeometry, labMaterial);\r\n            lab.position.set(-55, 5, -205);\r\n            lab.rotation.x = -Math.PI;\r\n            lab.rotation.y = 2*Math.PI;\r\n            scene.add(lab);\r\n\r\n            const lab2Texture = textureLoader.load('lorax.png');\r\n            const lab2Geometry = new THREE.PlaneGeometry(50, 50);\r\n            const lab2Material = new THREE.MeshBasicMaterial({ map: lab2Texture, side: THREE.DoubleSide });\r\n            const lab2 = new THREE.Mesh(lab2Geometry, lab2Material);\r\n            lab2.position.set(55, 5, -205);\r\n            lab2.rotation.x = -Math.PI;\r\n            lab2.rotation.y = 2*Math.PI;\r\n            scene.add(lab2);\r\n            \r\n            // Left Wall Image\r\n            const lab3Texture = textureLoader.load('datasci.jpg');\r\n            const lab3Geometry = new THREE.PlaneGeometry(50, 50);\r\n            const lab3Material = new THREE.MeshBasicMaterial({ map: lab3Texture, side: THREE.DoubleSide });\r\n            const lab3 = new THREE.Mesh(lab3Geometry, lab3Material);\r\n            lab3.position.set(-55, 5, -395);\r\n            lab3.rotation.x = -Math.PI;\r\n            lab3.rotation.y = Math.PI;\r\n            scene.add(lab3);\r\n\r\n            const lab4Texture = textureLoader.load('models.jpg');\r\n            const lab4Geometry = new THREE.PlaneGeometry(50, 50);\r\n            const lab4Material = new THREE.MeshBasicMaterial({ map: lab4Texture, side: THREE.DoubleSide });\r\n            const lab4 = new THREE.Mesh(lab4Geometry, lab4Material);\r\n            lab4.position.set(55, 5, -395);\r\n            lab4.rotation.x = -Math.PI;\r\n            lab4.rotation.y = Math.PI;\r\n            scene.add(lab4);\r\n\r\n\r\n\r\n            // --- Room 3 ---\r\n\r\n            // Text\r\n            fontLoader.load('https://threejs.org/examples/fonts/helvetiker_regular.typeface.json', (font) => {\r\n                const textGeometry = new TextGeometry('Kinsale Insurance', {\r\n                    font: font,\r\n                    size: 10,\r\n                    height: 1,\r\n                    curveSegments: 12,\r\n                    bevelEnabled: false\r\n                });\r\n                const textMaterial = new THREE.MeshBasicMaterial({ color: 0x000000 });\r\n                const text = new THREE.Mesh(textGeometry, textMaterial);\r\n                text.position.set(-100, -30, -555);\r\n                text.rotation.x = Math.PI;\r\n                text.rotation.y = Math.PI / 2;\r\n                scene.add(text);\r\n\r\n                const textGeometry2 = new TextGeometry('Summer DevOps Intern', {\r\n                    font: font,\r\n                    size: 10,\r\n                    height: 1,\r\n                    curveSegments: 12,\r\n                    bevelEnabled: false\r\n                });\r\n                const textMaterial2 = new THREE.MeshBasicMaterial({ color: 0x000000 });\r\n                const text2 = new THREE.Mesh(textGeometry2, textMaterial2);\r\n                text2.position.set(-100, -15, -555);\r\n                text2.rotation.x = Math.PI;\r\n                text2.rotation.y = Math.PI / 2;\r\n                scene.add(text2);\r\n\r\n                // Year\r\n                const year = new TextGeometry('2024', {\r\n                    font: font,\r\n                    size: 13,\r\n                    height: 1,\r\n                    curveSegments: 12,\r\n                    bevelEnabled: false\r\n                });\r\n                const yearMaterial = new THREE.MeshBasicMaterial({ color: 0x000000 });\r\n                const yearText = new THREE.Mesh(year, yearMaterial);\r\n                yearText.position.set(-25, 60, -520);\r\n                yearText.rotation.x = Math.PI / 2;\r\n                yearText.rotation.z = Math.PI / 2;\r\n                scene.add(yearText);\r\n\r\n                const OutOfBounds  = new THREE.MeshBasicMaterial({ color: 0x000000 });\r\n                const oobGeometry = new TextGeometry('What will the', {\r\n                    font: font,\r\n                    size: 13,\r\n                    height: 1,\r\n                    curveSegments: 12,\r\n                    bevelEnabled: false\r\n                });\r\n                const oob = new THREE.Mesh(oobGeometry, OutOfBounds);\r\n                oob.position.set(50, 0, -800);\r\n                // oob.rotation.x = -Math.PI;\r\n                oob.rotation.z = Math.PI;\r\n                scene.add(oob);\r\n\r\n                const OutOfBounds2  = new THREE.MeshBasicMaterial({ color: 0x000000 });\r\n                const oobGeometry2 = new TextGeometry('future hold?', {\r\n                    font: font,\r\n                    size: 13,\r\n                    height: 1,\r\n                    curveSegments: 12,\r\n                    bevelEnabled: false\r\n                });\r\n                const oob2 = new THREE.Mesh(oobGeometry2, OutOfBounds2);\r\n                oob2.position.set(50, 20, -800);\r\n                // oob2.rotation.x = -Math.PI;\r\n                oob2.rotation.z = Math.PI;\r\n                scene.add(oob2);\r\n\r\n                const OutOfBounds3  = new THREE.MeshBasicMaterial({ color: 0x000000 });\r\n                const oobGeometry3 = new TextGeometry('*cough* hire me', {\r\n                    font: font,\r\n                    size: 13,\r\n                    height: 1,\r\n                    curveSegments: 12,\r\n                    bevelEnabled: false\r\n                });\r\n                const oob3 = new THREE.Mesh(oobGeometry3, OutOfBounds3);\r\n                oob3.position.set(70, 50, -800);\r\n                // oob3.rotation.x = -Math.PI;\r\n                oob3.rotation.z = Math.PI;\r\n                scene.add(oob3);\r\n            });\r\n\r\n            // Logo\r\n            const texturePath3 = 'kinsale.png'; // Adjust this path if necessary\r\n            textureLoader.load(texturePath3, (texture) => {\r\n                const boxGeometry = new THREE.BoxGeometry(25, 25, 25);\r\n                const boxMaterial = new THREE.MeshBasicMaterial({ map: texture });\r\n                const box = new THREE.Mesh(boxGeometry, boxMaterial);\r\n                box.position.set(-110, -27, -575); // Adjust the position as needed\r\n                scene.add(box);\r\n            });\r\n\r\n            // Desk Placeholder\r\n            const deskGeometry2 = new THREE.BoxGeometry(150, 25, 25);\r\n            const deskMaterial2 = new THREE.MeshBasicMaterial({ color: 0x8B4513 });\r\n            const desk2 = new THREE.Mesh(deskGeometry2, deskMaterial2);\r\n            desk2.position.set(-80, 50, -500); // Adjust the position as needed\r\n            desk2.rotation.y = Math.PI / 2;\r\n            scene.add(desk2);\r\n\r\n            // Back Image\r\n            const backendTexture = textureLoader.load('backend.png');\r\n            const backendGeometry = new THREE.PlaneGeometry(200, 120);\r\n            const backendMaterial = new THREE.MeshBasicMaterial({ map: backendTexture, side: THREE.DoubleSide });\r\n            const backend = new THREE.Mesh(backendGeometry, backendMaterial);\r\n            backend.position.set(98, 10, -500);\r\n            backend.rotation.x = Math.PI;\r\n            backend.rotation.y = -Math.PI / 2;\r\n            scene.add(backend);\r\n\r\n            // Right Wall Image\r\n            const comicTexture = textureLoader.load('comicstrip.jpg');\r\n            const comicGeometry = new THREE.PlaneGeometry(50, 50);\r\n            const comicMaterial = new THREE.MeshBasicMaterial({ map: comicTexture, side: THREE.DoubleSide });\r\n            const comic = new THREE.Mesh(comicGeometry, comicMaterial);\r\n            comic.position.set(55, 5, -405);\r\n            comic.rotation.x = -Math.PI;\r\n            comic.rotation.y = 2*Math.PI;\r\n            scene.add(comic);\r\n\r\n            const dockerTexture = textureLoader.load('docker.png');\r\n            const dockerGeometry = new THREE.PlaneGeometry(50, 50);\r\n            const dockerMaterial = new THREE.MeshBasicMaterial({ map: dockerTexture, side: THREE.DoubleSide });\r\n            const docker = new THREE.Mesh(dockerGeometry, dockerMaterial);\r\n            docker.position.set(-55, 5, -405);\r\n            docker.rotation.x = -Math.PI;\r\n            scene.add(docker);\r\n\r\n            const comic2Texture = textureLoader.load('dev.jpg');\r\n            const comic2Geometry = new THREE.PlaneGeometry(50, 50);\r\n            const comic2Material = new THREE.MeshBasicMaterial({ map: comic2Texture, side: THREE.DoubleSide });\r\n            const comic2 = new THREE.Mesh(comic2Geometry, comic2Material);\r\n            comic2.position.set(55, 5, -595);\r\n            comic2.rotation.x = -Math.PI;\r\n            comic2.rotation.y = Math.PI;\r\n            scene.add(comic2);\r\n\r\n            const docker2Texture = textureLoader.load('cloud.jpg');\r\n            const docker2Geometry = new THREE.PlaneGeometry(50, 50);\r\n            const docker2Material = new THREE.MeshBasicMaterial({ map: docker2Texture, side: THREE.DoubleSide });\r\n            const docker2 = new THREE.Mesh(docker2Geometry, docker2Material);\r\n            docker2.position.set(-55, 5, -595);\r\n            docker2.rotation.x = -Math.PI;\r\n            docker2.rotation.y = Math.PI;\r\n            scene.add(docker2);\r\n\r\n\r\n\r\n\r\n            // ----- Room 4 -----\r\n\r\n\r\n            // --------------------------------------------------- Movement ---------------------------------------------------\r\n            // Array of circle data\r\n            const greenData = [\r\n                { color: 0xffff00, position: { x: 0, y: -20, z: 1 }, target: { x: 20, y: 25, z: -100, targetX: -10, targetY: 25, targetZ: -100 } },\r\n                { color: 0xff0000, position: { x: 0, y: -20, z: -199 }, target: { x: 20, y: 25, z: -300, targetX: -10, targetY: 25, targetZ: -300 } },\r\n                { color: 0x00ff00, position: { x: 0, y: -20, z: -399 }, target: { x: 20, y: 25, z: -500, targetX: -10, targetY: 25, targetZ: -500 } }\r\n            ];\r\n            const upArrowTexture = textureLoader.load('uparrow.png');\r\n            // Create planes and add to the scene\r\n            const g_arrows = [];\r\n            greenData.forEach(data => {\r\n                const squareGeometry = new THREE.PlaneGeometry(20, 20); // Ensure it's a square\r\n                const squareMaterial = new THREE.MeshBasicMaterial({ map: upArrowTexture, transparent: true });\r\n                const square = new THREE.Mesh(squareGeometry, squareMaterial);\r\n                square.position.set(data.position.x, data.position.y, data.position.z);\r\n                square.rotation.x = Math.PI;\r\n                square.rotation.y = Math.PI;\r\n                scene.add(square);\r\n                g_arrows.push({ mesh: square, target: data.target });\r\n            });\r\n\r\n            const redData = [\r\n                { color: 0xffff00, position: { x: 0, y: -20, z: -1 },  target: { x: 0, y: 25, z: 150, targetX: 0, targetY: 25, targetZ: 100 } },\r\n                { color: 0xff0000, position: { x: 0, y: -20, z: -209 }, target: { x: 20, y: 25, z: -100, targetX: -10, targetY: 25, targetZ: -100 }},\r\n                { color: 0x00ff00, position: { x: 0, y: -20, z: -409 }, target: { x: 20, y: 25, z: -300, targetX: -10, targetY: 25, targetZ: -300 }  }\r\n            ];\r\n            const downTexture = textureLoader.load('downarrow.png');\r\n            // Create planes and add to the scene\r\n            const r_arrows = [];\r\n            redData.forEach(data => {\r\n                const squareGeometry = new THREE.PlaneGeometry(20, 20); // Ensure it's a square\r\n                const squareMaterial = new THREE.MeshBasicMaterial({ map: downTexture, transparent: true });\r\n                const square = new THREE.Mesh(squareGeometry, squareMaterial);\r\n                square.position.set(data.position.x, data.position.y, data.position.z);\r\n                square.rotation.y = -Math.PI;\r\n                scene.add(square);\r\n                r_arrows.push({ mesh: square, target: data.target });\r\n            });\r\n\r\n            // Raycaster for detecting clicks\r\n            const raycaster = new THREE.Raycaster();\r\n            const mouse = new THREE.Vector2();\r\n            let isAnimating = false;\r\n\r\n            const onComplete = () => {\r\n                isAnimating = false;\r\n            };\r\n\r\n            // Add event listener for click\r\n            renderer.domElement.addEventListener('click', (event) => {\r\n                // Calculate mouse position in normalized device coordinates\r\n                mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n                mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\r\n\r\n                // Update the raycaster with the camera and mouse position\r\n                raycaster.setFromCamera(mouse, camera);\r\n\r\n                // Calculate objects intersecting the ray\r\n                const intersectGArrows = raycaster.intersectObjects(g_arrows.map(c => c.mesh));\r\n                const intersectRArrows = raycaster.intersectObjects(r_arrows.map(c => c.mesh));\r\n                const intersectPosters = raycaster.intersectObjects(posters.map(p => p.mesh));\r\n                \r\n                if (intersectGArrows.length > 0) {\r\n                    const intersectGArrow = g_arrows.find(c => c.mesh === intersectGArrows[0].object);\r\n                    if (intersectGArrow) {\r\n                        console.log('Circle clicked!');\r\n                        // Change camera position\r\n                        gsap.to(camera.position, { duration: 1, x: intersectGArrow.target.x, y: intersectGArrow.target.y, z: intersectGArrow.target.z });\r\n                        // Change orbital target\r\n                        controls.target.set(intersectGArrow.target.targetX, intersectGArrow.target.targetY, intersectGArrow.target.targetZ);\r\n                        controls.update();\r\n                    }\r\n                }\r\n                if (intersectRArrows.length > 0) {\r\n                    const intersectRArrow = r_arrows.find(c => c.mesh === intersectRArrows[0].object);\r\n                    if (intersectRArrow) {\r\n                        console.log('Circle clicked!');\r\n                        // Change camera position\r\n                        gsap.to(camera.position, { duration: 1, x: intersectRArrow.target.x, y: intersectRArrow.target.y, z: intersectRArrow.target.z });\r\n                        // Change orbital target\r\n                        controls.target.set(intersectRArrow.target.targetX, intersectRArrow.target.targetY, intersectRArrow.target.targetZ);\r\n                        controls.update();\r\n                    }\r\n                }\r\n                // if (intersectPosters.length > 0) {\r\n                //     const intersectedPoster = posters.find(p => p.mesh === intersectPosters[0].object);    \r\n                //     if (intersectedPoster) {\r\n                //         console.log('Poster clicked!');\r\n                //         isAnimating = true;\r\n                //         // Change camera position\r\n                //         gsap.to(camera.position, { duration: .1, x: intersectedPoster.target.x, y: intersectedPoster.target.y, z: intersectedPoster.target.z, onComplete});\r\n                //         // Change orbital target\r\n                //         controls.target.set(intersectedPoster.controls.x, intersectedPoster.controls.y, intersectedPoster.controls.z);\r\n                //         controls.enableRotate = false;\r\n                //         controls.update();\r\n                //             if (!document.getElementById('backButton')) {\r\n                //                 const square = document.createElement('div');\r\n                //                 square.id = 'backButton'; // Assign an id to the div\r\n                //                 square.style.position = 'absolute';\r\n                //                 square.style.top = '100px';\r\n                //                 square.style.left = '100px';\r\n                //                 square.style.width = '50px';\r\n                //                 square.style.height = '50px';\r\n                //                 // square.style.backgroundColor = 'red';\r\n                //                 square.style.whiteSpace = 'nowrap'; // No text wrap\r\n                //                 square.style.fontSize = '40px'; // Increase font size\r\n                //                 square.style.fontWeight = 'bold'; // Make text bold\r\n                //                 square.innerText = '<-- Back'; // Add text to the div\r\n                        \r\n                //                 square.onclick = () => {\r\n                //                     if (isAnimating) {\r\n                //                         console.log('isAnimating is true');\r\n                //                         return; // Skip the rest of the function if isAnimating is true\r\n                //                     }\r\n                //                     console.log('Square clicked!');\r\n                //                     isAnimating = true; // Set isAnimating to true at the start of the animation\r\n                //                     controls.enableRotate = true;\r\n                //                     gsap.to(camera.position, {\r\n                //                         duration: 1,\r\n                //                         x: 0,\r\n                //                         y: 25,\r\n                //                         z: 100,\r\n                //                         onComplete: () => {\r\n                //                             controls.target.set(0, 25, 100);\r\n                //                             controls.update();\r\n                //                             document.body.removeChild(square);\r\n                //                             isAnimating = false;\r\n                //                         }\r\n                //                     }); \r\n                //                 };\r\n                //                 document.body.appendChild(square);\r\n                //             }\r\n                //         }\r\n                //     }\r\n\r\n            });\r\n\r\n            // Function to move camera on arrow keys\r\n\r\n            function moveCamera(event) {\r\n                if (isAnimating) return;\r\n            \r\n                isAnimating = true;\r\n                const currentCameraPosition = camera.position;\r\n                const currentTargetPosition = controls.target;\r\n                const speed = 25;\r\n            \r\n                switch (event.key) {\r\n                    case 'ArrowUp':\r\n                        gsap.to(currentCameraPosition, { duration: .5, x: 0, y: 25, z: currentCameraPosition.z - speed, onComplete });\r\n                        controls.target.set(0, 25, currentTargetPosition.z - speed);\r\n                        controls.update();\r\n                        break;\r\n                    case 'ArrowDown':\r\n                        gsap.to(currentCameraPosition, { duration: .5, x: 0, y: 25, z: currentCameraPosition.z + speed, onComplete });\r\n                        controls.target.set(0, 25, currentTargetPosition.z + speed);\r\n                        controls.update();\r\n                        break;\r\n                    case 'ArrowLeft':\r\n                        gsap.to(currentCameraPosition, { duration: .5, x: currentCameraPosition.x + speed, y: 0 , z: currentCameraPosition.z, onComplete });\r\n                        controls.target.set(currentTargetPosition.x + speed, 0, currentTargetPosition.z);\r\n                        controls.update();\r\n                        break;\r\n                    case 'ArrowRight':\r\n                        gsap.to(currentCameraPosition, { duration: .5, x: currentCameraPosition.x - speed, y: 0 , z: currentCameraPosition.z, onComplete });   \r\n                        controls.target.set(currentTargetPosition.x - speed, 0, currentTargetPosition.z);\r\n                        controls.update();\r\n                        break;\r\n                }\r\n            }\r\n\r\n            // Add event listener for arrow keys\r\n            window.addEventListener('keydown', moveCamera);\r\n\r\n            // Function to handle window resize\r\n            function onWindowResize() {\r\n                // Update camera aspect ratio and projection matrix\r\n                camera.aspect = window.innerWidth / window.innerHeight;\r\n                camera.updateProjectionMatrix();\r\n\r\n                // Update renderer size\r\n                renderer.setSize(window.innerWidth, window.innerHeight);\r\n            }\r\n\r\n            // Add event listener for window resize\r\n            window.addEventListener('resize', onWindowResize, false);\r\n\r\n            const animate = () => {\r\n            if (isAnimatingWork) {\r\n                requestAnimationFrame(animate);\r\n                controls.update();\r\n                renderer.render(scene, camera);\r\n\r\n                }\r\n            };\r\n            animate();\r\n            }\r\n\r\n\r\n\r\n        init();\r\n\r\n        // Cleanup on component unmount\r\n        return () => {\r\n            isAnimatingWork = false;\r\n            if (renderer) {\r\n                console.log('Disposing renderer');\r\n                renderer.dispose();\r\n            }\r\n            if (scene) {\r\n                console.log('Disposing scene');\r\n                scene.traverse((object) => {\r\n                    if (object.geometry) {\r\n                        object.geometry.dispose();\r\n                    }\r\n                    if (object.material) {\r\n                        if (Array.isArray(object.material)) {\r\n                            object.material.forEach((material) => material.dispose());\r\n                        } else {\r\n                            object.material.dispose();\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    return <canvas ref={canvasRef} />;\r\n};\r\n\r\nexport default Background;","import React, { useState, useEffect, useRef } from 'react';\r\nimport Navbar from './navbar/Navbar';\r\nimport Background from './background/Background';\r\nimport LoadingBar from 'react-top-loading-bar';\r\n\r\nconst About = () => {\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const loadingBarRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        loadingBarRef.current.continuousStart();\r\n\r\n        const handleLoad = () => {\r\n            console.log('Loading...');\r\n            loadingBarRef.current.complete();\r\n            setTimeout(() => {\r\n                setIsLoaded(true);\r\n            }, 200); \r\n        };\r\n\r\n        setTimeout(() => {\r\n            handleLoad();\r\n        }, 200);\r\n\r\n        return () => {\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"About\">\r\n            <div className=\"outer\" style={{ display: isLoaded ? 'block' : 'none' }}>\r\n                <Navbar />\r\n                <div className=\"bottom\">\r\n                    <Background />\r\n                </div>\r\n            </div>\r\n            <LoadingBar color=\"#1f1f1f\" ref={loadingBarRef}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport gsap from 'gsap';\r\n\r\nconst Navbar = () => {\r\n  useEffect(() => {\r\n    const navbar = document.querySelector('.navbar');\r\n    const navbar_container = document.querySelector('.navbar-container');\r\n    let isFadedOut = false;\r\n    let interval;\r\n\r\n    const fadeOut = () => {\r\n      if (navbar) {\r\n        gsap.to(navbar, { opacity: 0, duration: .5 });\r\n        isFadedOut = true;\r\n      }\r\n    };\r\n\r\n    const fadeIn = () => {\r\n      if (navbar) {\r\n        gsap.fromTo(navbar, { opacity: 0 }, { opacity: 1, duration: .5 });\r\n        isFadedOut = false;\r\n        clearInterval(interval);\r\n        interval = setInterval(fadeOut, 4000);\r\n      }\r\n    };\r\n\r\n    // Call fadeIn on component mount\r\n    fadeIn();\r\n\r\n    interval = setInterval(fadeOut, 4000);\r\n\r\n    if (navbar) {\r\n      navbar.addEventListener('mouseover', fadeIn);\r\n    }\r\n\r\n    \r\n    const links = document.querySelectorAll('.navbar-links div');\r\n\r\n    const addBrackets = (event) => {\r\n      const div = event.target;\r\n      const textNode = div.firstChild;\r\n      if (textNode && textNode.nodeType === Node.TEXT_NODE) {\r\n        if (textNode.textContent.includes(\"Projects\")) return;\r\n        textNode.textContent = `[${textNode.textContent}]`;\r\n        console.log(textNode.textContent);\r\n        div.style.color = 'grey';\r\n      }\r\n    };\r\n    \r\n    const removeBrackets = (event) => {\r\n      const div = event.target;\r\n      const textNode = div.firstChild;\r\n      if (textNode && textNode.nodeType === Node.TEXT_NODE) {\r\n        if (textNode.textContent.includes(\"Projects\")) return;\r\n        textNode.textContent = textNode.textContent.replace(/^\\[|\\]$/g, '');\r\n        console.log(textNode.textContent);\r\n        div.style.color = 'black';\r\n      }\r\n    };\r\n\r\n    if (navbar) {\r\n      links.forEach(link => {\r\n        link.addEventListener('mouseover', addBrackets);\r\n        link.addEventListener('mouseout', removeBrackets);\r\n      });\r\n    }\r\n\r\n    const handleResize = debounce(() => {\r\n      if (navbar) {\r\n        gsap.set(navbar, { opacity: 1});\r\n        isFadedOut = false;\r\n        fadeIn();  // Reinitialize the fadeIn behavior\r\n      }\r\n    }, 300);\r\n    \r\n    window.addEventListener('resize', handleResize);\r\n    \r\n    \r\n    return () => {\r\n      clearInterval(interval); // Cleanup the interval on component unmount\r\n      if (navbar) {\r\n        navbar.removeEventListener('mouseover', fadeIn);\r\n        links.forEach(link => {\r\n          link.removeEventListener('mouseover', addBrackets);\r\n          link.removeEventListener('mouseout', removeBrackets);\r\n        });\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const debounce = (func, wait) => {\r\n    let timeout;\r\n    return (...args) => {\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(() => func.apply(this, args), wait);\r\n    };\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"navbar-container\">\r\n        <nav className=\"navbar\" style={{opacity:'0'}}>\r\n            <div className=\"navbar-links\">\r\n                <div><Link to=\"/work\">Work</Link></div>\r\n                <div><Link to=\"/projects\">[Projects]</Link></div>\r\n            </div>\r\n            <div className=\"navbar-logo\">\r\n                <Link to=\"/\">You Gao</Link>\r\n            </div>\r\n            <div className=\"navbar-links\">\r\n                <div><Link to=\"/about\">About Me</Link></div>\r\n                <div><a href=\"https://blog.yougao.dev/\" target=\"_blank\">To Blog</a></div>\r\n            </div>\r\n        </nav>\r\n    </div>\r\n);\r\n};\r\n\r\nexport default Navbar;","export async function getRecentCommits(username) {\r\n    const commitList = document.getElementById('commit-list');\r\n    commitList.innerHTML = ''; // Clear any existing commits\r\n    console.log('Fetching commits for', username);\r\n    if (!username) {\r\n        alert('Please enter a GitHub username.');\r\n        return;\r\n    }\r\n\r\n    try {\r\n        // Get the user's repositories\r\n        const reposResponse = await fetch(`https://api.github.com/users/${username}/events`);\r\n        const events = await reposResponse.json();\r\n    \r\n        if (events.length === 0) {\r\n            commitList.innerHTML = '<li>No repositories found for this user.</li>';\r\n            return;\r\n        }\r\n    \r\n        // Variable to store all commits\r\n        let allCommits = [];\r\n    \r\n        // Iterate over events to get recent commits\r\n        for (const event of events) {\r\n            if (event.type !== 'PushEvent') {\r\n                continue;\r\n            }\r\n\r\n            // Get the repo\r\n            const repo = event.repo;\r\n            const repoName = repo.name;\r\n\r\n            // Get the Paylod\r\n            const payload = event.payload;\r\n            \r\n            // payload.commits is an array of commits \r\n            const commits = payload.commits;\r\n\r\n            // Add the commits to the allCommits array\r\n            allCommits = allCommits.concat(commits.map(commit => ({\r\n                repoName: repoName,\r\n                message: commit.message,\r\n                date: new Date(event.created_at)\r\n            })));\r\n        }\r\n    \r\n        // Sort the commits by date in descending order\r\n        allCommits.sort((a, b) => b.date - a.date);\r\n    \r\n        // Append the most recent 10 commits to the commitList\r\n        return allCommits.slice(0, 10);\r\n    } catch (error) {\r\n        console.error('Error fetching commits:', error);\r\n        commitList.innerHTML = '<li>Error fetching commits. Please try again later.</li>';\r\n    }\r\n}\r\n\r\nexport async function setCommits() {\r\n    const username = 'You-Gao';\r\n    const commitList = await getRecentCommits(username);\r\n    console.log('Commits:', commitList);\r\n    if (commitList) {\r\n        const commitListElement = document.getElementById('commit-list');\r\n        commitListElement.innerHTML = commitList.map(commit => {\r\n            const options = { \r\n                month: '2-digit', \r\n                day: '2-digit', \r\n                year: 'numeric', \r\n                hour: '2-digit', \r\n                minute: '2-digit', \r\n                hour12: true \r\n            };\r\n            const formattedDate = new Date(commit.date).toLocaleString('en-US', options);\r\n            return `<li>${commit.repoName}: ${commit.message}</li>`;\r\n        }).join('');\r\n    }\r\n}","import gsap from \"gsap\";\r\nimport ScrollTrigger from \"gsap/ScrollTrigger\";\r\nimport { useLayoutEffect, useRef, useEffect } from \"react\";\r\nimport \"./Background.css\";\r\nimport React from \"react\";\r\nimport { getRecentCommits } from \"./recent_commits\";\r\ngsap.registerPlugin(ScrollTrigger);\r\n\r\nexport default function Scene() {\r\n  const component = useRef();\r\n  const slider = useRef();\r\n\r\nconst initializeAnimations = () => {\r\n  ScrollTrigger.getAll().forEach(trigger => trigger.kill());\r\n  let ctx = gsap.context(() => {\r\n      const pixelsPause = 300;\r\n\r\n      let panels = gsap.utils.toArray(\".panel\");\r\n      gsap.to(panels, {\r\n          xPercent: -100 * (panels.length - 1),\r\n          ease: \"none\",\r\n          scrollTrigger: {\r\n              trigger: slider.current,\r\n              scrub: 1,\r\n              pin: true,\r\n              snap: {\r\n                  snapTo: 1 / (panels.length - 1),\r\n                  duration: { min: 0.1, max: 0.5 }, // Adjust duration for less snappy effect\r\n                  ease: \"power3.inOut\" // Adjust easing for smoother snapping\r\n              },\r\n              start: `top+=0 top`,\r\n              end: () => \"+=\" + (window.innerWidth * panels.length),\r\n          },\r\n      });\r\n\r\n      // for panel add a scroll trigger on its img\r\n      panels.forEach((panel, i) => {\r\n        if (i === 0) return; // Skip the first panel\r\n        const img = panel.querySelector(\"img\");\r\n\r\n        gsap.fromTo(img, \r\n            { opacity: 0 }, // Start opacity at 0\r\n            { \r\n                opacity: 1, // End opacity at 1\r\n                ease: \"none\",\r\n                scrollTrigger: {\r\n                    trigger: panel, // Use the panel as the trigger\r\n                    scrub: 1,\r\n                    start: `${(window.innerWidth * i + i * 150)}px`,\r\n                    end: `${(window.innerWidth * i + i * 150)}px`,\r\n                    onEnter: () => console.log(\"ScrollTrigger entered\"), // Log when the trigger is entered\r\n                },\r\n            }\r\n        );\r\n\r\n        const h1 = panel.querySelector(\"h1\");\r\n        const h2 = panel.querySelector(\"h2\");\r\n        const p = panel.querySelector(\"p\");\r\n\r\n        gsap.fromTo(h1,\r\n            { x: -200, opacity: 0 },\r\n            {\r\n                x: 0,\r\n                opacity: 1,\r\n                ease: \"none\",\r\n                scrollTrigger: {\r\n                    trigger: panel,\r\n                    scrub: 1,\r\n                    start: `${(window.innerWidth * i + i * 150)}px`,\r\n                    end: `${(window.innerWidth * i + i * 150)}px`,\r\n                },\r\n            }\r\n        );\r\n\r\n        gsap.fromTo(h2,\r\n            { x: -200, opacity: 0 },\r\n            {\r\n                x: 0,\r\n                opacity: 1,\r\n                ease: \"none\",\r\n                scrollTrigger: {\r\n                    trigger: panel,\r\n                    scrub: 1,\r\n                    start: `${(window.innerWidth * i + i * 150)}px`,\r\n                    end: `${(window.innerWidth * i + i * 150)}px`,\r\n                },\r\n            }\r\n        );\r\n\r\n        gsap.fromTo(p,\r\n            { x: -200, opacity: 0 },\r\n            {\r\n                x: 0,\r\n                opacity: 1,\r\n                ease: \"none\",\r\n                scrollTrigger: {\r\n                    trigger: panel,\r\n                    scrub: 1,\r\n                    start: `${(window.innerWidth * i + i * 150)}px`,\r\n                    end: `${(window.innerWidth * i + i * 150)}px`,\r\n                },\r\n            }\r\n        );\r\n      });\r\n      \r\n      // ------ First Panel -------\r\n      // panel with class 'a'\r\n      gsap.fromTo(document.querySelector(\".a img\"), \r\n          { opacity: 0 }, // Start opacity at 0\r\n          { \r\n              opacity: 1, // End opacity at 1\r\n              ease: \"none\",\r\n              delay: 0.5,              \r\n              scrollTrigger: {\r\n                trigger: document.querySelector(\".a img\"),\r\n                start: \"top bottom\",\r\n                end: \"bottom top\",\r\n                toggleActions: \"play reverse play reverse\",\r\n              },\r\n          }\r\n      );\r\n\r\n      // fade from right for h1, h2, p\r\n      gsap.fromTo(document.querySelector(\".a h1\"), \r\n          { x:-100, opacity: 0 }, \r\n          { \r\n              x: 0, \r\n              opacity: 1, \r\n              ease: \"none\",\r\n              delay: 0.5,              \r\n              scrollTrigger: {\r\n                trigger: document.querySelector(\".a h1\"),\r\n                start: \"top bottom\",\r\n                end: \"bottom top\",\r\n                toggleActions: \"play reverse play reverse\",\r\n              },\r\n\r\n          }\r\n      );\r\n      gsap.fromTo(document.querySelector(\".a h2\"), \r\n          { x: -100, opacity: 0 }, \r\n          { \r\n              x: 0, \r\n              opacity: 1, \r\n              ease: \"none\",\r\n              delay: 0.5,\r\n              scrollTrigger: {\r\n                trigger: document.querySelector(\".a h2\"),\r\n                start: \"top bottom\",\r\n                end: \"bottom top\",\r\n                toggleActions: \"play reverse play reverse\",\r\n              },\r\n\r\n          }\r\n      );\r\n      gsap.fromTo(document.querySelector(\".a p\"), \r\n          { x:-100, opacity: 0 }, \r\n          { \r\n              x: 0, \r\n              opacity: 1, \r\n              ease: \"none\",\r\n              delay: 0.5,\r\n              scrollTrigger: {\r\n                trigger: document.querySelector(\".a p\"),\r\n                start: \"top bottom\",\r\n                end: \"bottom top\",\r\n                toggleActions: \"play reverse play reverse\",\r\n              },\r\n\r\n          }\r\n      );\r\n\r\n  }, slider);\r\n};\r\n\r\n  useEffect(() => {\r\n    initializeAnimations();\r\n\r\n    const handleResize = () => {\r\n      initializeAnimations();\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    window.addEventListener('load', function() {\r\n        window.scrollTo(0, 0);\r\n        ScrollTrigger.refresh();\r\n      });\r\n\r\n    const username = 'You-Gao';\r\n    const fetchCommits = async () => {\r\n        try {\r\n            const commitList = await getRecentCommits(username);\r\n            const limitCommits = commitList.slice(0, 10);\r\n            console.log('Commits:', commitList);\r\n            if (limitCommits) {\r\n                const commitListElement = document.getElementById('commit-list');\r\n                commitListElement.innerHTML = limitCommits.map(commit => {\r\n                  const options = { \r\n                    month: '2-digit', \r\n                    day: '2-digit', \r\n                    year: 'numeric', \r\n                    hour: '2-digit', \r\n                    minute: '2-digit', \r\n                    hour12: true \r\n                };\r\n                const formattedDate = new Date(commit.date).toLocaleString('en-US', options);\r\n                    return `<li>${commit.repoName}: ${commit.message} (${formattedDate})</li>`;\r\n                }).join('');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching commits:', error);\r\n        }\r\n    };\r\n\r\n    fetchCommits();\r\n\r\n  return () => {\r\n    window.removeEventListener('resize', handleResize);\r\n    ScrollTrigger.getAll().forEach(trigger => trigger.kill());\r\n    window.scrollTo(0, 0);\r\n  };\r\n}, []);\r\n\r\n  return (\r\n    <div className=\"Projects\" ref={component}>\r\n      <div className=\"overlay-text\">Scroll ></div>\r\n      <div ref={slider} className=\"container\">\r\n        <div className=\"description panel a\">\r\n              <div className=\"project-container\">\r\n                <a href=\"https://www.yougao.dev/Personal-Website/\"> \r\n                <h1>Personal Website v1</h1>\r\n                </a>\r\n                <h2>React, HTML/CSS/JS, Three.js, GSAP</h2>\r\n                <p className=\"\">My current website. First attempt with React, Three.js, and GSAP.</p>\r\n                <img src=\"/site.png\"/>\r\n              </div>\r\n          </div>\r\n        <div className=\"description panel\">\r\n            <div className=\"project-container\">\r\n              <a href=\"https://blog.yougao.dev/\">\r\n              <h1>Personal Blog</h1>\r\n              </a>\r\n              <h2>Jekyll, HTML/CSS/JS</h2>\r\n              <p className=\"\">My personal blog where I share my thoughts on various topics.</p>\r\n              <img src=\"/blog.png\"/>\r\n            </div>\r\n        </div>\r\n        <div className=\"panel\">\r\n            <div className=\"project-container\">\r\n                <a href=\"https://www.yougao.dev/UVA-Event-Oracle/\">\r\n                <h1>UVA Event Oracle</h1>\r\n                </a>\r\n                <h2>Web-Scraping, Python, Vertex AI</h2>\r\n                <p className=\"\">A static page that displays events happening at UVA after ETL.</p>\r\n                <img src=\"/uva-event-oracle.png\"/>\r\n            </div>\r\n        </div>\r\n        <div className=\"panel\">\r\n            <div className=\"project-container\">\r\n                <a href=\"https://www.yougao.dev/UVA-Electives-Oracle/\">\r\n                <h1>UVA Elective Oracle</h1>\r\n                </a>\r\n                <h2>APIs, Python, HTML/CSS/JS</h2>\r\n                <p className=\"\">A web application for interacting w/ interesting electives at UVA</p>\r\n                <img src=\"/uva-elective-oracle.png\"/>\r\n            </div>\r\n        </div>\r\n        <div className=\"panel\">\r\n            <div className=\"project-container\">\r\n                <a href=\"https://github.com/You-Gao/Kaggle-Archive\">\r\n                <h1>Kaggle Archive</h1>\r\n                </a>\r\n                <h2>Jupyter, Pandas, Scikit-learn, Matplotlib</h2>\r\n                <p className=\"\">An archive of my data-science projects from classes and Kaggle</p>\r\n                <img src=\"/kaggle.png\"/>\r\n            </div>\r\n        </div>\r\n        <div className=\"panel\">\r\n            <div className=\"project-container\">\r\n            <a href=\"https://github.com/You-Gao/\" target=\"_blank\"><h1>Check My GitHub to Stay Updated!</h1></a>\r\n            <br/>\r\n            <br/>\r\n            <h2 className=\"margin-top\" >What I'm Up To (My Recent Commits):</h2>\r\n            <ul id=\"commit-list\"></ul>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Navbar from './navbar/Navbar';\r\nimport Background from './background/Background';\r\nimport './Projects.css';\r\nimport LoadingBar from 'react-top-loading-bar';\r\nimport { useRef } from 'react';\r\n\r\nfunction About() {\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const loadingBarRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        loadingBarRef.current.continuousStart();\r\n\r\n        const handleLoad = () => {\r\n            console.log('Loading...');\r\n            loadingBarRef.current.complete();\r\n            setTimeout(() => {\r\n                setIsLoaded(true);\r\n            }, 250); \r\n        };\r\n\r\n        setTimeout(() => {\r\n            handleLoad();\r\n        }, 250);\r\n\r\n        return () => {\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"About\">\r\n            {isLoaded ? (\r\n                <>\r\n                    <Navbar />\r\n                    <Background />\r\n                </>\r\n            ) : (\r\n                <LoadingBar color=\"#1f1f1f\" ref={loadingBarRef}/>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React, { useState, useEffect } from 'react';\r\nimport { HashRouter, Route, Routes } from 'react-router-dom';\r\nimport Home from './home/Home';\r\nimport About from './about/About';\r\nimport Work from './work/Work';\r\nimport Projects from './projects/Projects';\r\nimport './App.css'; \r\n\r\nfunction App() {\r\n    return (\r\n        <Routes>\r\n            <Route path=\"/\" element={<Home />} />\r\n            <Route path=\"/about\" element={<About />} />\r\n            <Route path=\"/work\" element={<Work />} />\r\n            <Route path=\"/projects\" element={<Projects />} />\r\n        </Routes>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport App from './App';\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}